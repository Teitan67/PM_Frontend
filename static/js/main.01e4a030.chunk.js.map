{"version":3,"sources":["components/Footer.js","services/Connection/backEndLink.js","functions/alerts.js","services/cookieService.js","services/auth/authservices.js","functions/changeVisibility.js","functions/pagesFunction.js","functions/closeSession.js","components/MenuCompanySelect.js","components/Status.js","services/CABE.js","pages/CompanyDashBoard.js","components/Menu.js","components/ProgressBar.js","components/ModalComponent.js","functions/dateFormat.js","functions/generateDataSetExcel.js","components/ExcelDocument.js","functions/searchInObject.js","pages/CycleInvetory.js","pages/CycleInventoryGraph.js","components/BarGraph.js","pages/KPI.js","components/CartaProducto.js","components/Catalogue.js","components/LineAreaGraph.js","pages/Inventory.js","pages/Lobby.js","pages/PikingSystem.js","pdfConfig/pdfConfig.js","components/OrderPDF.js","pages/PurchaseOrder.js","components/App.js","pages/Login.js","index.js"],"names":["Footer","Date","getFullYear","toString","react_default","a","createElement","Fragment","className","src","alt","this","ActualYear","Component","server","url","automaticCloseAlert","type","message","Swal","fire","icon","title","showConfirmButton","timer","confirmCloseAlert","cookies","Cookies","setNewCookie","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","identification","value","timeExpiration","tiempo","expires","wrap","_context","prev","next","now","set","path","httpOnly","stop","_x","_x2","_x3","apply","arguments","getValueCookie","get","removeCookie","remove","baseURLAuth","selectWithDataService","authservices_regeneratorRuntime","object","route","URL","responseBack","axios","post","data","then","response","catch","error","abrupt","closeAllPages","_step","_iterator","_createForOfIteratorHelper","document","getElementsByClassName","s","n","done","style","display","err","e","f","openPage","id","page","getElementById","CloseAllPages","OpenCompanyDashBoard","_OpenCompanyDashBoard","boton","pagesFunction_regeneratorRuntime","click","OpenLobby","OpenCycleInventory","_OpenCycleInventory","_callee2","_context2","OpenCycleInventoryGraph","_callee3","_context3","OpenLogin","_callee4","button","_context4","CloseCompanySession","closeSession","closeSession_regeneratorRuntime","window","location","reload","MenuCompany","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","href","onClick","role","data-bs-toggle","aria-expanded","index_esm","aria-labelledby","data-bs-target","aria-controls","tabIndex","data-bs-dismiss","aria-label","aria-current","status","Fail","code","Description","Undefined","Success","ServerFail","getInformationWithData","_ref2","CABE_regeneratorRuntime","create_Delete_Update_Information","_ref3","_x4","_x5","CompanyDashBoard","state","General","CompanysofUser","userName","info","temporal","setState","console","log","company","name","idCompany","directoryLogo","idTypeofUser","companyid","information","fullname","address","city","webSite","_this2","hidden","getCompanysAssigned","MenuCompanySelect_MenuCompany","map","i","SelectCompany","Footer_Footer","Menu","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","companyId","typeUser","enableModles","needModlesCharge","Modules","ProductInfo","CycleInventory","KPI","ReportGraphs","_AssignModules","Menu_regeneratorRuntime","sent","_AssignStatesModules","modules","element","AssignModules","Menu_createForOfIteratorHelper","t0","t1","finish","AssignStatesModules","bi_index_esm","tb_index_esm","fa_index_esm","_OpenPurchaseOrder","OpenPurchaseOrder","bs_index_esm","_OpenKPIGraph","OpenKPIGraph","ProgressBar","props","min","max","size","progressBarRef","React","createRef","setValue","undefined","valor","height","ref","aria-valuenow","aria-valuemin","aria-valuemax","width","ModalOrders","Modal","show","fullscreen","onHide","close","Header","closeButton","Title","Body","children","formatInputDate","datevalue","arrayDate","split","formatInputDateQuery","date2","formatInputDateQuerytoInput","OrderArrayByDate","array","b","date1","temp","assign","CompareDates","datesta","dateend","DateFormatMAS90","date","arr","FormatQueryReturnDate","div","String","div2","FormatQueryReturnDateWithDash","getDateFromReports","datenow","getMonth","getDate","getDateYearMonthDayDash","getActualDateUTC","toISOString","getDataSet","headers","keys","dataset","columns","generateDataSetExcel_createForOfIteratorHelper","wch","fill","patternType","fgColor","rgb","bgColor","font","color","push","_step2","_iterator2","_step3","_iterator3","col","sz","alignment","horizontal","ExcelFile","ReactExport","ExcelSheet","ExcelDocument","filename","archname","dataSet","sheetname","getIndexElement","findIndex","toUpperCase","CycleInvetory","porcetaje","showModal1","showModal2","showModal3","showModal4","habilitar","chekvalue","checkHistory","selectedItem","selectedCycleInventory","secureTransaction","generalHistory","outBounds","purchaseOrders","generalHistoryFilter","oldCycleInventory","detailOldCycleSelected","detailOldCycleSelectedFilter","optionsSelect1","label","cycleInventoryStorage","closeBy","createBy","days","finishDate","lastUpadeDate","realFinishDate","startDate","updateBy","QuantityItems","FilterQuantity","Detail","DetailFilter","CheckedItems","secureTransaction1","valueSearchBar","CycleInvetory_regeneratorRuntime","search","target","getBySearchBar","valueRadioButton","stat","getByStat","searchOlderCycleInventoryDetail","filter","item","ItemCode","toLowerCase","includes","BIN","handleModalOpen","modal","handleModalClose","onChangeQuantity","index","indexOf","realQuantity","Number","onChangeFilterHistory","Type","ProgrressBarRef","productLine","DetailFilter4","difference","DetailFilter2","DetailFilter3","busqueda","current","idcompany","datos","getDetailCycleInventory","arrayChecked","allArray","allinformation","realData","mergeDataCheck","tempo","getCheckedItems","completePercentage","disableTransaction","realDays","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","_preConfirm","_callee8","actualDate","habilDays","_context8","getTime","getDay","allowOutsideClick","isLoading","_callee9","result","_context9","isConfirmed","_this3","getLastCycleInventory","_x6","enableTransaction","showDenyButton","backdrop","denyButtonText","_ref4","_callee11","_context11","_this4","isDenied","_x7","idQuant","resultquant","flag","idcycleInventoryHeader","countBy","systemQuantity","Quantity","count","total","CycleInvetory_createForOfIteratorHelper","addValue","cantidad","getOldCycleInventory","Start","End","data2","data3","generalHistoryData","pickList","transfer","purchase","adjust","InventStart","InventEnd","DeleteRepeatBins","Inv2Start","Inv2End","InvStart","getDataMayorInventory","InvEnd","categories","consolidateTable","it","fech","splice","_loop","outbounds","transfers","adjusts","InfoArray","_iterator4","_step4","row","Categoria","structure","NoOrder","BIN2","QuantityOrder","QuantityShipped","User","OrderNumber","description","OldQuantity","NewQuantity","username","Date2","_iterator5","_step5","CustomerName","CustomerNo","Cliente","NoCliente","OrdenNo","_iterator6","_step6","BINSalida","BINEntrada","_iterator7","_step7","VendorNo","VendorName","_iterator8","_step8","_iterator9","_step9","unshift","_iterator10","_step10","actualTypes","_iterator11","_step11","itemCode","displaySnipper","val","val2","_iterator12","_step12","Num","QuantityOrdered","CreationDate","_iterator13","_step13","InvoiceNo","SalespersonNo","InvoiceDate","html","_preConfirm2","_callee20","login","password","_context20","getPopup","querySelector","showValidationMessage","_step14","proccessInfo","JSON","parse","stringify","headerKeys","_iterator14","_step15","_iterator15","head","comm","comentary","_preConfirm3","_callee23","coment","_context23","_this5","diff","actual","start","date3","date4","date5","date6","preliminarDays","Math","abs","inhDays","_step16","copyOfHistory","_iterator16","addDifferenceSymbol","_step17","_iterator17","DetailFilter1","toFixed","snipper","_this6","disabled","startNewCycleInventory","endCycleInventory","openOlCycleInventory","isNaN","RemainingDays","ProgressBar_ProgressBar","autoComplete","placeholder","onChange","checked","htmlFor","components_ExcelDocument","generateInfo","getKPI","defaultValue","textStatus","addComentary","setCycleInventoryDetailInfo","updateCycleInventoryDetail","getGeneralHistory","updateSystemQuantity","ModalComponent","getOldDetailCycleInventory","startDate2","finishDate2","realFinishDate2","realQuantityDays","getInfoProduct","react_select_esm","options","generateExcelDataForHistory","CycleInvetoryGraph","datapie","labels","datasets","backgroundColor","borderColor","borderWidth","optionsbar","plugins","text","responsive","interaction","mode","intersect","scales","x","stacked","y","databar","faker","datatype","number","stack","optionsarea","legend","position","dataarea","optionsLine2","databars","ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Filler","react_chartjs_2_dist","BarGraph","KPIInfo","KPIInfoFilter","GraphData","BarGraph1","data1","generateGraphDays","setTitle","completeInfo","setLabels","setData","getKPIInfo","ItemsContados","ExBinaria","BarGraph_BarGraph","CartaProducto","UPC","OnHand","Catalogue","Catalogo","ProductosMostrados","buscarProductos","Productos","producto","contiene","abbreviatedDesc","upc","retornarProducto","buscador","respuesta","setTimeout","focus","parametro","toLocaleLowerCase","Padre","Products","products","unitCost","originalUnitCost","quantityOrdered","quantityReceived","totalCost","nombrePadre","obtenerProductos","aria-hidden","onKeyUp","getProducto","CartaProducto_CartaProducto","quantity","LineAreaGraph","Inventory","LineAreaGraph1","Catalogue_Catalogue","rows","LineAreaGraph_LineAreaGraph","Lobby","PikingSystem","pdfConfig","StyleSheet","create","HeaderStyle","HeaderMargin","top","BusinessLogo","left","ContactInfo","textAlign","fontSize","marginInfo","marginLeft","padding","flexDirection","marginBottom","OrderTitleStyle","marginTop","OrderInformation","TitleStyle","TextSeparator","InfoEncabezadoStyle","TextSeparator2","Table","CabeceraTabla","ColumnaNormal","ColumnaGrande","CuerpoTabla","borderBottom","borderStyle","ColumnaGrandeCuerpo","ColumnaNormalCuerpo","ColumnaNormalCuerpo2","ColumnaNormalCuerpo3","Fila","ColumnaPie","OrderPDF","showModal","Llaves","State","resultado","forEach","llave","colorButton","react_pdf_browser_es","minHeight","fixed","companyLogo","contactInfo","OrderTitle","OrderInfo1","OrderInfo2","headerTable","tit","bodyTable","elemento","break","EncabezadoInfo","headerBodyTable","fila","e2","bottomInfo","PurchaseOrder","purchaseOrderHeader","Carrier","orderDate","completionDate","creationDate","vendorNo","vendorName","comment","companyPrintHeader","totals","finalquantityOrderedTotal","finalquantityOrderedReceived","finalTotalCost","disableHeader","modalPurchase","oldPurchaseOrderHeader","vendorSelectInformation","onTarget","ident","PurchaseOrder_regeneratorRuntime","calculateTotals","onTargerHeader","varChange","getPurchaseOrderHeader","createNewPurchaseOrder","getPrintHeaderCompany","disableTransactions","noOrder","orderNumber","enableTransactions","header","tot","defineHeader","_callee7","_context7","clearDashBoardPurchaseOrder","cost","totalquant","_ref5","_ref6","_callee10","_context10","totalquantOrdered","totalquantReceived","totalcost","PurchaseOrder_createForOfIteratorHelper","temporal2","order","OrderNo","OrderDate","Comment","Status","sizeVendor","detailData","temporalproducts","prod","completeDesc","itemStatus","itemURLImage","lastUpdateDate","QuantityReceived","UnitCost","unitPrice","OriginalUnitCost","vendor","ven","customerNo","change","getVendors","print","cancelPurchaseOrder","colorStateText","stateInWords","handleChange","bind","product","removeProduct","createPurchaseOrder","updatePurchaseOrder","OrderPDF_OrderPDF","extraAnotation","SelectOldPurchaseOrder","TotalQuantity","TotalCost","App","CompanyDashBoard_CompanyDashBoard","Menu_Menu","Lobby_Lobby","CycleInvetory_CycleInvetory","CycleInventoryGraph_CycleInvetoryGraph","KPI_KPI","Inventory_Inventory","PurchaseOrder_PurchaseOrder","PikingSystem_PikingSystem","Login","loginStorage","onChangeById","idState","onKeyDown","Login_regeneratorRuntime","btn","btn_logo","innerHTML","md5","datos2","token","surname","App_App","ReactDOM","render","StrictMode","Login_Login"],"mappings":"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","file":"static/js/main.01e4a030.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/footer-style.css\"\r\n\r\nexport default class Footer extends Component {\r\n\r\n    ActualYear() {\r\n        const time = new Date()\r\n        var year = time.getFullYear()\r\n        return year.toString()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='GenFooter'>\r\n                    <div className='container-fluid justify-content-center text-center bg-dark text-white pt-4 GenFooter'>\r\n\r\n                        <div className='logoFooter pt-2 pb-2'>\r\n                            <img src='/assets/logoM.png' alt='MayalandSolutions' />\r\n\r\n                            <p>Copyright &#169; {this.ActualYear()} Mayaland Solutions.<br /> All Rights Reserved.</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","const server={\r\n  //url:\"http://localhost:4203\"      //DEVELOPMENT\r\n  //url: \"http://134.209.119.149:4203\" //OCEANO DIGITAL\r\n  url:\"http://44.209.109.124:4200\"  //AWS\r\n}\r\n\r\nexport default server","import Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nexport const automaticCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const confirmCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: true, \r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: true,\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default  {automaticCloseAlert,confirmCloseAlert}","import Cookies from \"universal-cookie\";\r\n\r\n\r\nconst cookies=new Cookies();\r\n\r\n\r\nexport const setNewCookie=async(identification,value,timeExpiration)=>{\r\n    var tiempo=60*timeExpiration;\r\n    var expires = (new Date(Date.now()+ tiempo*1000));\r\n    cookies.set(identification, value, { path: \"*\",expires:expires,httpOnly:false});\r\n}\r\n\r\nexport const getValueCookie=(identification)=>{\r\n   return cookies.get(identification)\r\n}\r\n\r\nexport const removeCookie=(identification)=>{\r\n    cookies.remove(identification)\r\n}\r\n\r\n\r\n\r\nexport default {setNewCookie,getValueCookie,removeCookie}","import axios from \"axios\";\r\nimport server from \"../Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../../functions/alerts\"\r\nimport { Navigate} from \"react-router-dom\";\r\nimport React from \"react\"\r\nimport { getValueCookie } from \"../cookieService\";\r\nconst baseURLAuth=server.url+\"/auth\"\r\n\r\n\r\nexport const selectWithDataService=async (object,route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack\r\n    await axios.post(URL,{data:object}).then(\r\n\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\nexport const ProtectedRoute=({children})=>{\r\n    const temp=getValueCookie('sessionAuthToken')\r\n    \r\n    if(!temp){\r\n        return <Navigate to=\"/login\" />\r\n    }\r\n        return children\r\n    \r\n}\r\n\r\n\r\n\r\nexport default {selectWithDataService,ProtectedRoute}","\r\nexport function closeAllPages() {\r\n  let coleccion = document.getElementsByClassName('page');\r\n  for (let objetc of coleccion) {\r\n    objetc.style.display = 'none';\r\n  }\r\n}\r\n\r\nexport function openPage(id) {\r\n  let page = document.getElementById(id);\r\n  if (page) {\r\n    page.style.display = '';\r\n  }\r\n}\r\n\r\nexport default { closeAllPages, openPage }","import { closeAllPages,openPage } from \"./changeVisibility\";\r\nimport { removeCookie } from \"../services/cookieService\";\r\n\r\n\r\nexport function CloseAllPages() {\r\n    closeAllPages();\r\n}\r\n\r\nexport async function OpenCompanyDashBoard() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('catalogueOfCompanyActioner')\r\n    await boton.click()\r\n    openPage( \"App\");\r\n    openPage( \"CompanyDashBoard\");\r\n}\r\n\r\nexport function OpenLobby() {\r\n    CloseAllPages();\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"Lobby\")\r\n    //OpenPikingSystem()\r\n}\r\n\r\nexport async function OpenCycleInventory() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('actionatorCycleInventory')\r\n    await boton.click()\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"CycleInventory\")\r\n}\r\nexport function OpenCycleInventoryGraph(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"CycleInventoryGraph\")\r\n}\r\n\r\nexport async function OpenKPIGraph(){\r\n    CloseAllPages()\r\n    var boton=document.getElementById('actionatorKPI')\r\n    await boton.click()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"KPIGraph\")\r\n}\r\n\r\nexport function OpenLogin() {\r\n    CloseAllPages();\r\n    openPage( \"login\")\r\n}\r\n\r\nexport  function OpenInventory(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"Inventory\")\r\n}\r\n\r\nexport function OpenPikingSystem(){\r\n    CloseAllPages()\r\n    openPage(\"App\");\r\n    openPage(\"GeneralPages\");\r\n    openPage(\"PikingSystem\");\r\n}\r\nexport async function OpenPurchaseOrder(){\r\n    CloseAllPages()\r\n    var button=document.getElementById('vendorsFromPurchaseOrder')\r\n    await button.click()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"PurchaseOrder\")\r\n}\r\n\r\nexport function CloseCompanySession(){\r\n    removeCookie('Company')\r\n    OpenCompanyDashBoard()\r\n\r\n}\r\n\r\nexport default{OpenLogin,CloseAllPages,OpenCycleInventory,OpenLobby,OpenCompanyDashBoard,OpenCycleInventoryGraph,CloseCompanySession}","\r\nimport { removeCookie } from \"../services/cookieService\"\r\nimport { OpenLogin } from \"./pagesFunction\"\r\n\r\nexport const closeSession=async ()=>{\r\n    await removeCookie('userName')\r\n    await  removeCookie('name')\r\n    await removeCookie('surname')\r\n    await removeCookie('sessionAuthToken')\r\n    await removeCookie('Company')\r\n    window.location.reload()\r\n    await OpenLogin()\r\n}\r\n\r\nexport default {closeSession}","import React, { Component } from 'react'\r\nimport \"../css/menuCompany-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport {OpenCompanyDashBoard} from \"../functions/pagesFunction\"\r\n\r\nexport class MenuCompany extends Component {\r\n\r\n\r\n \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='menuCompany'>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                               \r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={()=>OpenCompanyDashBoard()}>\r\n                                    <img src='/assets/logoM.png' alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' />Hi {getValueCookie('name')} {getValueCookie('surname')}<AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                       \r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","export const status = {\r\n\r\n    Fail:{code:-1,Description:\"Operation fail\"},\r\n    Undefined:{code:0,Description:\"Operation Undefined\"},\r\n    Success:{code:1,Description:\"operation successful\"},\r\n    ServerFail:{code:504,Description:'Server is not responding please contact the system administrators'}\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport server from \"../services/Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../functions/alerts\"\r\nimport { status } from \"../components/Status\";\r\nimport { getValueCookie } from \"./cookieService\";\r\nconst baseURLAuth=server.url\r\n\r\n\r\nexport const getInformationNoData=async (route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    await axios.get(URL).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n       \r\n        responseBack={status:status.ServerFail,response:[]};\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n       // confirmCloseAlert('incorrect','Error in the Server Response: '+status.ServerFail.Description)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const getInformationWithData=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const create_Delete_Update_Information=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\n\r\n\r\nexport default {getInformationNoData,create_Delete_Update_Information,getInformationWithData}","import React, { Component } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport { MenuCompany } from \"../components/MenuCompanySelect\";\r\nimport \"../css/companyDash-style.css\"\r\nimport { getInformationWithData } from \"../services/CABE\";\r\n//import { OpenLobby } from '../functions/pagesFunction';\r\nimport { getValueCookie, setNewCookie } from \"../services/cookieService\";\r\nexport default class CompanyDashBoard extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            CompanysofUser: []\r\n        }\r\n    }\r\n\r\n    async getCompanysAssigned() {\r\n        const data = {\r\n            userName: getValueCookie('userName')\r\n        }\r\n        const info = await getInformationWithData('/company/CatalogueofCompanies', data)\r\n        if (info.status.code === 1) {\r\n            const temporal = this.state.General\r\n            temporal.CompanysofUser = info.data\r\n            this.setState({ General: temporal })\r\n            console.log(info)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async SelectCompany(company) {\r\n            setNewCookie('Company', company.name , 50)\r\n            setNewCookie('CompanyId',company.idCompany,50)\r\n            setNewCookie('CompanyLogo',company.directoryLogo,50)\r\n            setNewCookie('TypeUser',company.idTypeofUser,50)\r\n            const data={\r\n                companyid:company.idCompany\r\n            }\r\n            const information= await getInformationWithData('/company/information',data)\r\n    \r\n            if(information.status.code===1){\r\n                setNewCookie('fullName',information.data[0].fullname,50)\r\n                setNewCookie('address',information.data[0].address,50)\r\n                setNewCookie('warehouse',information.data[0].city+\" Warehouse\",50)\r\n                setNewCookie('website',information.data[0].webSite,50)\r\n            }\r\n            window.location.reload()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"companydash\">\r\n                <button hidden id=\"catalogueOfCompanyActioner\" onClick={() => this.getCompanysAssigned()}></button>\r\n                <MenuCompany />\r\n                <div className=\"container-fluid generalContainer contPrincipal\" id=\"actualPage\">\r\n                    <div className=\"title\">\r\n                        <p className=\"text-center display-3\">Hello, please select a Company: </p>\r\n                    </div>\r\n                    <div className=\"container-fluid decoratorBar\"></div>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {\r\n                                    this.state.General.CompanysofUser.map((company, i) => (\r\n                                        <div key={i} className=\"contCompany\" onClick={() => this.SelectCompany(company)}>\r\n                                            <div className=\"titecompany text-center\">\r\n                                                <img src={company.directoryLogo} alt=\"logo\" />\r\n                                                <p>{company.name}<br /> <br /><br /><br /></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport \"../css/menu-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineReconciliation, AiOutlineClockCircle, AiOutlineHome, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle, AiOutlineAreaChart, AiTwotoneSnippets,AiFillDropboxSquare } from \"react-icons/ai\";\r\nimport { BiCartAlt } from \"react-icons/bi\";\r\nimport { TbBuildingWarehouse } from \"react-icons/tb\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { CloseCompanySession, OpenCycleInventory, OpenCycleInventoryGraph, OpenInventory,OpenPikingSystem, OpenKPIGraph, OpenLobby,OpenPurchaseOrder } from '../functions/pagesFunction';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport { BiExit } from \"react-icons/bi\";\r\nimport {BsBoxSeam} from \"react-icons/bs\"\r\nimport { getInformationWithData } from '../services/CABE';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            directoryLogo: getValueCookie('CompanyLogo'),\r\n            companyId: getValueCookie('CompanyId'),\r\n            typeUser: getValueCookie('TypeUser'),\r\n            enableModles:[],\r\n            needModlesCharge:true\r\n        },\r\n        Modules:{\r\n            ProductInfo:true,\r\n            CycleInventory:true,\r\n            KPI:true,\r\n            ReportGraphs:true\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    async AssignModules() {\r\n        const data = {\r\n            typeUser: this.state.General.typeUser,\r\n            companyId: this.state.General.companyId\r\n        }\r\n        const response = await getInformationWithData('/company/Modules', data)\r\n        \r\n        if (response.status.code === 1) {\r\n            const temporal=this.state.General\r\n            temporal.enableModles=response.data\r\n            this.setState({General:temporal})\r\n        }\r\n\r\n    }\r\n\r\n    async AssignStatesModules(){\r\n        if(this.state.General.needModlesCharge){\r\n            const temporal=this.state.General\r\n            temporal.needModlesCharge=false\r\n            const modules=this.state.Modules\r\n            await this.AssignModules()\r\n            \r\n            for (const element of this.state.General.enableModles) {\r\n                \r\n                switch(element.name){\r\n                    case 'Cycle Inventory':\r\n                        modules.CycleInventory=false\r\n                        break;\r\n                    case 'KPI':\r\n                        modules.KPI=false;\r\n                        break\r\n                    case 'Reports Graphs':\r\n                        modules.ReportGraphs=false;\r\n                        break\r\n                    case 'Product Information':\r\n                        modules.ProductInfo=false;\r\n                        break\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({General:temporal,Modules:modules})\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                                <button onClick={()=>this.AssignStatesModules()} className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\" aria-controls=\"offcanvasNavbar\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={() => OpenLobby()}>\r\n                                    <img src={this.state.General.directoryLogo} alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' /> Hi {getValueCookie('name')} {getValueCookie('surname')} <AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => OpenLobby()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"offcanvas offcanvas-start\" tabIndex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Menu Options</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => OpenLobby()}>Home <AiOutlineHome /></a>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Inventory management <AiOutlineReconciliation /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Products Information <BiCartAlt /></a></li>\r\n                                            <li hidden={this.state.Modules.CycleInventory} onClick={() => OpenCycleInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cyclical Inventory <AiOutlineClockCircle /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Warehouse management <TbBuildingWarehouse /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li  onClick={() => OpenPikingSystem()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Picking System<FaClipboardList /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Purchase Order <AiFillDropboxSquare /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenPurchaseOrder()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Purchase Order <BsBoxSeam /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n\r\n                                    <li hidden={(this.state.Modules.ReportGraphs&&this.state.Modules.KPI)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Reports <AiOutlineAreaChart /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ReportGraphs}  onClick={() => OpenCycleInventoryGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cyclical Inventory <AiOutlineClockCircle /></a></li>\r\n                                            <li hidden={this.state.Modules.KPI} onClick={() => OpenKPIGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">KPI (Key Performance Indicators) <AiTwotoneSnippets /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => CloseCompanySession()}>Close Company Session <BiExit /></a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => OpenLobby()}><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => closeSession()}><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default  class ProgressBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.progressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        min:0, \r\n        max:100,\r\n        value:0,\r\n        size:50\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setValue(95);\r\n    }\r\n\r\n    \r\n    configBar(min,max,size = 25){\r\n        this.setState({min:min});\r\n        this.setState({max:max});\r\n        this.setState({value:min});\r\n        this.setState({size:size});\r\n    }\r\n\r\n    setValue(valor){\r\n        if(valor>=this.state.min && valor <= this.state.max){ \r\n            this.setState({value:valor});\r\n        }else{\r\n            console.error('ERROR: La cantidad en la progress bar no esta dentro de los limites establecidos, revise el codigo de configuración');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"progress\" style={{height: this.state.size+\"px\"}} ref={this.progressBarRef}>\r\n                <div\r\n                    className=\"progress-bar progress-bar-striped progress-bar-animated bg-primary \"\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={this.state.value}\r\n                    aria-valuemin={this.state.min}\r\n                    aria-valuemax={this.state.max}\r\n                    style={{ width: this.state.value+\"%\" }}>\r\n                    {this.state.value}%\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Modal} from 'react-bootstrap'\r\nimport '../css/table-responsive.css'\r\nconst ModalOrders = (props) => {\r\n    return (\r\n      <>\r\n      \r\n        <Modal title={props.title} show={props.show} fullscreen={true} onHide={props.close}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className='container'>\r\n              {props.children}\r\n              </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n \r\nexport default ModalOrders;","export function formatInputDate(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('-')\r\n    if(arrayDate.length===3){\r\n    return arrayDate[1]+\"/\"+arrayDate[2]+\"/\"+arrayDate[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function formatInputDateQuery(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('T')\r\n    if(arrayDate.length===2){\r\n    const date2=arrayDate[0].split('-')\r\n    if(date2.length===3){\r\n        return date2[1]+\"/\"+date2[2]+\"/\"+date2[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function formatInputDateQuerytoInput(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('T')\r\n    if(arrayDate.length===2){\r\n    const date2=arrayDate[0].split('-')\r\n    if(date2.length===3){\r\n        return date2[0]+\"-\"+date2[1]+\"-\"+date2[2]\r\n    }else{\r\n        return \"\"\r\n    }\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function OrderArrayByDate(array){\r\n    for(let a=0;a<array.length;a++){\r\n        for(let b=0;b<(array.length-a-1);b++){\r\n            const date1=array[b].Date.split('/')\r\n            const date2=array[b+1].Date.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n            \r\n            if(date3>date4){\r\n                var temp=Object.assign({},array[b])\r\n                array[b]=Object.assign({},array[b+1])\r\n                array[b+1]=Object.assign({},temp)\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\nexport function CompareDates(datesta,dateend){\r\n    \r\n            const date1=datesta.split('/')\r\n            const date2=dateend.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n           \r\n            if(date3<=date4){\r\n                return true\r\n            }\r\n\r\n            return false\r\n        }\r\n  \r\n\r\n    }\r\n\r\nexport function DateFormatMAS90(date){\r\n    var arr=date.split('-')\r\n    if(arr.length===3){\r\n        return arr[1]+\"/\"+arr[2]+\"/\"+arr[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function FormatQueryReturnDate(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        var div2=div[0].split('-')\r\n        if(div2.length===3){\r\n            return div2[1]+\"/\"+div2[2]+\"/\"+div2[0]\r\n        }else{\r\n            return \"\"\r\n        }\r\n\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function FormatQueryReturnDateWithDash(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        return div[0].split('-')\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function getDateFromReports(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"-\"+datenow.getDate()+\"-\"+datenow.getFullYear()\r\n}\r\n\r\nexport function getDateYearMonthDayDash(){\r\n    const datenow=new Date()\r\n    return datenow.getFullYear()+'-'+(datenow.getMonth()+1)+\"-\"+datenow.getDate()\r\n}\r\n\r\nexport function ActualDate(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"/\"+datenow.getDate()+\"/\"+datenow.getFullYear()\r\n}\r\nexport function getActualDateUTC(){\r\n    const datenow=new Date()\r\n    return datenow.toISOString()\r\n}\r\n\r\n\r\nexport default {formatInputDate,OrderArrayByDate,FormatQueryReturnDate,ActualDate,getActualDateUTC,formatInputDateQuery,FormatQueryReturnDateWithDash,\r\n    getDateYearMonthDayDash,CompareDates,formatInputDateQuerytoInput,DateFormatMAS90}","export function getDataSet(info, headers,keys) {\r\n    var dataset = [{\r\n        columns: [],\r\n        data: []\r\n    }]\r\n   \r\n    for (const column of headers) {\r\n        const data = {\r\n            title: column, width: { wch: 10 },\r\n            style: {\r\n                fill: {\r\n                    patternType: \"solid\",\r\n                    fgColor: { rgb: \"000000\" },\r\n                    bgColor: { rgb: \"FFFFFF\" }\r\n                },\r\n                font:{\r\n                    color:{rgb:\"FFFFFF\"}\r\n                }\r\n            }\r\n        }\r\n\r\n        dataset[0].columns.push(data)\r\n    }\r\n\r\n    for(const data of info){\r\n        var temp=[]\r\n        for (const key of keys) {\r\n            const col= {\r\n                value: String(data[key]),\r\n                style: {\r\n                    font: {sz: \"10\"},\r\n                    alignment:{horizontal:\"left\"}\r\n                }\r\n            }\r\n            temp.push(col)\r\n        }\r\n    dataset[0].data.push(temp)\r\n\r\n    }\r\n\r\n    return dataset\r\n}\r\n\r\nexport default {getDataSet}","import ReactExport from 'react-data-export';\r\nimport React from 'react';\r\nimport {AiFillFileExcel } from \"react-icons/ai\"\r\nconst ExcelFile = ReactExport.ExcelFile\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet\r\n\r\nconst ExcelDocument=(props)=>{\r\n    return(\r\n        <>\r\n        \r\n        <ExcelFile  element={<button type=\"button\" hidden={props.hidden} className=\"btn btn-success btn-lg w-100 h-100\">Download Report In XLSX <AiFillFileExcel/></button>} filename={props.archname}>\r\n            <ExcelSheet dataSet={props.data} name={props.sheetname}/>\r\n        </ExcelFile>\r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExcelDocument","export function getIndexElement(array, key, element){\r\n    const index = array.findIndex(code => {  \r\n        return String(code[key]).toUpperCase() === element.toUpperCase()\r\n    })\r\n\r\n    return index\r\n}\r\n\r\nexport default {getIndexElement}","import React, { Component } from 'react'\r\nimport ProgressBar from '../components/ProgressBar'\r\nimport { AiOutlineSearch, AiFillCalendar } from \"react-icons/ai\"\r\nimport '../css/table-responsive.css'\r\nimport '../css/general-style.css'\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { automaticCloseAlert } from '../functions/alerts'\r\nimport { CompareDates, DateFormatMAS90, formatInputDate, formatInputDateQuery, FormatQueryReturnDate, FormatQueryReturnDateWithDash, getActualDateUTC, getDateFromReports, getDateYearMonthDayDash, OrderArrayByDate } from '../functions/dateFormat'\r\nimport { getDataSet } from '../functions/generateDataSetExcel'\r\nimport ExcelDocument from '../components/ExcelDocument'\r\nimport Select from 'react-select';\r\nimport { getIndexElement } from '../functions/searchInObject'\r\n\r\n\r\nexport default class CycleInvetory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ProgrressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        dataset: [{\r\n            columns: [],\r\n            data: []\r\n        }],\r\n        porcetaje: 0,\r\n        General: {\r\n            showModal1: false,\r\n            showModal2: false,\r\n            showModal3: false,\r\n            showModal4: false,\r\n            habilitar: false,\r\n            chekvalue: '0',\r\n            checkHistory: '0',\r\n            selectedItem: '',\r\n            selectedCycleInventory: null,\r\n            secureTransaction: false,\r\n            generalHistory: [],\r\n            outBounds: [],\r\n            purchaseOrders: [],\r\n            generalHistoryFilter: [],\r\n            oldCycleInventory: [],\r\n            detailOldCycleSelected: [],\r\n            detailOldCycleSelectedFilter: [],\r\n            optionsSelect1:[{value:'All', label:'All'}],\r\n            \r\n        },\r\n\r\n        cycleInventoryStorage: {\r\n            Header: {\r\n                closeBy: null,\r\n                createBy: '',\r\n                days: 0,\r\n                finishDate: '',\r\n                id: 0,\r\n                lastUpadeDate: '',\r\n                realFinishDate: '',\r\n                startDate: '',\r\n                status: 0,\r\n                updateBy: '',\r\n                QuantityItems:0,\r\n                FilterQuantity:0\r\n            },\r\n            Detail: [],\r\n            DetailFilter: [],\r\n            CheckedItems: []\r\n        },\r\n        secureTransaction1:false\r\n\r\n    }\r\n    valueSearchBar = async e => {\r\n        let search = e.target.value\r\n        this.getBySearchBar(search)\r\n    }\r\n\r\n    valueRadioButton = async e => {\r\n        document.getElementById('searchCycleInv1').value = \"\"\r\n        let stat = e.target.value\r\n        const temporal = this.state.General\r\n        temporal.chekvalue = stat\r\n        this.setState({ General: temporal })\r\n        this.getByStat(stat)\r\n    }\r\n\r\n\r\n\r\n    searchOlderCycleInventoryDetail = e => {\r\n        let search = e.target.value\r\n\r\n\r\n        var DetailFilter = this.state.General.detailOldCycleSelected.filter((item) => {\r\n            if (item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.status.toString().toLowerCase().includes(search.toLowerCase())) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        \r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelectedFilter = DetailFilter\r\n        \r\n        this.setState({ General: temporal})\r\n    }\r\n\r\n\r\n\r\n    getBySearchBar(search) {\r\n        \r\n        if (search !== \"\" && this.state.General.chekvalue !== '-1') {\r\n            if (this.state.General.chekvalue==='0'||this.state.General.chekvalue==='1'){\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(this.state.General.chekvalue)) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            \r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter\r\n            temporal.Header.FilterQuantity=DetailFilter.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }else if(this.state.General.chekvalue==='2'){\r\n            var DetailFilter4 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(\"1\")&&item.difference!==0) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            \r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter4\r\n            temporal.Header.FilterQuantity=DetailFilter4.length\r\n            this.setState({ cycleInventoryStorage: temporal }) \r\n        }\r\n        } else if (search !== \"\") {\r\n            \r\n            var DetailFilter2 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase()))) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter2\r\n            temporal.Header.FilterQuantity=DetailFilter2.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n\r\n        } else {\r\n            this.getByStat(this.state.General.chekvalue)\r\n        }\r\n\r\n    }\r\n\r\n    getByStat(stat) {\r\n        if (stat !== \"-1\") {\r\n            if(stat===\"0\"||stat===\"1\"){\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.status.toString().toLowerCase().includes(stat.toLowerCase())) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            const temporal = this.state.cycleInventoryStorage\r\n\r\n            temporal.DetailFilter = DetailFilter\r\n            temporal.Header.FilterQuantity=DetailFilter.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }else if (stat===\"2\"){\r\n           \r\n            var DetailFilter3 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.difference!==0) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            const temporal = this.state.cycleInventoryStorage\r\n\r\n            temporal.DetailFilter = DetailFilter3\r\n            temporal.Header.FilterQuantity=DetailFilter3.length\r\n            this.setState({ cycleInventoryStorage: temporal }) \r\n        \r\n        }\r\n\r\n            \r\n        } else {\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = temporal.Detail\r\n            temporal.Header.FilterQuantity=temporal.Detail.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCategory(stat) {\r\n        var busqueda = \"\"\r\n        switch (stat) {\r\n            case \"0\":\r\n                busqueda = \"purchase\"\r\n                break;\r\n            case \"1\":\r\n                busqueda = \"transferencia\"\r\n                break;\r\n            case \"2\":\r\n                busqueda = \"ajuste\"\r\n                break;\r\n            case \"3\":\r\n                busqueda = \"outbound\"\r\n                break;\r\n            default:\r\n                busqueda = \"\"\r\n                break;\r\n        }\r\n        return busqueda;\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        this.ProgrressBarRef.current.setValue(0);\r\n\r\n    }\r\n\r\n    async getLastCycleInventory() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const route = '/inventory/lastCycle/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header = datos.data[0]\r\n\r\n                if (temporal.Header.status === 0) {\r\n                    \r\n                    await this.getDetailCycleInventory(temporal.Header.id, \"actual\")\r\n                } else {\r\n                    temporal.Detail = []\r\n                    temporal.DetailFilter = []\r\n                    await this.setState({ cycleInventoryStorage: temporal })\r\n                }\r\n            } else {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header.status = 1\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async getOldCycleInventory() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const route = '/invertory/oldCycleInventorys/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = datos.data\r\n                await this.setState({ General: temporal })\r\n\r\n            } else {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = []\r\n                await this.setState({ General: temporal })\r\n            }\r\n        }\r\n    }\r\n\r\n    mergeDataCheck(arrayChecked, allArray) {\r\n\r\n        for (let a = 0; a < arrayChecked.length; a++) {\r\n            for (let b = 0; b < allArray.length; b++) {\r\n                if (arrayChecked[a].ItemCode === allArray[b].ItemCode && arrayChecked[a].BIN === allArray[b].BIN && arrayChecked[a].status === 1) {\r\n                    allArray[b] = arrayChecked[a]\r\n                    break\r\n                }\r\n            }\r\n\r\n        }\r\n        return allArray\r\n    }\r\n\r\n\r\n    async getDetailCycleInventory(id, type) {\r\n        const data = {\r\n            id: id,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (type === \"actual\") {\r\n            const route2 = '/inventory/allProductsCycle/post';\r\n            const allinformation = await getInformationWithData(route2, data)\r\n\r\n            if (datos.status.code === 1 && allinformation.status.code === 1) {\r\n                const realData = this.mergeDataCheck(datos.data, allinformation.data)\r\n                \r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Detail = realData\r\n                temporal.DetailFilter = realData\r\n                temporal.Header.QuantityItems=realData.length\r\n                temporal.Header.FilterQuantity=realData.length\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                const tempo = this.state.cycleInventoryStorage\r\n                tempo.CheckedItems = await this.getCheckedItems()\r\n                await this.setState({ cycleInventoryStorage: tempo })\r\n                await this.getByStat('0')\r\n                await this.completePercentage()\r\n            }\r\n        } else if (type === \"old\") {\r\n            const temporal = this.state.General\r\n            temporal.detailOldCycleSelected = datos.data\r\n            temporal.detailOldCycleSelectedFilter = datos.data\r\n            await this.setState({ General: temporal })\r\n        }\r\n\r\n    }\r\n    getOldDetailCycleInventory(item) {\r\n        const temporal = this.state.General\r\n        temporal.selectedCycleInventory = item\r\n        this.setState({ General: temporal })\r\n        this.getDetailCycleInventory(item.id, \"old\")\r\n    }\r\n\r\n\r\n    enableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    async disableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = true\r\n        await this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async startNewCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            days: 0,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            userName: getValueCookie('userName'),\r\n            realDays:0\r\n        }\r\n        await Swal.fire({\r\n            title: 'Number of Days of Cyclical Inventory',\r\n            input: 'number',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Confirm',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async (days) => {\r\n                data.days = days\r\n                var actualDate = new Date();\r\n                var finishDate = new Date(actualDate.getTime() + Number(Number(days) * 86400000))\r\n                var habilDays=0\r\n                while (actualDate<=finishDate){\r\n                    if(actualDate.getDay()===0||actualDate.getDay()===6){\r\n                        habilDays++\r\n                    }\r\n                    actualDate=new Date(actualDate.getTime()+86400000)\r\n                }\r\n                \r\n                data.realDays=Number(data.days)+Number(habilDays)\r\n                return await create_Delete_Update_Information('/invertory/newCycle/post', data)\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n\r\n            if (result.isConfirmed) {\r\n                await this.getLastCycleInventory()\r\n                await Swal.fire({\r\n                    title: `The Cyclical Inventory was created!`,\r\n                })\r\n\r\n            }\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    async endCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            userName: getValueCookie('userName')\r\n        }\r\n        await Swal.fire({\r\n            title: 'Do you want to end the actual Cyclical Inventory?',\r\n            showDenyButton: true,\r\n            backdrop:true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    const res = await create_Delete_Update_Information('/invertory/closeCycle/post', data)\r\n                    if (res.status.code === 1) {\r\n                        await this.getLastCycleInventory()\r\n                        Swal.fire('Cyclical inventory are closed!', '', 'success')\r\n                        this.setState({ porcetaje: 0 })\r\n                        this.ProgrressBarRef.current.setValue(0);\r\n\r\n                    } else {\r\n                        Swal.fire('Cyclical inventory could not be closed', '', 'error')\r\n                    }\r\n\r\n                } else if (result.isDenied) {\r\n                    Swal.fire('Changes are not saved', '', 'info')\r\n                }\r\n            }\r\n\r\n        })\r\n        this.enableTransaction()\r\n    }\r\n\r\n    async setCycleInventoryDetailInfo(item, idQuant) {\r\n        this.disableTransaction()\r\n        const data={\r\n            ItemCode:item.ItemCode,\r\n            BIN:item.BIN,\r\n            company:getValueCookie('Company')\r\n        }\r\n\r\n        const resultquant= await getInformationWithData('/invertory/getQuantity/post',data)\r\n        if(resultquant.status.code===1){\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        var flag = true\r\n        if (index !== -1) {\r\n\r\n            if (temporal.Detail[index].idcycleInventoryHeader !== 0) {\r\n                flag = false\r\n            }\r\n\r\n            temporal.Detail[index].idcycleInventoryHeader = this.state.cycleInventoryStorage.Header.id\r\n            \r\n            temporal.Detail[index].countBy = getValueCookie('userName')\r\n            temporal.Detail[index].date = getActualDateUTC()\r\n            temporal.Detail[index].systemQuantity=resultquant.data[0].Quantity\r\n            temporal.Detail[index].difference = temporal.Detail[index].realQuantity - resultquant.data[0].Quantity\r\n            temporal.Detail[index].status = 1\r\n            var response\r\n            if (flag) {\r\n                response = await create_Delete_Update_Information('/invertory/insertDetailCycle/post', temporal.Detail[index])\r\n            } else {\r\n                response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n            }\r\n            if (response.status.code === 1) {\r\n\r\n                automaticCloseAlert('correct', 'The item was check!')\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                await this.completePercentage()\r\n            } else {\r\n                automaticCloseAlert('incorrect', 'The item was not checked')\r\n            }\r\n        }\r\n        const tempo = this.state.cycleInventoryStorage\r\n        tempo.CheckedItems = await this.getCheckedItems()\r\n        await this.setState({ cycleInventoryStorage: tempo })\r\n        await this.enableTransaction()\r\n        }\r\n\r\n    }\r\n\r\n    async updateCycleInventoryDetail(item) {\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        if (index !== -1) {\r\n            temporal.Detail[index].countBy = null\r\n            temporal.Detail[index].status = 0\r\n            await this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n    completePercentage() {\r\n        this.setState({ porcetaje: 0 })\r\n        var count = 0;\r\n        var total = this.state.cycleInventoryStorage.Detail.length\r\n\r\n        for (const item of this.state.cycleInventoryStorage.Detail) {\r\n            if (item.status === 1)\r\n                count++\r\n        }\r\n\r\n        for (let a = 0; a < ((count * 100) / total); a++) {\r\n            this.addValue()\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    textStatus(value) {\r\n        if (value === 0) {\r\n            return \"Not checked\"\r\n        }\r\n        return \"Checked\"\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    addValue() {\r\n        let cantidad = this.state.porcetaje;\r\n        cantidad++;\r\n        this.setState({ porcetaje: cantidad });\r\n        this.ProgrressBarRef.current.setValue(cantidad);\r\n    }\r\n\r\n    handleModalOpen = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = true\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    handleModalClose = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async openOlCycleInventory() {\r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelected = []\r\n        temporal.detailOldCycleSelectedFilter = []\r\n        temporal.selectedCycleInventory = null\r\n        this.setState({ General: temporal })\r\n        this.getOldCycleInventory()\r\n        await this.handleModalOpen(\"showModal2\")\r\n    }\r\n\r\n    async getInfoProduct() {\r\n        this.setState({secureTransaction1:true})\r\n        var date1 = formatInputDate(document.getElementById('searchHistoryCycleInvDate1').value)\r\n        var date2 = formatInputDate(document.getElementById('searchHistoryCycleInvDate2').value)\r\n        const data = {\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            Start: date1,\r\n            End: date2,\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId')\r\n        }\r\n        const data2={\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId'),\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            date:date1\r\n        }\r\n        const data3={\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId'),\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            date:date2\r\n        }\r\n\r\n        //AQUI COLOCAR LAS LLAMADAS A LOS DATOS\r\n        //const route = '/invertory/getGeneralHistory/post';\r\n        const generalHistoryData = await getInformationWithData('/invertory/getGeneralHistory/post', data)\r\n        const pickList = await getInformationWithData('/pickList/history/getByItemCode', data)\r\n        const transfer = await getInformationWithData('/transfer/history/getByItemCode', data)\r\n        const purchase = await getInformationWithData('/purchase/history/getByItemCode', data)\r\n        const adjust = await getInformationWithData('/adjustment/history/getByItemCode', data)\r\n        const InventStart=await getInformationWithData('/Items/getQuantityHistory',data2)\r\n        const InventEnd=await getInformationWithData('/Items/getQuantityHistory',data3)\r\n        \r\n        if (InventStart.status.code===1&&InventEnd.status.code===1&&generalHistoryData.status.code === 1 && pickList.status.code === 1 && transfer.status.code === 1 && purchase.status.code === 1 && adjust.status.code === 1) {\r\n            const Inv2Start=await this.DeleteRepeatBins(data2,InventStart.data)\r\n            const Inv2End=await this.DeleteRepeatBins(data3,InventEnd.data)\r\n            const InvStart=this.getDataMayorInventory(Inv2Start,'Start')\r\n            const InvEnd=this.getDataMayorInventory(Inv2End,'End')\r\n            const categories=this.state.General\r\n            categories.optionsSelect1=[{ value: 'All', label: 'All'}]\r\n            this.setState({General:categories})\r\n            await this.consolidateTable(pickList.data, purchase.data, transfer.data, adjust.data, generalHistoryData.data,InvStart,InvEnd)\r\n        }\r\n        this.setState({secureTransaction1:false})\r\n    }\r\n\r\n   async DeleteRepeatBins(data,information){\r\n    const result=await getInformationWithData('/inventory/getDeletedBins/post',data)\r\n    if(result.status.code===1){\r\n        \r\n        for(let it of result.data) {\r\n            for (let a = information.length-1; a >= 0; a--) {\r\n                if(information[a].BIN===it.BIN&&CompareDates(formatInputDateQuery(information[a].fech),formatInputDateQuery(it.date))){\r\n                    information.splice(a,1)\r\n                }\r\n            }\r\n        }\r\n        \r\n        return information\r\n    }else{\r\n        return []\r\n    }\r\n   }\r\n    getDataMayorInventory(data,type){\r\n       var information=[]\r\n       for (const it of data) {\r\n            const index=information.findIndex(element=>{\r\n                return String(element.BIN).toLowerCase()===it.BIN.toLowerCase()\r\n            })\r\n            if(index===-1){\r\n                if(type==='Start'){\r\n                it.Type='Inventory Start'\r\n                }else{\r\n                it.Type='Inventory End'\r\n                }\r\n                information.push(it)\r\n            }\r\n       } \r\n\r\n\r\n       return information\r\n    }\r\n\r\n\r\n\r\n    async consolidateTable(outbounds, purchase, transfers, adjusts, generalHistory,InvStart,InvEnd) {\r\n        \r\n\r\n        var InfoArray = []\r\n\r\n        for (const row of generalHistory) {\r\n            if (row.Categoria !== \"General\") {\r\n                const structure = {\r\n                    Type: '',\r\n                    NoOrder: '',\r\n                    Description:'',\r\n                    BIN: '',\r\n                    BIN2: '',\r\n                    QuantityOrder: '',\r\n                    QuantityShipped: '',\r\n                    User: '',\r\n                    Date: ''\r\n                }\r\n                structure.Type = row.Categoria\r\n                structure.NoOrder = row.OrderNumber\r\n                structure.Description=row.description\r\n                structure.BIN = row.BIN\r\n                structure.BIN2 = row.BIN2\r\n                structure.QuantityOrder = row.OldQuantity\r\n                structure.QuantityShipped = row.NewQuantity\r\n                structure.User = row.username\r\n                structure.Date = row.Date2\r\n                InfoArray.push(structure)\r\n            }\r\n\r\n        }\r\n\r\n        for (const row of outbounds) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: '',\r\n                CustomerName:'',\r\n                CustomerNo:''\r\n            }\r\n            \r\n            structure.CustomerName=row.Cliente \r\n            structure.CustomerNo=row.NoCliente\r\n            structure.Type = row.Type\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.Description=row.description\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.QuantityOrder\r\n            structure.QuantityShipped = row.QuantityShipped\r\n            structure.User = row.username\r\n            \r\n            if(FormatQueryReturnDate(row.Date).split(\"/\").length===3){\r\n                structure.Date = FormatQueryReturnDate(row.Date)\r\n            }else{\r\n                structure.Date = DateFormatMAS90(row.Date)\r\n            }\r\n\r\n            \r\n            InfoArray.push(structure)\r\n            \r\n        }\r\n\r\n        for (const row of transfers) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.Description=row.description\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BINSalida\r\n            structure.BIN2 = row.BINEntrada\r\n            structure.QuantityOrder = 0\r\n            structure.QuantityShipped = row.Quantity\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of purchase) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: '',\r\n                CustomerName:'',\r\n                CustomerNo:''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.CustomerNo=row.VendorNo\r\n            structure.CustomerName=row.VendorName\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.BIN = row.BIN\r\n            structure.Description=row.description\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.Quantity\r\n            structure.QuantityShipped = null\r\n            structure.User = row.username\r\n\r\n            if(FormatQueryReturnDate(row.Date).split(\"/\").length===3){\r\n                structure.Date = FormatQueryReturnDate(row.Date)\r\n            }else{\r\n                structure.Date = DateFormatMAS90(row.Date)\r\n            }\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of adjusts) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.OldQuantity\r\n            structure.QuantityShipped = row.NewQuantity\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n\r\n\r\n        var n = await OrderArrayByDate(InfoArray)\r\n        for (const item of InvStart) {\r\n            n.unshift(item)\r\n        }\r\n        for (const item of InvEnd) {\r\n            n.push(item)\r\n        }\r\n        var actualTypes=this.state.General.optionsSelect1\r\n        for (const row of n) {\r\n            const ind=getIndexElement(actualTypes,\"value\",row.Type)\r\n            if(ind===-1){\r\n                const element={\r\n                    value:row.Type,\r\n                    label:row.Type\r\n                }\r\n                actualTypes.push(element)\r\n            }\r\n        }\r\n\r\n\r\n        const temporal = this.state.General\r\n        temporal.generalHistory = n\r\n        temporal.generalHistoryFilter = n\r\n        temporal.optionsSelect1=actualTypes\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async getGeneralHistory(itemCode) {\r\n        const tempo=this.state.General\r\n        tempo.outBounds=[]\r\n        this.setState({General:tempo})\r\n        this.handleModalOpen(\"showModal3\")\r\n        this.displaySnipper('snipperDetail','')\r\n        //this.setState({secureTransaction1:true})\r\n        const temporal = this.state.General\r\n        temporal.selectedItem = itemCode\r\n        temporal.generalHistory = []\r\n        temporal.generalHistoryFilter = []\r\n        const data = {\r\n            ItemCode: itemCode.ItemCode,\r\n            company:getValueCookie('Company'),\r\n            Date: FormatQueryReturnDate(this.state.cycleInventoryStorage.Header.startDate)\r\n        }\r\n\r\n        const val = await getInformationWithData('/pickList/history/getOutBound', data)\r\n        const val2= await getInformationWithData('/invoice/history/getCurrentInvoice',data)\r\n        //const val2 = await getInformationWithData('/purchase/history/getFutureByItemCode', data)\r\n        if (val.status.code === 1 && val2.status.code===1) {\r\n            var arr=[]\r\n            for (const row of val.data) {\r\n                const element={\r\n                    Type:row.Type,\r\n                    Number:row.Num,\r\n                    BIN:row.BIN,\r\n                    QuantityOrdered:row.QuantityOrdered,\r\n                    QuantityShipped:row.QuantityShipped,\r\n                    username:row.username,\r\n                    date:row.CreationDate\r\n                }\r\n                arr.push(element)\r\n            }\r\n\r\n            for(const row of val2.data){\r\n                const element={\r\n                    Type:row.Type,\r\n                    Number:row.InvoiceNo,\r\n                    BIN:row.BIN,\r\n                    QuantityOrdered:row.QuantityOrdered,\r\n                    QuantityShipped:row.QuantityShipped,\r\n                    username:row.SalespersonNo,\r\n                    date:row.InvoiceDate\r\n                }\r\n                arr.push(element)\r\n            }\r\n\r\n            temporal.outBounds = arr\r\n            this.displaySnipper('snipperDetail','none')\r\n        }\r\n\r\n       /* if (val2.status.code === 1) {\r\n            temporal.purchaseOrders = val2.data\r\n\r\n        }\r\n        */\r\n\r\n        this.setState({ General: temporal })\r\n        //this.setState({secureTransaction1:false})\r\n        \r\n    }\r\n\r\n    async updateSystemQuantity(item) {\r\n\r\n        this.setState({ secureTransaction: true })\r\n        Swal.fire({\r\n            title: 'For this Action you need a User and  Password Admin. Please enter it to continue:',\r\n            html: `<input type=\"text\" id=\"loginChangeQuantity\" class=\"swal2-input\" placeholder=\"Username\">\r\n  <input type=\"password\" id=\"passwordChangeQuantity\" class=\"swal2-input\" placeholder=\"Password\">`,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Continue',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const login = Swal.getPopup().querySelector('#loginChangeQuantity').value\r\n                const password = Swal.getPopup().querySelector('#passwordChangeQuantity').value\r\n                if (!login || !password) {\r\n                    Swal.showValidationMessage(`Please enter login and password`)\r\n                } else if (login === \"diego.perez\" && password === \"Diego1560\") {\r\n                    automaticCloseAlert('correct', 'The Quantity has been updated!')\r\n                } else {\r\n                    automaticCloseAlert('incorrect', 'Username or password are invalid!')\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        this.setState({ secureTransaction: false })\r\n    }\r\n\r\n    async getCheckedItems() {\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        return datos.data\r\n    }\r\n\r\n    generateInfo() {\r\n\r\n        let proccessInfo = JSON.parse(JSON.stringify(this.state.cycleInventoryStorage.CheckedItems))\r\n        const headerKeys = ['ItemCode', 'productLine', 'Description', 'realQuantity', 'BIN', 'systemQuantity', 'difference', 'countBy', 'date', 'status', 'comentary']\r\n        for (const item of proccessInfo) {\r\n            for (const head of headerKeys) {\r\n                if (head !== \"status\") {\r\n                    if (item[head] === null || item[head] === \"null\") {\r\n                        item[head] = \"\"\r\n                    } else if (head === \"date\") {\r\n                        item[head] = FormatQueryReturnDate(item[head])\r\n                    }\r\n                } else {\r\n                    if (item[head] === 0) {\r\n                        item[head] = \"Not checked\"\r\n                    } else {\r\n                        item[head] = \"Checked\"\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        var info = getDataSet(proccessInfo,\r\n            ['Item Code', 'Product Line', 'Description', 'Quantity', 'BIN', 'System Quantity', 'Difference', 'Counted By', 'Date', 'Status', 'Comments'],\r\n            headerKeys)\r\n        //this.setState({dataset:info})\r\n        return info\r\n    }\r\n\r\n    async addComentary(item) {\r\n        this.disableTransaction()\r\n        var comm = \"\"\r\n        if (item.comentary) {\r\n            comm = item.comentary\r\n        }\r\n\r\n\r\n        Swal.fire({\r\n            title: 'Product: ' + item.ItemCode + ' \\nBIN: ' + item.BIN,\r\n            html: `<div class='textAreaGeneral textAreaComment'>\r\n                    <textarea id='comentOfCycleInventoryDifference' rows=\"10\" cols=\"50\">${comm}</textarea>\r\n                   </div>\r\n            `,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Save Commentary',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const coment = Swal.getPopup().querySelector('#comentOfCycleInventoryDifference').value\r\n                const temporal = this.state.cycleInventoryStorage\r\n                const index = temporal.Detail.indexOf(item)\r\n                if (index !== -1) {\r\n                    temporal.Detail[index].comentary = coment\r\n                    const response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n                    if (response.status.code === 1) {\r\n                        automaticCloseAlert('correct', 'The comment was save!')\r\n                        await this.setState({ cycleInventoryStorage: temporal })\r\n                    } else {\r\n                        automaticCloseAlert('incorrect', 'The comment was not save')\r\n                    }\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    onChangeQuantity=(item,e)=>{\r\n        const temp=this.state.cycleInventoryStorage\r\n        const index=temp.Detail.indexOf(item)\r\n        if(index!==-1){\r\n            temp.Detail[index].realQuantity = Number(e.target.value)\r\n        }\r\n    }\r\n\r\n    addDifferenceSymbol(diff){\r\n        if(diff<0){\r\n            return \"\"\r\n        }else{\r\n            return \"+\"\r\n        }\r\n    }\r\n    RemainingDays(date){\r\n        var actual=getDateYearMonthDayDash()\r\n        var start=FormatQueryReturnDateWithDash(date)\r\n        var date3=new Date(start)\r\n        var date4=new Date(actual)\r\n        var date5=new Date(start)\r\n        var date6=new Date(actual)\r\n        var difference= Math.abs(date4-date3);\r\n        \r\n        var preliminarDays=difference/(1000 * 3600 * 24)\r\n        var inhDays=0\r\n        while(date4<=date3){\r\n            if(date4.getDay()===0||date4.getDay()===6){\r\n                inhDays++\r\n            }\r\n            date4=new Date(date4.getTime()+86400000)\r\n        }\r\n       \r\n        if(date6>date5){\r\n            return (preliminarDays-inhDays)*-1\r\n        }else{\r\n           \r\n            return preliminarDays-inhDays\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    onChangeFilterHistory=(e)=>{\r\n        if(e.value!=='All'){\r\n        var DetailFilter = this.state.General.generalHistory.filter((item) => {\r\n            if (item.Type.toString().toLowerCase().includes(e.value.toLowerCase())) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        const temporal=this.state.General\r\n        temporal.generalHistoryFilter=DetailFilter\r\n        this.setState({General: temporal})\r\n    }else{\r\n        const temporal=this.state.General\r\n        temporal.generalHistoryFilter=temporal.generalHistory\r\n        this.setState({General: temporal})\r\n    }\r\n\r\n    }\r\n\r\n    generateExcelDataForHistory(){\r\n        const headers=[\"Type\",\"No Order\",\"Customer No\",\"Customer Name\",\"BIN\",\"New BIN\",\t`Quantity Order/Old Quantity`,`Quantity Shipped/New Quantity`,\"Difference\",\"Description\",\"Username\",\"Date\"]\r\n        const keys=[\"Type\",\"NoOrder\",\"CustomerNo\",\"CustomerName\",\"BIN\",\"BIN2\",\"QuantityOrder\",\"QuantityShipped\",\"difference\",\"Description\",\"User\",\"Date\"]\r\n        var copyOfHistory=this.state.General.generalHistoryFilter\r\n        for (const row of copyOfHistory) {\r\n            \r\n            if(row.Type===\"Purchase\"){\r\n                row.difference=\"+\"+row.QuantityOrder\r\n            }else if(row.Type===\"Ajuste\"||row.Type===\"Transferencia\"){\r\n                row.difference=this.addDifferenceSymbol(Number(row.QuantityShipped)-Number(row.QuantityOrder))+(Number(row.QuantityShipped)-Number(row.QuantityOrder))\r\n            }\r\n\r\n            for (const key of keys) {\r\n                if(row[key]===null||row[key]===undefined){\r\n                    row[key]='-'\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n        var info = getDataSet(copyOfHistory,headers,keys)\r\n        return info\r\n    }\r\n\r\n    getKPI(){\r\n        var DetailFilter1 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n            if (item.status===1) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n\r\n        var DetailFilter3 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n            if (item.difference!==0) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        var total=100-(DetailFilter3.length/DetailFilter1.length)\r\n        return total.toFixed(2)\r\n    }\r\n\r\n    displaySnipper(id,state){\r\n        let snipper=document.getElementById(id)\r\n        if(snipper){\r\n            snipper.style.display=state\r\n        }else{\r\n            console.log(\"SNIPPER\")\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='inventoryCycle'>\r\n                <button hidden id='actionatorCycleInventory' onClick={() => this.getLastCycleInventory()}></button>\r\n                <p className='text-center display-1 pb-2' >Cyclical Inventory</p>\r\n                <div>\r\n\r\n                    <div className='row pb-2'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-5'>\r\n                                    <button className='btn btn-primary btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 0} onClick={() => this.startNewCycleInventory()}> Start Cyclical Inventory</button>\r\n                                    <button className='btn btn-danger btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 1} onClick={() => this.endCycleInventory()}> End Cyclical Inventory</button>\r\n                                </div>\r\n\r\n                                <div className='col-5'><button className='btn btn-success btn-lg w-100' onClick={() => this.openOlCycleInventory()} > Open Olds Cyclical Inventory</button></div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div hidden={this.state.cycleInventoryStorage.Header.status !== 0} className='row pb-2 pt-3'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5'><p className='display-6'>Start Date: {formatInputDateQuery(this.state.cycleInventoryStorage.Header.startDate)}</p></div>\r\n                            <div className='col-5'><p className='display-6'>Proposed end date: {formatInputDateQuery(this.state.cycleInventoryStorage.Header.finishDate)}</p></div>\r\n                            <div className='col-1'></div>\r\n                            </div>\r\n                            <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5'><p className='display-6'>Estimated number of days: {this.state.cycleInventoryStorage.Header.days}</p></div>\r\n                            <div className='col-5'><p className='display-6'>Remaining days: {isNaN(this.RemainingDays(this.state.cycleInventoryStorage.Header.finishDate))?'-':this.RemainingDays(this.state.cycleInventoryStorage.Header.finishDate)}</p></div>\r\n                            \r\n                            <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='row pb-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Inventory complete:</p>\r\n                            <ProgressBar ref={this.ProgrressBarRef} />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" autoComplete='off' className=\"form-control\" placeholder='Search by ItemCode, BIN, Description, Category, UPC ...' id='searchCycleInv1' onChange={this.valueSearchBar} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n                            <div className='row fw-bold'>\r\n                                <div className='col-4'></div>\r\n                                <div className='col-4'>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"-1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"-1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            All items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"0\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"0\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            No Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"2\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"2\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Differences\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-4'></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n\r\n                            <ExcelDocument hidden={this.state.cycleInventoryStorage.Header.status === 1} data={this.generateInfo()} sheetname={\"CycleInventoryDetail\"} archname={\"CYCLICAL INVENTORY NO \" + this.state.cycleInventoryStorage.Header.id + \" COMPANY \" + getValueCookie('Company') + \" DATE \" + getDateFromReports()} ></ExcelDocument>\r\n\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Items</p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pt-2 pb-2'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <div className='row'>\r\n                                <div className='col-6'><p className='display-5'>Total items: {this.state.cycleInventoryStorage.Header.QuantityItems}</p></div>\r\n                                <div className='col-6'><p className='display-5'>Total search result: {this.state.cycleInventoryStorage.Header.FilterQuantity}</p></div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                <p className='display-5'>KPI: {isNaN(this.getKPI())?\"0%\":this.getKPI()+\"%\"}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Product Line</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.cycleInventoryStorage.DetailFilter.map((item, i) => (\r\n                                        <tr key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.productLine}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td><input disabled={item.status === 1} type=\"number\" key={item.realQuantity} defaultValue={item.realQuantity} id={\"realQuantityCycleInv_\" + item.id} className=\"form-control text-end\" onChange={(e)=>this.onChangeQuantity(item,e)} /></td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td><button type=\"button\" className=\"btn btn-secondary btn-lg\" onClick={() => this.addComentary(item)} disabled={this.state.General.secureTransaction || item.status === 0}>Add Comments</button></td>\r\n                                            <td className='text-center'>\r\n                                                <button type=\"button\" className=\"btn btn-success btn-lg\" disabled={this.state.General.secureTransaction} onClick={() => this.setCycleInventoryDetailInfo(item, \"realQuantityCycleInv_\" + item.id,)} hidden={item.status === 1}>Check</button>\r\n                                                <button type=\"button\" className=\"btn btn-danger btn-lg\" disabled={this.state.General.secureTransaction} onClick={() => this.updateCycleInventoryDetail(item)} hidden={item.status === 0}>Change</button>\r\n                                            </td>\r\n                                            <td className='text-center'><button disabled={this.state.secureTransaction1} onClick={() => this.getGeneralHistory(item)} type=\"button\" className=\"btn btn-info btn-lg\">Detail</button></td>\r\n                                            <td className='text-center'><button disabled={this.state.General.secureTransaction} onClick={() => this.updateSystemQuantity(item)} type=\"button\" className=\"btn btn-warning btn-lg\" hidden={item.status === 0}>Update Inventory</button></td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <ModalOrders title={'Old Cyclical Inventory'} show={this.state.General.showModal2} close={(modal = \"showModal2\") => this.handleModalClose(modal)}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12 display-5 pb-3'>\r\n                            <p >Select an old Cyclical Inventory to see they detail:</p>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='bg-dark text-light'>\r\n                                        <th className='text-center bg-dark'>Id</th>\r\n                                        <th className='text-center bg-dark'>Start Date</th>\r\n                                        <th className='text-center bg-dark'>Estimated Date to finish</th>\r\n                                        <th className='text-center bg-dark'>Real Finish Date</th>\r\n                                        <th className='text-center bg-dark'>Days</th>\r\n                                        <th className='text-center bg-dark'>Create By</th>\r\n                                        <th className='text-center bg-dark'>Close By</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {\r\n                                        this.state.General.oldCycleInventory.map((item, i) => (\r\n                                            <tr className={this.state.General.selectedCycleInventory === item ? 'bg-warning text-center' : 'text-center'} onClick={() => this.getOldDetailCycleInventory(item)} key={i}>\r\n                                                <td>{item.id}</td>\r\n                                                <td>{item.startDate2}</td>\r\n                                                <td>{item.finishDate2}</td>\r\n                                                <td>{item.realFinishDate2}</td>\r\n                                                <td>{item.realQuantityDays}</td>\r\n                                                <td>{item.createBy}</td>\r\n                                                <td>{item.closeBy}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                        <div className='col-12 display-5 '>\r\n                            <p >Detail:</p>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" className=\"form-control\" placeholder='Search by BIN, Description, Date...' id='searchOldCycleInv' onChange={this.searchOlderCycleInventoryDetail} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3 text-center'>\r\n                            <div className='row h4'>\r\n                                <div className='col correctCount2'>Exact difference</div>\r\n                                <div className='col negativeCount2'>Negative difference</div>\r\n                                <div className='col positiveCount2'>Positive difference</div>\r\n                                <div className='col notcounted2'>Item not counted</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12'>{/*Here we need specific information*/}</div>\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Comments</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.detailOldCycleSelectedFilter.map((item, i) => (\r\n                                        <tr className={item.status === 0 ? 'notcounted' : item.difference < 0 ? 'negativeCount' : item.difference === 0 ? 'correctCount' : 'positiveCount'} key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.realQuantity}</td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td>{item.comentary === 'null' ? '-' : item.comentary}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n                <ModalOrders title={'Detail of Product'} show={this.state.General.showModal3} close={(modal = \"showModal3\") => this.handleModalClose(modal)}>\r\n                    \r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Item Code:</p>\r\n                                </div>\r\n                                <div className='col-12 text-start'>\r\n                                    <p className='fw-bold'>{this.state.General.selectedItem.ItemCode}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12 justifyText'>\r\n                                    <p>{this.state.General.selectedItem.Description}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-center'>\r\n                            <img className=' pt-4 detailIMG' src='/assets/notavailable.png' alt='Company' />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n\r\n                    <div className='row text-start pt-5'>\r\n                        <div className='row'>\r\n                            <div className='col-12 fs-5 d-inline'>\r\n                               <div className='row'>\r\n                               <div className='col-6'>\r\n                                <p className='text-danger fw-bold'>Current Orders who maybe affect the current physical inventory</p>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                <div className=\"spinner-border text-danger\" id='snipperDetail' role=\"status\"></div>\r\n                                </div>\r\n                               </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>Number</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order</th>\r\n                                        <th className='bg-dark'>Quantity Shipped</th>\r\n                                        <th className='bg-dark'>Username <br/> Sales Person</th>\r\n                                        <th className='bg-dark'>Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.outBounds.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.Number}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.QuantityOrdered}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                            <td>{item.username}</td>\r\n                                            <td>{item.date}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n                                    {/*this.state.General.purchaseOrders.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.OrdenNo}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.Quantity}</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                    ))\r\n                                        */\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate1' />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate2' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-5'></div>\r\n                        <div className='col-2'>\r\n                            <button disabled={this.state.secureTransaction1} className='btn btn-danger btn-lg' onClick={() => this.getInfoProduct()}>Search</button>\r\n                        </div>\r\n                        <div className='col-5'></div>\r\n                    </div>\r\n                    <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Search Result:</p>\r\n                                </div>\r\n                                \r\n                    </div>\r\n                    <div className='row fs-4 pb-3'>\r\n                                <div className='col-6 text-start'>\r\n                                    <Select defaultValue={this.state.General.optionsSelect1[0]} options={this.state.General.optionsSelect1} onChange={this.onChangeFilterHistory} />\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                <ExcelDocument hidden={this.state.General.generalHistoryFilter.length===0} data={this.generateExcelDataForHistory()} sheetname={\"History ITEM \"+this.state.General.selectedItem.ItemCode} archname={\"Hystory Product \"+this.state.General.selectedItem.ItemCode+\" COMPANY \" + getValueCookie('Company') + \" DATE \" + getDateFromReports()} ></ExcelDocument>\r\n\r\n                                </div>\r\n                                \r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>No Order</th>\r\n                                        <th hidden={getValueCookie('CompanyId')==='2'} className='bg-dark'>Customer No</th>\r\n                                        <th hidden={getValueCookie('CompanyId')==='2'}  className='bg-dark'>Customer Name</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>New BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order/<br />Old Quantity</th>\r\n                                        <th className='bg-dark'>Quantity Shipped/<br/>New Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Username</th>\r\n                                        <th className='bg-dark'>Date</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.generalHistoryFilter.map((item, i) => (\r\n                                        <tr className={'text-center '+((item.Type==='Inventory Start'||item.Type==='Inventory End')?(item.Type==='Inventory Start'?'correctCount':'positiveCount'):'')} key={i}>\r\n                                            <td className='text-start'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.NoOrder}</td>\r\n                                            <td hidden={getValueCookie('CompanyId')==='2'} className='text-start'>{item.CustomerNo}</td>\r\n                                            <td hidden={getValueCookie('CompanyId')==='2'} className='text-start'>{item.CustomerName}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.BIN2}</td>\r\n                                            <td>{item.QuantityOrder}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                            <td className='text-center'>{(item.Type===\"Transferencia\"||item.Type===\"Ajuste\")?this.addDifferenceSymbol(Number(item.QuantityShipped)-Number(item.QuantityOrder))+(Number(item.QuantityShipped)-Number(item.QuantityOrder)):((item.Type==='Outbound'||item.Type==='Purchase')?(item.Type==='Outbound'?\"-\"+item.QuantityShipped:\"+\"+item.QuantityOrder):'-')}</td>\r\n                                            <td className='text-start'>{item.Description}</td>\r\n                                            <td>{item.User}</td>\r\n                                            <td>{item.Date}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Pie,Doughnut, Bar,Line } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend,CategoryScale,LinearScale,BarElement,Title,PointElement,LineElement,Filler } from 'chart.js';\r\nimport { faker } from '@faker-js/faker';\r\nexport default class CycleInvetoryGraph extends Component {\r\n    state = {\r\n\r\n    }\r\n    constructor(){\r\n        super()\r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            \r\n            Filler,\r\n            );\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    datapie={\r\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n    }\r\n\r\n    optionsbar = {\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart - Stacked',\r\n          },\r\n        },\r\n        responsive: true,\r\n        interaction: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n        scales: {\r\n          x: {\r\n            stacked: true,\r\n          },\r\n          y: {\r\n            stacked: true,\r\n          },\r\n        },\r\n      };\r\n      \r\n    labels=['January', 'February', 'March', 'April', 'May', 'June', 'July']\r\n      \r\n       databar = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(75, 192, 192)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 3',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(53, 162, 235)',\r\n            stack: 'Stack 1',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsarea = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      dataarea = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            fill: true,\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            borderColor: 'rgb(53, 162, 235)',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsLine2 = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      databars = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n    render() {\r\n        return (\r\n            <div className='CycleInventoryReport'>\r\n                <p className='text-center display-1 pb-2' >Cycle Inventory Graphs</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10'>\r\n                        <select className=\"form-select form-select-lg mb-3\" aria-label=\"select option\">\r\n                            <option>Select an old Cycle Inventory to see they graphs</option>\r\n                            <option value=\"1\">Cycle Invetory No. 1 06/20/2022-06/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 2 06/29/2022-07/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 3 08/15/2022-08/30/2022</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Pie Graph</p>\r\n                        <Pie data={this.datapie}></Pie>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Doughnut Graph</p>\r\n                        <Doughnut data={this.datapie}></Doughnut>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Bar Graph</p>\r\n                        <Bar options={this.optionsbar} data={this.databar}></Bar>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Line Graph</p>\r\n                        <Line options={this.optionsarea} data={this.dataarea}></Line>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Another Line Graph</p>\r\n                        <Line options={this.optionsLine2} data={this.databar}></Line>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Bars Graph</p>\r\n                        <Bar options={this.optionsLine2} data={this.databars}></Bar>\r\n                    </div>            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class BarGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n            plugins: {\r\n              legend: {\r\n                position: 'top',\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: '',\r\n              },\r\n            },\r\n          }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Bar options={this.state.options} data={this.state.data}></Bar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../css/table-responsive.css'\r\nimport {getInformationWithData } from '../services/CABE'\r\nimport BarGraph from '../components/BarGraph'\r\nimport { getValueCookie } from '../services/cookieService'\r\nexport default class KPI extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.BarGraph1 = React.createRef()\r\n\r\n    }\r\n\r\n\r\n    state = {\r\n        General: {\r\n            KPIInfo: [],\r\n            KPIInfoFilter: []\r\n        },\r\n        GraphData: {\r\n\r\n        }\r\n    }\r\n\r\n     componentDidMount() {\r\n         \r\n         \r\n    }\r\n\r\n\r\n    async getKPIInfo(){\r\n        const data1={\r\n            company:getValueCookie('Company')\r\n        }\r\n        const temporal=this.state.General\r\n        const data=await getInformationWithData('/reports/getKPI',data1)\r\n        if(data.status.code===1){\r\n        temporal.KPIInfo=data.data\r\n        temporal.KPIInfoFilter=data.data\r\n        await this.setState({General:temporal})\r\n        await this.generateGraphDays(data.data)\r\n        }\r\n    }\r\n\r\n    async generateGraphDays(data) {\r\n        this.BarGraph1.current.setTitle('Inventory Cycle Days')\r\n\r\n        let labels = []\r\n        let completeInfo = []\r\n\r\n        for (const element of data) {\r\n            labels.push('Cycle ' + String(element.id))\r\n            completeInfo.push(String(element.realQuantityDays))\r\n        }\r\n\r\n        var info = {\r\n            label: 'Days',\r\n            data: completeInfo,\r\n            backgroundColor: 'rgb(17,131,29)',\r\n\r\n        }\r\n        await this.BarGraph1.current.setLabels(labels)\r\n        await this.BarGraph1.current.setData([info])\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='KPI'>\r\n                <button hidden id='actionatorKPI' onClick={()=>this.getKPIInfo()}></button>\r\n                <p className='text-center display-1 pb-3' >Inventories of {getValueCookie('Company')}</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10 tableFixHead tb-5'>\r\n                        <table className='table'>\r\n                            <thead>\r\n                                <tr className='text-light text-center'>\r\n                                    <th className='bg-dark'>Type of Inventory</th>\r\n                                    <th className='bg-dark'>Cycle</th>\r\n                                    <th className='bg-dark'>Full cycle count days</th>\r\n                                    <th className='bg-dark'>Closing date</th>\r\n                                    <th className='bg-dark'>Counted items</th>\r\n                                    <th className='bg-dark'>Average binary accuracy</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>Adjustments</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>KPI result</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.General.KPIInfoFilter.map((element, i) => (\r\n                                    <tr className='text-center' key={i}>\r\n                                        <td>Cycle</td>\r\n                                        <td>{element.id}</td>\r\n                                        <td>{element.realQuantityDays}</td>\r\n                                        <td>{element.realFinishDate2}</td>\r\n                                        <td>{element.ItemsContados}</td>\r\n                                        <td>{element.ExBinaria}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            <tfoot className='tfoot'>\r\n\r\n                                <tr className='bg-secondary text-light'>\r\n\r\n                                </tr>\r\n                            </tfoot>\r\n\r\n                        </table>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <BarGraph ref={this.BarGraph1} />\r\n                    </div>\r\n                    <div className='col-5'>\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport '../css/CartaProducto.css'\r\n\r\n\r\nexport default class CartaProducto extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conteiner cartaHover\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 imgC \">\r\n                        <img src={\"./assets/notavailable.png\"} alt=\"Card  cap\" className='imgC'/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row text-start pt-5\">\r\n                            <h5 className=\"card-title\">{this.props.ItemCode}</h5>\r\n                        </div>\r\n                        <div className=\"row text-start\">\r\n                            <p className=\"card-text fs-6\">{this.props.Description}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-6\"><i>UPC:</i> {this.props.UPC}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-5\"><b>OnHand:</b> {this.props.OnHand}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport CartaProducto from './CartaProducto'\r\nimport { getInformationWithData } from '../services/CABE.js'\r\nimport { getValueCookie } from '../services/cookieService';\r\n\r\n\r\nexport default class Catalogue extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.retornarProducto = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        Catalogo: [],\r\n        ProductosMostrados: []\r\n    }\r\n\r\n    async obtenerProductos() {\r\n        const data={\r\n            company:getValueCookie('Company'),\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n\r\n        const buscador = document.getElementById('catalogo_busqueda');\r\n        const respuesta = await getInformationWithData('/Items/get',data);\r\n        \r\n        if (respuesta.status.code === 1) {\r\n           \r\n            this.setState({ Catalogo: respuesta.data });\r\n            this.setState({ ProductosMostrados: respuesta.data });\r\n        }\r\n        buscador.value='';\r\n        setTimeout( ()=>{buscador.focus();}, 300);\r\n    }\r\n\r\n    buscarProductos = e => {\r\n  \r\n            let busqueda = e.target.value;\r\n            let Productos = this.state.Catalogo.filter((producto) => {\r\n                if (((\r\n                        this.contiene(producto.itemCode,busqueda)\r\n                    ||  this.contiene(producto.abbreviatedDesc,busqueda)\r\n                    ||  this.contiene(producto.upc,busqueda))\r\n                    )\r\n                ) {\r\n                    return producto\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n            this.setState({ ProductosMostrados: Productos });\r\n    }\r\n\r\n    contiene(parametro,busqueda){\r\n        return parametro.toString().toLowerCase().includes(busqueda.toLocaleLowerCase())\r\n    }\r\n\r\n    getProducto(producto){\r\n        //Aqui asignamos el producto al estado del padre\r\n        const Padre = this.props.Padre\r\n        const Products = Padre.state.products;\r\n        producto.BIN=\"\";\r\n        producto.unitCost=0;\r\n        producto.originalUnitCost=0;\r\n        producto.quantityOrdered=0;\r\n        producto.quantityReceived=0;\r\n        producto.totalCost=0;\r\n        Products.push(producto);\r\n        Padre.setState({products:Products});\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button type=\"button\" disabled={this.props.disabled} className=\"btn catalogueOpen btn-lg w-100\" data-bs-toggle=\"modal\" data-bs-target={\"#Catalogo\" + this.props.nombrePadre} onClick={() => this.obtenerProductos()}>Open Catalogue </button>\r\n                <div className=\"modal fade\" id={\"Catalogo\" + this.props.nombrePadre} tabIndex=\"-1\" aria-labelledby=\"catalogoModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-fullscreen\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"catalogoModalLabel\">Catalogue</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body \">\r\n                                <div className='row form-group pt-4'>\r\n                                    <input className='form-control' placeholder='Search by ItemCode,BIN,Description...' id='catalogo_busqueda' onKeyUp={this.buscarProductos} />\r\n                                </div>\r\n                                <div className='row'>\r\n                                    {\r\n                                        this.state.ProductosMostrados.map((producto, i) => (\r\n                                            <div key={i} className='col-6 ' data-bs-dismiss=\"modal\" onClick={()=>this.getProducto(producto)}>\r\n                                                <CartaProducto ItemCode={producto.itemCode} Description={producto.abbreviatedDesc} OnHand={producto.quantity} UPC={producto.upc} />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class LineAreaGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[\r\n                {\r\n                    fill: true,\r\n                    label: 'Quantity',\r\n                    data: [],\r\n                    borderColor: 'rgb(53, 162, 235)',\r\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                  }\r\n            ]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: '',\r\n          },\r\n        },\r\n        }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets[0].data=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Line options={this.state.options} data={this.state.data}></Line>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/inventory-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport Catalogue from '../components/Catalogue.js'\r\nimport { AiOutlineSearch, AiFillPrinter, AiFillBook, AiFillDollarCircle, AiFillCheckSquare, AiFillCreditCard, AiFillTag, AiOutlineBarcode } from \"react-icons/ai\"\r\nimport LineAreaGraph from '../components/LineAreaGraph'\r\nexport default class Inventory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.LineAreaGraph1 = React.createRef()\r\n    }\r\n\r\n    state={\r\n        producto:{\r\n            itemCode:\"Item Code\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LineAreaGraph1.current.setTitle('Quantity sold per month year 2022')\r\n        this.LineAreaGraph1.current.setLabels(['January', 'February', 'March', 'April', 'May', 'June'])\r\n        this.LineAreaGraph1.current.setData(['123', '100', '12', '156', '145', '110'])\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='InventoryInfo lobbyContainer'>\r\n                <div className='row searchPart'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5 pb-5'>\r\n                        <p className='text-start pt-4 pb-2' >Search specific Product:</p>\r\n                        <div className=\"input-group input-group-lg pb-4\">\r\n                            <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Search by ItemCode' />\r\n                        </div>\r\n                        {\r\n                            /* \r\n                            \r\n                            <div className='text-center'>\r\n                            <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Search <AiOutlineFileSearch /></button>\r\n                        </div>\r\n                            */\r\n                        }\r\n\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        <p className='text-start pt-4 pb-2' >See all Catalogue:</p>\r\n                        <div className='text-center'>\r\n                            <Catalogue nombrePadre={'InventoryBin'} Padre={this}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='ItemInfo' hidden={false}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='text-start display-4 pb-2' >Item information: </p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n                    <div className='row pt-3'>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber'>\r\n                                <p className='text-center display-3' >{this.state.producto.itemCode}</p>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center'>\r\n                                <img className='pb-5 pt-5' src='/assets/notavailable.png' alt='Company' />\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Print labels <AiFillPrinter /></button>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 historyProd\">View history <AiFillBook /></button>\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='row pt-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >General information: <AiOutlineBarcode /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>UPC:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4 textAreaGeneral\">\r\n                                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>U/M:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Categories to which it belongs:</p>\r\n                                </div>\r\n                                <div className='col-12 tableFixHead'>\r\n                                    <table className='table'>\r\n                                        <thead>\r\n                                            <tr className='text-light text-center'>\r\n                                                <th className='bg-dark'>Categories</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className='text-center'>BOOTS</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>FIBER ADAPTER</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>KEYSTONE JACKS</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tfoot className='tfoot'>\r\n                                        </tfoot>\r\n\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Quantity Available: <AiFillCheckSquare /> </p>\r\n                                    <div className='row'>\r\n                                        <div className='col-12 titleTotal text-center'>\r\n                                            <p>General Total: 1563</p>\r\n                                        </div>\r\n                                        <div className='col-12 titleDistribution'>\r\n                                            <p>Distribution:</p>\r\n                                        </div>\r\n                                        <div className='col-12 tableFixHead'>\r\n                                            <table className='table'>\r\n                                                <thead>\r\n                                                    <tr className='text-light text-center'>\r\n                                                        <th className='bg-dark'>BIN</th>\r\n                                                        <th className='bg-dark'>Quantity</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A001</td>\r\n                                                        <td className='text-end'>1500</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>B002</td>\r\n                                                        <td className='text-end'>60</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A003</td>\r\n                                                        <td className='text-end'>3</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tfoot className='tfoot'>\r\n\r\n                                                    <tr className='bg-secondary text-light'>\r\n                                                        <td className='text-center'>Total</td>\r\n                                                        <td className='text-end'>1563</td>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >Physical details: <AiFillTag /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Weight (lbs) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Length (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Height (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Width (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Financial information: <AiFillCreditCard /></p>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Purchase price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Sale price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <LineAreaGraph ref={this.LineAreaGraph1} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/general-style.css\"\r\n\r\n\r\nexport default class Lobby extends Component {\r\n\r\n    componentDidMount() {\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid generalContainer lobbyContainer display-1 text-center pt-5\">\r\n                <p>Welcome</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Catalogue from '../components/Catalogue'\r\n\r\nexport default class PikingSystem extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className='fs-1'>Picking System</p>\r\n                <div className='form-group '>\r\n                    <input className='form-control w-75 d-inline fs-3' disabled />\r\n                    <button className='btn btn-success d-inline fs-3 w-25'>Sales order mode</button>\r\n                </div>\r\n                <div>\r\n                    <label className='w-50'>\r\n                        Order name:\r\n                        <input className='form-control' disabled />\r\n                    </label>\r\n                    <label className='w-50'>\r\n                        Order by:\r\n                        <input className='form-control' disabled />\r\n                    </label>\r\n\r\n                </div>\r\n                <div>\r\n                    <p className='bg-primary text-white p-2 fs-3 text-center'>Picking list</p>\r\n                    <div className='pb-5 bg-light'>\r\n                        <label className='w-100 '>\r\n                            Search by UPC:\r\n                            <input className='form-control ' placeholder='Scanner...' />\r\n                        </label>\r\n                        <div className='w-100'>\r\n                            <Catalogue nombrePadre={'PickinSystem'} Padre={this} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <table className='table'>\r\n                        <thead className='thead bg-secondary text-white'>\r\n                            <tr>\r\n                                <th>Item Code</th>\r\n                                <th>Description</th>\r\n                                <th>Quantity Ordered</th>\r\n                                <th>Weight</th>\r\n                                <th>Total Weight</th>\r\n                                <th>BIN</th>\r\n                                <th>Comments</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='tbody'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot className='tfoot bg-dark text-white'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>Totals</td>\r\n                                <td>0</td>\r\n                                <td>0.00</td>\r\n                                <td>0.00</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                    <p className='bg-primary text-white p-2 fs-3 text-center'>Picked up list</p>\r\n                    <table className='table'>\r\n                        <thead className='thead bg-secondary text-white'>\r\n                            <tr>\r\n                                <th>Item Code</th>\r\n                                <th>Description</th>\r\n                                <th>Quantity Ordered</th>\r\n                                <th>Quantity Shipped</th>\r\n                                <th>Weight</th>\r\n                                <th>Total Weight</th>\r\n                                <th>BIN</th>\r\n                                <th>Comments</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='tbody'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot className='tfoot bg-dark text-white'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>Totals</td>\r\n                                <td>0</td>\r\n                                <td>0</td>\r\n                                <td>0.00</td>\r\n                                <td>0.00</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import  {StyleSheet } from '@react-pdf/renderer'\r\n\r\nconst pdfConfig=StyleSheet.create({\r\n\r\n    HeaderStyle:{\r\n        backgroundColor:\"rgb(20, 42, 77)\",\r\n        color:\"rgb(255, 255, 255)\",\r\n    },\r\n    HeaderMargin:{\r\n        top:\"45px\",\r\n        height:\"150px\"\r\n    },\r\n\r\n    BusinessLogo:{\r\n        width:\"150px\",\r\n        left:\"35px\",\r\n        top:\"10px\"\r\n    },\r\n    ContactInfo:{\r\n        textAlign:\"justify\",\r\n        fontSize:\"14px\",\r\n        top:\"-30px\",\r\n        left:\"220px\"\r\n    },\r\n//backgroundColor:\"rgb(69, 71, 74)\",\r\n    marginInfo:{\r\n        width:\"80%\",\r\n        marginLeft:\"10%\",\r\n        padding:\"20px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginBottom:\"8px\",\r\n        color:\"rgb(255, 255, 255)\"\r\n\r\n    },\r\n    OrderTitleStyle:{\r\n        color:\"rgb(0, 0, 0)\",\r\n        textAlign:\"center\",\r\n        fontSize:\"20px\",\r\n        marginTop:\"4px\"\r\n    },\r\n    OrderInformation:{\r\n        width:\"100%\",\r\n        backgroundColor:\"rgb(255, 255, 255)\",\r\n    },\r\n    TitleStyle:{\r\n        textAlign:\"left\",\r\n        fontSize:\"10px\",\r\n        width:\"50%\",\r\n        color:\"rgb(0, 0, 0)\",\r\n    },\r\n\r\n    TextSeparator:{\r\n        marginBottom:\"4px\"\r\n    },\r\n    InfoEncabezadoStyle:{\r\n        width:\"30%\",\r\n        fontSize:\"12px\",\r\n    },\r\n    TextSeparator2:{\r\n        marginTop:\"1px\",\r\n        marginBottom:\"3.5px\"\r\n    },\r\n\r\n    Table:{\r\n        width:\"80%\",\r\n        marginLeft:\"10%\",\r\n        \r\n    },\r\n\r\n    CabeceraTabla:{\r\n        width:\"100%\",\r\n        backgroundColor:\"#000000\",\r\n        color:\"#F0FFFF\",\r\n        textAlign:\"center\",        \r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n\r\n    ColumnaNormal:{\r\n        width:\"15%\",\r\n        textAlign:\"center\",\r\n        fontSize:\"10px\",\r\n    },\r\n\r\n    ColumnaGrande:{\r\n        width:\"50%\",\r\n        textAlign:\"center\",\r\n        fontSize:\"10px\",\r\n    },\r\n    CuerpoTabla:{\r\n        width:\"100%\",\r\n        textAlign:\"center\",\r\n        padding:\"8px\",\r\n        fontSize:\"9px\",\r\n        borderBottom: '1px',\r\n        borderColor: 'black',\r\n        borderStyle: 'dotted',\r\n        \r\n    },\r\n    ColumnaGrandeCuerpo:{\r\n        width:\"50%\",\r\n        fontSize:\"9px\",\r\n        textAlign:\"justify\",\r\n        padding:\"8px\",\r\n    },\r\n    ColumnaNormalCuerpo:{\r\n        width:\"15%\",\r\n        textAlign:\"center\",\r\n        display:\"block\",\r\n        marginTop:\"1.2%\"\r\n    },\r\n\r\n    ColumnaNormalCuerpo2:{\r\n        width:\"15%\",\r\n        textAlign:\"right\",\r\n        display:\"block\",\r\n        marginTop:\"1.2%\"\r\n    },\r\n\r\n    ColumnaNormalCuerpo3:{\r\n        width:\"18%\",\r\n        textAlign:\"left\",\r\n        display:\"block\",\r\n        marginTop:\"1.2%\"\r\n    },\r\n\r\n   \r\n\r\n    Fila:{\r\n        width:\"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    \r\n    ColumnaPie:{\r\n        width:\"15%\",\r\n        textAlign:\"right\",\r\n        fontSize:\"10px\",\r\n    }\r\n\r\n    \r\n   \r\n});\r\n\r\nexport default pdfConfig;","import React, { Component } from 'react'\r\nimport \"../css/general-style.css\"\r\nimport { AiFillPrinter } from \"react-icons/ai\"\r\nimport ModalOrders from './ModalComponent'\r\nimport pdfConfig from '../pdfConfig/pdfConfig'\r\nimport { Document, Image, PDFViewer, View, Page, Text } from '@react-pdf/renderer'\r\n\r\n\r\nexport class OrderPDF extends Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n    }\r\n\r\n    state = {\r\n        showModal: false\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState({ showModal: true })\r\n    }\r\n\r\n    handleModalClose = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    EncabezadoInfo(Llaves, State) {\r\n        let resultado = []\r\n        Llaves.forEach(llave => {\r\n            if(llave===\"unitCost\"||llave===\"originalUnitCost\"||llave===\"totalCost\"){\r\n                resultado.push(\"$ \"+State[llave])\r\n            }else{\r\n                resultado.push(State[llave])\r\n            }\r\n            \r\n        });\r\n\r\n        return resultado\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                    <button id={this.props.id} disabled={this.props.disabled} type=\"button\" onClick={() => this.handleModalOpen()} className={\"btn \" + this.props.colorButton + \" btn-lg\"}>Print Order <AiFillPrinter /></button>\r\n                </div>\r\n                <ModalOrders title={this.props.title} show={this.state.showModal} close={() => this.handleModalClose()}>\r\n                    <PDFViewer className=\"w-100\" style={{ minHeight: \"90vh\" }}>\r\n                        <Document>\r\n                            <Page wrap>\r\n\r\n                                {/*THIS IS THE HEADER OF THE DOCUMENT*/}\r\n                                <View style={pdfConfig.HeaderStyle} fixed>\r\n                                    <View style={pdfConfig.HeaderMargin}>\r\n                                        <Image style={pdfConfig.BusinessLogo} src={this.props.companyLogo} />\r\n                                        <View style={pdfConfig.ContactInfo}>\r\n                                            {this.props.contactInfo.map((element, e) => (\r\n                                                <Text key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                                {/*ORDER INFO*/}\r\n                                <View fixed style={pdfConfig.OrderInformation}>\r\n                                    <View style={pdfConfig.OrderTitleStyle}>\r\n                                        <Text>{this.props.OrderTitle}</Text>\r\n                                    </View>\r\n                                    <View style={pdfConfig.marginInfo}>\r\n                                        <View style={pdfConfig.TitleStyle}>\r\n                                            {this.props.OrderInfo1.map((element, e) => (\r\n                                                <Text style={pdfConfig.TextSeparator} key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n\r\n                                        <View style={pdfConfig.TitleStyle}>\r\n                                            {this.props.OrderInfo2.map((element, e) => (\r\n                                                <Text style={pdfConfig.TextSeparator} key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n                                \r\n                                <View style={pdfConfig.Table}>\r\n                                                <View fixed style={pdfConfig.CabeceraTabla}>\r\n                                                    {this.props.headerTable.map((tit, e) => (\r\n                                                        e !== 1 ? <Text style={pdfConfig.ColumnaNormal} key={e}>{tit}</Text> : <Text style={pdfConfig.ColumnaGrande} key={e}>{tit}</Text>\r\n                                                    ))}\r\n                                                </View>\r\n\r\n                                                {\r\n                                                    this.props.bodyTable.map((elemento, e) => (\r\n                                                        e % 9 === 0 && e !== 0 ?\r\n                                                            <View break key={e} style={pdfConfig.CuerpoTabla}>\r\n                                                                <View key={e} style={pdfConfig.Fila}>{\r\n                                                                    this.EncabezadoInfo(this.props.headerBodyTable, elemento).map((fila, e2) => (\r\n                                                                        e2 !== 1 ? (e2===0?<View style={pdfConfig.ColumnaNormalCuerpo3} key={e2}><Text  key={e2}>{fila}</Text></View>:<View style={pdfConfig.ColumnaNormalCuerpo2} key={e2}><Text  key={e2}>{fila}</Text></View>) : <View style={pdfConfig.ColumnaGrandeCuerpo} key={e2}><Text key={e2}>{fila}</Text></View>\r\n                                                                    ))\r\n                                                                }</View>\r\n                                                            </View>\r\n                                                            :\r\n                                                            <View key={e} style={pdfConfig.CuerpoTabla}>\r\n                                                                 <View key={e} style={pdfConfig.Fila}>{\r\n                                                                    this.EncabezadoInfo(this.props.headerBodyTable, elemento).map((fila, e2) => (\r\n                                                                        e2 !== 1 ? (e2===0?<View style={pdfConfig.ColumnaNormalCuerpo3} key={e2}><Text  key={e2}>{fila}</Text></View>:<View style={pdfConfig.ColumnaNormalCuerpo2} key={e2}><Text  key={e2}>{fila}</Text></View>) : <View style={pdfConfig.ColumnaGrandeCuerpo} key={e2}><Text key={e2}>{fila}</Text></View>\r\n                                                                    ))\r\n                                                                }</View>\r\n                                                            </View>\r\n                                                    ))\r\n                                                \r\n                                                }\r\n                                                \r\n                                                <View style={pdfConfig.CabeceraTabla}>\r\n                                                    \r\n                                                    {\r\n                                                    \r\n                                                    this.props.bottomInfo.map((tit, e) => (\r\n                                                        e !== 1 ? <Text style={pdfConfig.ColumnaPie} key={e}>{tit}</Text> : <Text style={pdfConfig.ColumnaGrande} key={e}>{tit}</Text>\r\n                                                    ))\r\n                                                    }\r\n                                                </View>\r\n                                            </View>\r\n\r\n\r\n                            </Page>\r\n                        </Document>\r\n                    </PDFViewer>\r\n                </ModalOrders>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport { BsCheckSquare, BsCartPlus } from \"react-icons/bs\";\r\nimport { AiTwotoneSave, AiOutlineCloseCircle, AiFillDelete } from \"react-icons/ai\"\r\nimport Catalogue from '../components/Catalogue';\r\nimport { OrderPDF } from '../components/OrderPDF';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport { getIndexElement } from '../functions/searchInObject';\r\nimport { confirmCloseAlert } from '../functions/alerts';\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { formatInputDate, formatInputDateQuery, formatInputDateQuerytoInput } from '../functions/dateFormat';\r\nimport Select from 'react-select';\r\nexport default class PurchaseOrder extends Component {\r\n\r\n    state = {\r\n\r\n        purchaseOrderHeader: {\r\n            NoOrder: '',\r\n            Carrier: '',\r\n            orderDate: '',\r\n            completionDate: '',\r\n            creationDate: '',\r\n            vendorNo: '',\r\n            vendorName: '',\r\n            comment: '',\r\n            createBy: '',\r\n            State: ''\r\n        },\r\n        companyPrintHeader: [],\r\n        products: [],\r\n        totals: {\r\n            finalquantityOrderedTotal: 0,\r\n            finalquantityOrderedReceived: 0,\r\n            finalTotalCost: 0\r\n        },\r\n        disableHeader: true,\r\n        secureTransaction: false,\r\n        modalPurchase: false,\r\n        oldPurchaseOrderHeader: [],\r\n        vendorSelectInformation: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ companyPrintHeader: this.getPrintHeaderCompany() })\r\n    }\r\n\r\n    print() {\r\n        console.log(this.state.products)\r\n\r\n    }\r\n\r\n    disableTransactions() {\r\n        this.setState({ secureTransaction: true })\r\n    }\r\n\r\n    enableTransactions() {\r\n        this.setState({ secureTransaction: false })\r\n    }\r\n\r\n\r\n    onTarget = async (e, item) => {\r\n        const temporal = this.state.products\r\n        const ident = e.target.id.split('_')\r\n        const index = temporal.indexOf(item)\r\n        if (index !== -1) {\r\n            if (ident[0] === \"BINPurchase\") {\r\n                temporal[index].BIN = e.target.value\r\n                this.setState({ products: temporal })\r\n            } else if (ident[0] === \"quantityOrderPurchase\") {\r\n                temporal[index].quantityOrdered = Number(e.target.value)\r\n                if(this.state.purchaseOrderHeader.State===\"1\"||this.state.purchaseOrderHeader.State===''){\r\n                    temporal[index].totalCost = (Number(e.target.value) * temporal[index].unitCost).toFixed(2)\r\n                    \r\n                }\r\n                \r\n                this.setState({ products: temporal })\r\n                this.calculateTotals()\r\n            }else if (ident[0] === \"quantityReceivedPurchase\") {\r\n                temporal[index].quantityReceived = Number(e.target.value)\r\n                if(this.state.purchaseOrderHeader.State!==\"1\"){\r\n                    temporal[index].totalCost = (Number(e.target.value) * temporal[index].unitCost).toFixed(2)\r\n                }\r\n                \r\n                this.setState({ products: temporal })\r\n                this.calculateTotals()\r\n            }else if (ident[0] === \"standarCostPurchase\") {\r\n                temporal[index].unitCost = Number(e.target.value)\r\n               \r\n                if(this.state.purchaseOrderHeader.State!==\"1\"&&this.state.purchaseOrderHeader.State!==''){\r\n                    temporal[index].totalCost = (Number(e.target.value) * temporal[index].quantityReceived).toFixed(2)\r\n                }else{\r\n                    \r\n                    temporal[index].totalCost = (Number(e.target.value) * temporal[index].quantityOrdered).toFixed(2)\r\n                }\r\n                \r\n                this.setState({ products: temporal })\r\n                this.calculateTotals()\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    onTargerHeader = async (e) => {\r\n        const varChange = e.target.id\r\n        const temporal = this.state.purchaseOrderHeader\r\n        if (varChange === \"purchaseOrderNo\") {\r\n            await this.getPurchaseOrderHeader()\r\n            const index = getIndexElement(this.state.oldPurchaseOrderHeader, \"OrderNo\", e.target.value)\r\n            if (index === -1) {\r\n                temporal.NoOrder = e.target.value\r\n                this.setState({ purchaseOrderHeader: temporal })\r\n            } else {\r\n                confirmCloseAlert('incorrect', \"The order number is already registered, select a different number or use the autogenerated one\")\r\n                await this.createNewPurchaseOrder()\r\n            }\r\n        } else if (varChange === \"purchaseCarrier\") {\r\n            temporal.Carrier = e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        } else if (varChange === \"purchaseOrderDate\") {\r\n            temporal.orderDate = e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        }else if( varChange===\"purchaseComment\"){\r\n            temporal.comment=e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        }else if( varChange===\"purchaseCompletionDate\"){\r\n            temporal.completionDate=e.target.value\r\n            this.setState({purchaseOrderHeader:temporal})\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async createNewPurchaseOrder() {\r\n        this.disableTransactions()\r\n        var data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const noOrder = await getInformationWithData('/purchase/create/newOrderNumber', data)\r\n\r\n        if (noOrder.status.code === 1) {\r\n            var orderNumber = \"PO\"\r\n            for (let a = noOrder.data[0].NoOrder.toString().length; a < 4; a++) {\r\n                orderNumber += \"0\"\r\n            }\r\n\r\n            orderNumber += noOrder.data[0].NoOrder.toString()\r\n\r\n            const temporal = this.state.purchaseOrderHeader\r\n            temporal.NoOrder = orderNumber\r\n            temporal.createBy=getValueCookie('userName')\r\n            this.setState({ purchaseOrderHeader: temporal, disableHeader: false })\r\n            document.getElementById('purchaseOrderNo').value = this.state.purchaseOrderHeader.NoOrder\r\n        }\r\n\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    async getPurchaseOrderHeader() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const result = await getInformationWithData('/purchase/get/purchaseOrderHeader', data)\r\n        if (result.status.code === 1) {\r\n            this.setState({ oldPurchaseOrderHeader: result.data })\r\n        }\r\n    }\r\n\r\n    async clearDashBoardPurchaseOrder() {\r\n\r\n        var header = {\r\n            NoOrder: '',\r\n          \r\n            Carrier: '',\r\n            orderDate: '',\r\n            completionDate: '',\r\n            creationDate: '',\r\n            vendorNo: '',\r\n            vendorName: '',\r\n            comment: '',\r\n            createBy: '',\r\n            State: ''\r\n        }\r\n        var tot = {\r\n            finalquantityOrderedTotal: 0,\r\n            finalquantityOrderedReceived: 0,\r\n            finalTotalCost: 0\r\n        }\r\n        this.setState({ purchaseOrderHeader: header, products: [], totals: tot, disableHeader: true })\r\n        this.defineHeader()\r\n    }\r\n\r\n    cancelPurchaseOrder() {\r\n        this.disableTransactions()\r\n        Swal.fire({\r\n            title: 'Do you want to discard the actual Purchase Order?',\r\n            backdrop: true,\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    await this.clearDashBoardPurchaseOrder()\r\n                    Swal.fire('The Purchase Order was canceled!', '', 'info')\r\n                }\r\n            }\r\n\r\n        })\r\n        this.enableTransactions()\r\n    }\r\n    stateInWords(state) {\r\n\r\n        if (state === '') {\r\n            return 'Creating order'\r\n        } else if (state === '1') {\r\n            return 'Order created'\r\n        } else if (state === '2') {\r\n            return 'Order received'\r\n        } else if (state === '3') {\r\n            return 'Order completed and loaded'\r\n        }\r\n\r\n    }\r\n    colorStateText(state) {\r\n\r\n        if (state === '') {\r\n            return 'text-secondary'\r\n        } else if (state === '1') {\r\n            return 'text-primary'\r\n        } else if (state === '2') {\r\n            return 'text-warning'\r\n        } else if (state === '3') {\r\n            return 'text-success'\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    async createPurchaseOrder() {\r\n        this.disableTransactions()\r\n        const temporal = this.state.purchaseOrderHeader\r\n        temporal.State = \"1\"\r\n        this.setState({ purchaseOrderHeader: temporal })\r\n        const data = {\r\n            header: this.state.purchaseOrderHeader,\r\n            products: this.state.products,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            username: getValueCookie('userName'),\r\n            cost: this.state.totals.finalTotalCost,\r\n            totalquant: this.state.totals.finalquantityOrderedTotal,\r\n        }\r\n        /*\r\n        NoOrder: '',\r\n            Carrier: '',\r\n            orderDate: '',\r\n            completionDate: '',\r\n            creationDate: '',\r\n            vendorNo: '',\r\n            vendorName: '',\r\n            comment: '',\r\n            createBy: '',\r\n            State: ''\r\n        \r\n        */\r\n\r\n\r\n        const result = await create_Delete_Update_Information('/purchase/create/purchaseOrder', data)\r\n        if (result.status.code === 1) {\r\n             Swal.fire({\r\n                title: 'Do you want to print the actual Purchase Order?',\r\n                backdrop: true,\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Yes',\r\n                denyButtonText: `No`,\r\n                allowOutsideClick: () => !Swal.isLoading()\r\n            }).then(async (result) => {\r\n                if (result !== null && result !== undefined) {\r\n                    if (result.isConfirmed) {\r\n                        let button=document.getElementById('IDPRUEBA')\r\n                        if(button!==undefined&&button!==null){\r\n                             button.click()\r\n                        }\r\n                    } else {\r\n                        this.clearDashBoardPurchaseOrder()\r\n                    }\r\n                }\r\n\r\n            })\r\n            \r\n        }\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    async updatePurchaseOrder(){\r\n        this.disableTransactions()\r\n        const temporal = this.state.purchaseOrderHeader\r\n        if(temporal.State===\"2\"){\r\n            temporal.State = \"3\"\r\n        }\r\n        \r\n        this.setState({ purchaseOrderHeader: temporal })\r\n        const data = {\r\n            header: this.state.purchaseOrderHeader,\r\n            products: this.state.products,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            username: getValueCookie('userName'),\r\n            cost: this.state.totals.finalTotalCost,\r\n            totalquant: this.state.totals.finalquantityOrderedTotal,\r\n        }\r\n\r\n        const result = await create_Delete_Update_Information('/purchase/update/purchaseOrder', data)\r\n        if (result.status.code === 1) {\r\n             Swal.fire({\r\n                title: 'Do you want to print the actual Purchase Order?',\r\n                backdrop: true,\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Yes',\r\n                denyButtonText: `No`,\r\n                allowOutsideClick: () => !Swal.isLoading()\r\n            }).then(async (result) => {\r\n                if (result !== null && result !== undefined) {\r\n                    if (result.isConfirmed) {\r\n                        let button=document.getElementById('IDPRUEBA')\r\n                        if(button!==undefined&&button!==null){\r\n                             button.click()\r\n                        }\r\n                    } else {\r\n                        this.clearDashBoardPurchaseOrder()\r\n                    }\r\n                }\r\n\r\n            })\r\n            \r\n        }\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    calculateTotals() {\r\n        var totalquantOrdered = 0\r\n        var totalquantReceived = 0\r\n        var totalcost = 0\r\n        const temporal = this.state.products\r\n\r\n        for (const item of temporal) {\r\n            totalquantOrdered += Number(item.quantityOrdered)\r\n            totalquantReceived += Number(item.quantityReceived)\r\n            totalcost += Number(item.totalCost)\r\n        }\r\n        const temporal2 = this.state.totals\r\n        temporal2.finalquantityOrderedTotal = totalquantOrdered\r\n        temporal2.finalquantityOrderedReceived = totalquantReceived\r\n        temporal2.finalTotalCost = totalcost.toFixed(2)\r\n\r\n\r\n        this.setState({ totals: temporal2 })\r\n    }\r\n\r\n    handleModalOpen = async () => {\r\n        this.getPurchaseOrderHeader()\r\n        await this.setState({ modalPurchase: true })\r\n    }\r\n\r\n    handleModalClose = () => {\r\n\r\n        this.setState({ modalPurchase: false })\r\n    }\r\n\r\n    removeProduct(item) {\r\n        var temporal = this.state.products\r\n        const index = temporal.indexOf(item)\r\n\r\n        if (index !== -1) {\r\n            temporal.splice(index, 1)\r\n            \r\n            for (let a = 0; a < temporal.length; a++) {\r\n                document.getElementById(\"BINPurchase_\" + a).value = temporal[a].BIN\r\n                document.getElementById(\"quantityOrderPurchase_\" + a).value = temporal[a].quantityOrdered\r\n                if(this.state.purchaseOrderHeader.State!==''&&this.state.purchaseOrderHeader.State!=='1'){\r\n                    document.getElementById(\"quantityReceivedPurchase_\" + a).value = temporal[a].quantityReceived\r\n                }\r\n                document.getElementById(\"standarCostPurchase_\" + a).value = temporal[a].unitCost\r\n            }\r\n            /*\r\n            quantityOrdered: item.QuantityOrdered,\r\n                    quantityReceived: item.QuantityReceived,\r\n                    totalCost: (item.QuantityReceived * item.UnitCost).toFixed(2),\r\n            */\r\n\r\n            this.setState({ products: temporal })\r\n            this.calculateTotals()\r\n        }\r\n\r\n    }\r\n\r\n    async SelectOldPurchaseOrder(order) {\r\n        this.handleModalClose()\r\n        \r\n        const data = {\r\n            NoOrder: order.OrderNo,\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n\r\n        const temporal = this.state.purchaseOrderHeader\r\n        temporal.Carrier = order.Carrier\r\n        temporal.NoOrder = order.OrderNo\r\n        temporal.completionDate = formatInputDateQuerytoInput(order.completionDate)\r\n        temporal.orderDate = formatInputDateQuerytoInput(order.OrderDate)\r\n        temporal.creationDate = formatInputDateQuerytoInput(order.CreationDate)\r\n        temporal.comment = order.Comment\r\n        temporal.State = order.Status\r\n        temporal.createBy = order.createBy\r\n        temporal.vendorNo = ''\r\n        var sizeVendor = ('' + order.VendorNo).length\r\n        if (sizeVendor !== 7) {\r\n            for (let a = sizeVendor; a < 7; a++) {\r\n                temporal.vendorNo += '0'\r\n            }\r\n        }\r\n        temporal.vendorNo += order.VendorNo\r\n        temporal.vendorName = order.VendorName\r\n        \r\n        this.defineHeader()\r\n        const detailData = await getInformationWithData('/purchase/get/purchaseOrderDetail', data)\r\n        if (detailData.status.code === 1) {\r\n            this.setState({ purchaseOrderHeader: temporal, disableHeader: false })\r\n            var temporalproducts = []\r\n            for (const item of detailData.data) {\r\n                const prod = {\r\n                    BIN: null,\r\n                    abbreviatedDesc: item.abbreviatedDesc,\r\n                    completeDesc: item.abbreviatedDesc,\r\n                    createBy: \"\",\r\n                    creationDate: \"\",\r\n                    height: \"0\",\r\n                    itemCode: item.ItemCode,\r\n                    itemStatus: 1,\r\n                    itemURLImage: \"\",\r\n                    lastUpdateDate: \"\",\r\n                    length: \"\",\r\n                    quantityOrdered: item.QuantityOrdered,\r\n                    quantityReceived: item.QuantityReceived,\r\n                    totalCost: (item.QuantityReceived * item.UnitCost).toFixed(2),\r\n                    unitPrice: 0,\r\n                    unitCost: item.UnitCost,\r\n                    originalUnitCost: item.OriginalUnitCost,\r\n                    upc: \"\",\r\n                    updateBy: \"\",\r\n                    width: \"\",\r\n                }\r\n                if(this.state.purchaseOrderHeader.State===\"1\"){\r\n                    prod.totalCost=(prod.quantityOrdered * prod.unitCost).toFixed(2)\r\n                }\r\n\r\n\r\n                temporalproducts.push(prod)\r\n\r\n            }\r\n            this.setState({ products: temporalproducts })\r\n            this.calculateTotals()\r\n        }\r\n\r\n\r\n\r\n    }\r\n    defineHeader() {\r\n        const temporal = this.state.purchaseOrderHeader\r\n        document.getElementById('purchaseOrderNo').value = temporal.NoOrder\r\n        document.getElementById('purchaseCarrier').value = temporal.Carrier\r\n        document.getElementById('purchaseOrderDate').value = temporal.orderDate\r\n        document.getElementById('purchaseCompletionDate').value = temporal.completionDate\r\n        document.getElementById('purchaseComment').value = temporal.comment\r\n    }\r\n\r\n    getPrintHeaderCompany() {\r\n        var header = []\r\n        header.push(getValueCookie('fullName'))\r\n        header.push(getValueCookie('address'))\r\n        header.push(getValueCookie('warehouse'))\r\n        header.push(getValueCookie('website'))\r\n        return header\r\n\r\n    }\r\n\r\n    async getVendors() {\r\n        const data = {\r\n            companyid: getValueCookie('CompanyId')\r\n        }\r\n        const result = await getInformationWithData('/vendors/get/vendorsInformation', data)\r\n        if (result.status.code === 1) {\r\n            var arr = []\r\n            for (const vendor of result.data) {\r\n                const ven = {\r\n                    value: vendor.customerNo + '-' + vendor.name,\r\n                    label: vendor.customerNo + \" \" + vendor.name\r\n                }\r\n                arr.push(ven)\r\n            }\r\n            this.setState({ vendorSelectInformation: arr })\r\n\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        const change = e.value.split('-')\r\n        if (change.length === 2) {\r\n            const temporal = this.state.purchaseOrderHeader\r\n            temporal.vendorNo = change[0]\r\n            temporal.vendorName = change[1]\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='purchaseOrderContainer'>\r\n                <button hidden id='vendorsFromPurchaseOrder' onClick={() => this.getVendors()}></button>\r\n                <button hidden onClick={() => this.print()}>PRINT</button>\r\n                <p className='text-center display-1 pb-2' >Purchase Order</p>\r\n\r\n                <div>\r\n                    <div className='row pb-5 text-center'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button type=\"button\" className=\"btn greenButton btn-lg\" disabled={this.state.secureTransaction} hidden={!this.state.disableHeader} onClick={() => this.createNewPurchaseOrder()}>New Purchase Order <BsCartPlus /></button>\r\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg\" disabled={this.state.secureTransaction} hidden={this.state.disableHeader} onClick={() => this.cancelPurchaseOrder()}>Cancel Purchase Order <AiFillDelete /></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button type=\"button\" className=\"btn brownButton btn-lg\" disabled={this.state.secureTransaction || !this.state.disableHeader} onClick={() => this.handleModalOpen()}>History <BsCheckSquare /></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-2 text-center'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <div className='row pb-2'>\r\n                                <div className='col-6'>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Order No:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" disabled={this.state.purchaseOrderHeader.State!==''} id='purchaseOrderNo' type=\"text\" onChange={this.onTargerHeader} /></div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Carrier:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseCarrier' type=\"text\" onChange={this.onTargerHeader} /></div>\r\n                                    </div>\r\n                                    <div className='row pb-3'>\r\n                                        <div className='col-12 text-start pText'><p>Comment:</p></div>\r\n                                        <div className='col-12 textAreaGeneral'>\r\n                                            <textarea className=\"form-control\" id='purchaseComment' onChange={this.onTargerHeader} rows=\"4\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-4 text-start pText'><p>Order State:</p></div>\r\n                                        <div className='col-8 text-start pText'><p className={'fw-bold ' + this.colorStateText(this.state.purchaseOrderHeader.State)}>{this.stateInWords(this.state.purchaseOrderHeader.State)}</p></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-12 text-start pText'><p>Vendor:</p></div>\r\n                                        <div className='col-12'>\r\n                                            <Select value={{ label: this.state.purchaseOrderHeader.vendorNo + ' ' + this.state.purchaseOrderHeader.vendorName, value: this.state.purchaseOrderHeader.vendorNo + '-' + this.state.purchaseOrderHeader.vendorName }} options={this.state.vendorSelectInformation} className='fs-4 text-start' placeholder=\"Select Vendor\" onChange={this.handleChange.bind(this)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Date:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseOrderDate' onChange={this.onTargerHeader} type=\"date\" /></div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Completion date:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseCompletionDate' onChange={this.onTargerHeader} type=\"date\" /></div>\r\n                                    </div>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-12'><Catalogue disabled={false} nombrePadre={\"PurchaseOrder\"} Padre={this} /></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-2 pt-3 text-center'>\r\n                        <div className='col-12 pb-3 text-start display-6'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-10'>\r\n                                    Order Detail:\r\n                                </div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 tb-5 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>{(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\") ? \"Quantity Ordered\" : \"Quantity\"}</th>\r\n                                        <th className='bg-dark' hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")}>Quantity Received</th>\r\n                                        <th className='bg-dark'>Real Cost</th>\r\n                                        <th className='bg-dark'>Standar Cost</th>\r\n                                        <th className='bg-dark'>Total Cost</th>\r\n                                        <th className='bg-dark'></th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {this.state.products.map((product, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-start'>{product.itemCode}</td>\r\n                                            <td className='text-start'>{product.abbreviatedDesc}</td>\r\n                                            <td>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"text\" id={'BINPurchase_' + i} defaultValue={product.BIN} className=\"form-control text-center\" onChange={(e) => this.onTarget(e, product)} />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"number\" id={'quantityOrderPurchase_' + i} min={0} defaultValue={product.quantityOrdered} onChange={(e) => this.onTarget(e, product)} className=\"form-control text-end\" />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")}>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"number\" id={'quantityReceivedPurchase_' + i} min={0} defaultValue={product.quantityReceived} onChange={(e) => this.onTarget(e, product)} className=\"form-control text-end\" />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className='text-end'>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <span className=\"input-group-text\">$</span>\r\n                                                    <input type=\"number\" id={'standarCostPurchase_' + i} min={0} defaultValue={product.unitCost} onChange={(e) => this.onTarget(e, product)} className=\"form-control text-end\" />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className='text-end'>$ {product.originalUnitCost}</td>\r\n                                            <td className='text-end'>$ {product.totalCost}</td>\r\n                                            <td><button onClick={() => this.removeProduct(product)} className='btn btn-danger'><AiOutlineCloseCircle /></button></td>\r\n                                        </tr>\r\n\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>TOTAL:</td>\r\n                                        <td className='text-end'>{this.state.totals.finalquantityOrderedTotal}</td>\r\n                                        <td hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")} className='text-end'>{this.state.totals.finalquantityOrderedReceived}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td className='text-end'>{\"$\"+this.state.totals.finalTotalCost}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row  pb-4 text-center'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button type=\"button\" hidden={this.state.purchaseOrderHeader.State!==''} disabled={this.state.disableHeader || this.state.secureTransaction} className=\"btn yellowButton btn-lg\" onClick={() => this.createPurchaseOrder()}>Save Order <AiTwotoneSave /></button>\r\n                            <button type=\"button\" hidden={this.state.purchaseOrderHeader.State===''} disabled={this.state.disableHeader || this.state.secureTransaction||this.state.purchaseOrderHeader.State==='3'} className=\"btn yellowButton btn-lg\" onClick={() => this.updatePurchaseOrder()}>{this.state.purchaseOrderHeader.State==='1'?\"Update Order\":\"Confirm Order\"} <AiTwotoneSave /></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        {this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\" ?\r\n                            <OrderPDF id={\"IDPRUEBA\"} disabled={this.state.disableHeader || this.state.secureTransaction} colorButton=\"orangeButton\" title=\"Purchase Order Print\"\r\n                                companyLogo={getValueCookie('CompanyLogo')}\r\n                                OrderTitle=\"Purchase Order\"\r\n                                contactInfo={this.state.companyPrintHeader}\r\n                                OrderInfo1={[\"Order No: \" + this.state.purchaseOrderHeader.NoOrder, \"No Vendor: \" + this.state.purchaseOrderHeader.vendorNo, \"Vendor: \" + this.state.purchaseOrderHeader.vendorName, \"Carrier: \" + this.state.purchaseOrderHeader.Carrier, \"Date: \" + formatInputDate(this.state.purchaseOrderHeader.orderDate)]}\r\n                                OrderInfo2={[\"Order State: \" + this.stateInWords(this.state.purchaseOrderHeader.State), \"Order by: \" + this.state.purchaseOrderHeader.createBy, \"Printed by: \" + getValueCookie('userName')]}\r\n                                headerTable={[\"\\n Item Code\", \"\\n Description\", \"\\n BIN\", \"\\n Quantity \\n Ordered\", \"\\n Quantity \\n Received\", \"\\n Real\\nCost\", \"\\nStandar \\n Cost\\n\", \"\\n Total \\n Cost\\n\"]}\r\n                                bodyTable={this.state.products}\r\n                                headerBodyTable={[\"itemCode\", \"abbreviatedDesc\", \"BIN\", \"quantityOrdered\", \"quantityReceived\", \"unitCost\", \"originalUnitCost\", \"totalCost\"]}\r\n                                bottomInfo={[\"\",\"\\nTOTALS\",\"\",\"\\n\"+this.state.totals.finalquantityOrderedTotal,\"\\n\"+this.state.totals.finalquantityOrderedReceived,\"\",\"\",\"\\n$\"+this.state.totals.finalTotalCost]}\r\n                            />\r\n                            :\r\n                            <OrderPDF id={\"IDPRUEBA\"} disabled={this.state.disableHeader || this.state.secureTransaction} colorButton=\"orangeButton\" title=\"Purchase Order Print\"\r\n                                companyLogo={getValueCookie('CompanyLogo')}\r\n                                OrderTitle=\"Purchase Order\"\r\n                                contactInfo={this.state.companyPrintHeader}\r\n                                OrderInfo1={[\"Order No: \" + this.state.purchaseOrderHeader.NoOrder, \"No Vendor: \" + this.state.purchaseOrderHeader.vendorNo, \"Vendor: \" + this.state.purchaseOrderHeader.vendorName, \"Carrier: \" + this.state.purchaseOrderHeader.Carrier, \"Date: \" + formatInputDate(this.state.purchaseOrderHeader.orderDate)]}\r\n                                OrderInfo2={[\"Order State: \" + this.stateInWords(this.state.purchaseOrderHeader.State), \"Order by: \" + this.state.purchaseOrderHeader.createBy, \"Printed by: \" + getValueCookie('userName')]}\r\n                                headerTable={[\"\\n Item Code\", \"\\n Description\", \"\\n BIN\", \"\\n Quantity\\n Ordered\", \"\\n Real\\nCost\", \"Standar \\n Cost\\n\", \"\\n Total \\n Cost\\n\"]}\r\n                                bodyTable={this.state.products}\r\n                                headerBodyTable={[\"itemCode\", \"abbreviatedDesc\", \"BIN\", \"quantityOrdered\", \"unitCost\", \"originalUnitCost\", \"totalCost\"]}\r\n                                bottomInfo={[\"\",\"\\nTOTALS\",\"\",\"\\n\"+this.state.totals.finalquantityOrderedTotal,\"\",\"\",\"\\n$\"+this.state.totals.finalTotalCost]}\r\n                                extraAnotation={\"Comment: \"+this.state.purchaseOrderHeader.comment}\r\n                            />\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <ModalOrders title={'Purchase Orders'} show={this.state.modalPurchase} close={() => this.handleModalClose()}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Order No</th>\r\n                                        <th className='bg-dark'>Order Date</th>\r\n                                        <th className='bg-dark'>Comment</th>\r\n                                        <th className='bg-dark'>Vendor</th>\r\n                                        <th className='bg-dark'>Carrier</th>\r\n                                        <th className='bg-dark'>Total Quantity</th>\r\n                                        <th className='bg-dark'>Total Cost</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Create by</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {this.state.oldPurchaseOrderHeader.map((item, i) => (\r\n                                        <tr onClick={() => this.SelectOldPurchaseOrder(item)} className='text-center' key={i}>\r\n                                            <td>{item.OrderNo}</td>\r\n                                            <td>{formatInputDateQuery(item.OrderDate)}</td>\r\n                                            <td className='text-start'>{item.Comment}</td>\r\n                                            <td className='text-start'>{item.VendorName}</td>\r\n                                            <td>{item.Carrier}</td>\r\n                                            <td className='text-end'>{item.TotalQuantity}</td>\r\n                                            <td><div className='row'><div className='col-1'></div> <div className='col-1 text-end'>$</div><div className='col-7'>{item.TotalCost} </div><div className='col-1'></div></div></td>\r\n                                            <td className={'' + this.colorStateText(item.Status)}>{this.stateInWords(item.Status)}</td>\r\n                                            <td>{item.createBy}</td>\r\n                                        </tr>\r\n                                    ))}\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { Component } from \"react\"\r\nimport CompanyDashBoard from \"../pages/CompanyDashBoard\"\r\nimport {Menu} from \"../components/Menu\"\r\nimport Footer from \"../components/Footer\"\r\nimport CycleInventory from \"../pages/CycleInvetory\"\r\nimport CycleInvetoryGraph from \"../pages/CycleInventoryGraph\"\r\nimport KPI from \"../pages/KPI\"\r\nimport Inventory from \"../pages/Inventory\"\r\nimport Lobby from \"../pages/Lobby\"\r\nimport PikingSystem from \"../pages/PikingSystem\"\r\nimport PurchaseOrder from \"../pages/PurchaseOrder\"\r\nimport \"../css/general-style.css\"\r\n\r\nexport default class App extends Component {\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"page\" id=\"CompanyDashBoard\">\r\n                    <CompanyDashBoard />\r\n                </div>\r\n\r\n                <div id=\"GeneralPages\" className=\"page\">\r\n                    <Menu/>\r\n                    <div className=\"container-fluid generalContainer contPrincipal\" id=\"actualPage\">\r\n\r\n                        <div id=\"Lobby\" className=\"page\">\r\n                            <Lobby/>\r\n                        </div>\r\n\r\n                        <div id=\"CycleInventory\" className=\"page\">\r\n                            <CycleInventory />\r\n                        </div>\r\n                        <div id=\"CycleInventoryGraph\" className=\"page\">\r\n                            <CycleInvetoryGraph/>\r\n                        </div>\r\n\r\n                        <div id=\"KPIGraph\" className=\"page\">\r\n                            <KPI/>\r\n                        </div>\r\n\r\n                        <div id=\"Inventory\" className='page'>\r\n                            <Inventory/>\r\n                        </div>\r\n                        <div id=\"PurchaseOrder\" className='page'>\r\n                            <PurchaseOrder/>\r\n                        </div>\r\n\r\n                        <div id=\"PikingSystem\" className='page'>\r\n                            <PikingSystem/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/login-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport Footer from '../components/Footer'\r\nimport { AiOutlineUser, AiOutlineKey, AiOutlineLogin } from 'react-icons/ai';\r\nimport { selectWithDataService } from '../services/auth/authservices';\r\nimport { getValueCookie, setNewCookie } from '../services/cookieService';\r\nimport {automaticCloseAlert} from'../functions/alerts'\r\nimport md5 from 'md5'\r\nimport { closeSession } from \"../functions/closeSession\"\r\nimport App from '../components/App';\r\nimport { OpenCompanyDashBoard, OpenLobby, OpenLogin } from '../functions/pagesFunction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n  state = {\r\n    loginStorage: {\r\n      userName: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  onChangeById = e => {\r\n    var idState = e.target.id.split('_')\r\n    const temp = this.state.loginStorage\r\n    if (idState.length === 2) {\r\n      temp[idState[1]] = e.target.value\r\n    }\r\n\r\n    this.setState({ loginStorage: temp })\r\n  }\r\n\r\n  onKeyDown = async e => {\r\n    if (e.key === 'Enter') {\r\n      await this.Login()\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(getValueCookie('userName')){\r\n      if(getValueCookie('Company')){\r\n        OpenLobby()\r\n        //OpenPurchaseOrder()\r\n        //OpenCycleInventory()\r\n        \r\n      }else{\r\n        OpenCompanyDashBoard()\r\n      }\r\n    }else{\r\n      OpenLogin()\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  async Login() {\r\n    const temp = this.state.loginStorage\r\n    const btn = document.getElementById('btn_signin');\r\n    const btn_logo = btn.innerHTML;\r\n    const datos = {\r\n      userName: temp.userName,\r\n      password: md5(temp.password),\r\n    }\r\n    btn.innerHTML = 'Loading...';\r\n    btn.disabled = true;\r\n    const datos2 = await selectWithDataService(datos, \"/login\")\r\n    if (datos2 != null) {\r\n      if (datos2.status.code === 1) {\r\n        if (datos2.token !== 'invalid') {\r\n          await automaticCloseAlert('correct', 'Welcome: ' + datos2.data.name + \" \" + datos2.data.surname)\r\n          setNewCookie('sessionAuthToken', datos2.token, 50)\r\n          setNewCookie('userName', datos2.data.userName, 50)\r\n          setNewCookie('name', datos2.data.name, 50)\r\n          setNewCookie('surname', datos2.data.surname, 50)\r\n          window.location.reload()\r\n          //await OpenCompanyDashBoard()\r\n        } else {\r\n          closeSession()\r\n          automaticCloseAlert('incorrect', 'Your  Username or Password are incorrect. Please try again')\r\n\r\n        }\r\n      }\r\n    }\r\n    btn.innerHTML = btn_logo;\r\n    btn.disabled = false;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id='login' className='page'>\r\n         \r\n          <div className='container-fluid pb-1 contPrincipal'>\r\n            <div className='container'>\r\n              <div className='row pt-5 pb-3 d-flex justify-content-center'>\r\n                <div className='col-9 contLogin'>\r\n                  <div className=\"border border-5 border-primary\"></div>\r\n                  <div className='row d-flex justify-content-center pt-5   '>\r\n                    <p className='display-2 '>Login</p>\r\n\r\n                    <div className='row d-flex justify-content-center pt-5 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineUser /></span>\r\n                          <input type=\"text\" id='Login_userName' onChange={this.onChangeById} onKeyDown={this.onKeyDown} className=\"form-control\" placeholder='Username' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineKey /></span>\r\n                          <input type=\"password\" id='Login_password' onKeyDown={this.onKeyDown} onChange={this.onChangeById} className=\"form-control\" placeholder='Password' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3 text-center'>\r\n                      <div className='col-7'>\r\n                        <button id='btn_signin' type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => this.Login()}>Sign in <AiOutlineLogin /></button>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        \r\n        <div id='App' className='page'>\r\n          <App />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport Login from './pages/Login';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Login/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}