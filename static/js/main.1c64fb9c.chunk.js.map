{"version":3,"sources":["components/Footer.js","services/Connection/backEndLink.js","functions/alerts.js","services/cookieService.js","services/auth/authservices.js","functions/changeVisibility.js","functions/pagesFunction.js","functions/closeSession.js","components/MenuCompanySelect.js","components/Status.js","services/CABE.js","pages/CompanyDashBoard.js","components/Menu.js","components/ProgressBar.js","components/ModalComponent.js","functions/dateFormat.js","functions/generateDataSetExcel.js","components/ExcelDocument.js","functions/searchInObject.js","pages/CycleInvetory.js","pages/CycleInventoryGraph.js","components/BarGraph.js","pages/KPI.js","components/CartaProducto.js","components/Catalogue.js","components/LineAreaGraph.js","pages/Inventory.js","pages/Lobby.js","pages/PikingSystem.js","pdfConfig/pdfConfig.js","components/OrderPDF.js","pages/PurchaseOrder.js","components/App.js","pages/Login.js","index.js"],"names":["Footer","Date","getFullYear","toString","react_default","a","createElement","Fragment","className","src","alt","this","ActualYear","Component","server","url","automaticCloseAlert","type","message","Swal","fire","icon","title","showConfirmButton","timer","confirmCloseAlert","cookies","Cookies","setNewCookie","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","identification","value","timeExpiration","tiempo","expires","wrap","_context","prev","next","now","set","path","httpOnly","stop","_x","_x2","_x3","apply","arguments","getValueCookie","get","removeCookie","remove","baseURLAuth","selectWithDataService","authservices_regeneratorRuntime","object","route","URL","responseBack","axios","post","data","then","response","catch","error","abrupt","closeAllPages","_step","_iterator","_createForOfIteratorHelper","document","getElementsByClassName","s","n","done","style","display","err","e","f","openPage","id","page","getElementById","CloseAllPages","OpenCompanyDashBoard","_OpenCompanyDashBoard","boton","pagesFunction_regeneratorRuntime","click","OpenLobby","OpenCycleInventory","_OpenCycleInventory","_callee2","_context2","OpenCycleInventoryGraph","_callee3","_context3","OpenLogin","_callee4","button","_context4","CloseCompanySession","closeSession","closeSession_regeneratorRuntime","window","location","reload","MenuCompany","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","href","onClick","role","data-bs-toggle","aria-expanded","index_esm","aria-labelledby","data-bs-target","aria-controls","tabIndex","data-bs-dismiss","aria-label","aria-current","status","Fail","code","Description","Undefined","Success","ServerFail","getInformationNoData","CABE_regeneratorRuntime","getInformationWithData","_ref2","create_Delete_Update_Information","_ref3","_x4","_x5","CompanyDashBoard","state","General","CompanysofUser","userName","info","temporal","setState","console","log","company","name","idCompany","directoryLogo","idTypeofUser","companyid","information","fullname","address","city","webSite","_this2","hidden","getCompanysAssigned","MenuCompanySelect_MenuCompany","map","i","SelectCompany","Footer_Footer","Menu","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","companyId","typeUser","enableModles","needModlesCharge","Modules","ProductInfo","CycleInventory","KPI","ReportGraphs","_AssignModules","Menu_regeneratorRuntime","sent","_AssignStatesModules","modules","element","AssignModules","Menu_createForOfIteratorHelper","t0","t1","finish","AssignStatesModules","bi_index_esm","tb_index_esm","fa_index_esm","_OpenPurchaseOrder","OpenPurchaseOrder","bs_index_esm","_OpenKPIGraph","OpenKPIGraph","ProgressBar","props","min","max","size","progressBarRef","React","createRef","setValue","undefined","valor","height","ref","aria-valuenow","aria-valuemin","aria-valuemax","width","ModalOrders","Modal","show","fullscreen","onHide","close","Header","closeButton","Title","Body","children","formatInputDate","datevalue","arrayDate","split","formatInputDateQuery","date2","formatInputDateQuerytoInput","OrderArrayByDate","array","b","date1","temp","assign","CompareDates","datesta","dateend","DateFormatMAS90","date","arr","FormatQueryReturnDate","div","String","div2","FormatQueryReturnDateWithDash","getDateFromReports","datenow","getMonth","getDate","getDateYearMonthDayDash","getActualDateUTC","toISOString","getDataSet","headers","keys","dataset","columns","generateDataSetExcel_createForOfIteratorHelper","wch","fill","patternType","fgColor","rgb","bgColor","font","color","push","_step2","_iterator2","_step3","_iterator3","col","sz","alignment","horizontal","ExcelFile","ReactExport","ExcelSheet","ExcelDocument","filename","archname","dataSet","sheetname","getIndexElement","findIndex","toUpperCase","CycleInvetory","porcetaje","showModal1","showModal2","showModal3","showModal4","habilitar","chekvalue","checkHistory","selectedItem","selectedCycleInventory","secureTransaction","generalHistory","outBounds","purchaseOrders","generalHistoryFilter","oldCycleInventory","detailOldCycleSelected","detailOldCycleSelectedFilter","optionsSelect1","label","cycleInventoryStorage","closeBy","createBy","days","finishDate","lastUpadeDate","realFinishDate","startDate","updateBy","QuantityItems","FilterQuantity","Detail","DetailFilter","CheckedItems","secureTransaction1","valueSearchBar","CycleInvetory_regeneratorRuntime","search","target","getBySearchBar","valueRadioButton","stat","getByStat","searchOlderCycleInventoryDetail","filter","item","ItemCode","toLowerCase","includes","BIN","handleModalOpen","modal","handleModalClose","onChangeQuantity","index","indexOf","realQuantity","Number","onChangeFilterHistory","Type","ProgrressBarRef","productLine","DetailFilter4","difference","DetailFilter2","DetailFilter3","busqueda","current","idcompany","datos","getDetailCycleInventory","arrayChecked","allArray","allinformation","realData","mergeDataCheck","tempo","getCheckedItems","completePercentage","disableTransaction","realDays","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","_preConfirm","_callee8","actualDate","habilDays","_context8","getTime","getDay","allowOutsideClick","isLoading","_callee9","result","_context9","isConfirmed","_this3","getLastCycleInventory","_x6","enableTransaction","showDenyButton","backdrop","denyButtonText","_ref4","_callee11","_context11","_this4","isDenied","_x7","idQuant","resultquant","flag","idcycleInventoryHeader","countBy","systemQuantity","Quantity","count","total","CycleInvetory_createForOfIteratorHelper","addValue","cantidad","getOldCycleInventory","Start","End","data2","data3","generalHistoryData","pickList","transfer","purchase","adjust","InventStart","InventEnd","DeleteRepeatBins","Inv2Start","Inv2End","InvStart","getDataMayorInventory","InvEnd","categories","consolidateTable","it","fech","splice","_loop","outbounds","transfers","adjusts","InfoArray","_iterator4","_step4","row","Categoria","structure","NoOrder","BIN2","QuantityOrder","QuantityShipped","User","OrderNumber","description","OldQuantity","NewQuantity","username","Date2","_iterator5","_step5","CustomerName","CustomerNo","Cliente","NoCliente","OrdenNo","_iterator6","_step6","BINSalida","BINEntrada","_iterator7","_step7","VendorNo","VendorName","_iterator8","_step8","_iterator9","_step9","unshift","_iterator10","_step10","actualTypes","_iterator11","_step11","itemCode","displaySnipper","val","val2","_iterator12","_step12","Num","QuantityOrdered","CreationDate","_iterator13","_step13","InvoiceNo","SalespersonNo","InvoiceDate","html","_preConfirm2","_callee20","login","password","_context20","getPopup","querySelector","showValidationMessage","_step14","proccessInfo","JSON","parse","stringify","headerKeys","_iterator14","_step15","_iterator15","head","comm","comentary","_preConfirm3","_callee23","coment","_context23","_this5","diff","actual","start","date3","date4","date5","date6","preliminarDays","Math","abs","inhDays","_step16","copyOfHistory","_iterator16","addDifferenceSymbol","_step17","_iterator17","DetailFilter1","toFixed","snipper","_this6","disabled","startNewCycleInventory","endCycleInventory","openOlCycleInventory","isNaN","RemainingDays","ProgressBar_ProgressBar","autoComplete","placeholder","onChange","checked","htmlFor","components_ExcelDocument","generateInfo","getKPI","defaultValue","textStatus","addComentary","setCycleInventoryDetailInfo","updateCycleInventoryDetail","getGeneralHistory","updateSystemQuantity","ModalComponent","getOldDetailCycleInventory","startDate2","finishDate2","realFinishDate2","realQuantityDays","getInfoProduct","react_select_esm","options","generateExcelDataForHistory","CycleInvetoryGraph","datapie","labels","datasets","backgroundColor","borderColor","borderWidth","optionsbar","plugins","text","responsive","interaction","mode","intersect","scales","x","stacked","y","databar","faker","datatype","number","stack","optionsarea","legend","position","dataarea","optionsLine2","databars","ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Filler","react_chartjs_2_dist","BarGraph","KPIInfo","KPIInfoFilter","GraphData","BarGraph1","data1","generateGraphDays","setTitle","completeInfo","setLabels","setData","getKPIInfo","ItemsContados","ExBinaria","BarGraph_BarGraph","CartaProducto","UPC","OnHand","Catalogue","Catalogo","ProductosMostrados","buscarProductos","Productos","producto","contiene","abbreviatedDesc","upc","retornarProducto","buscador","respuesta","setTimeout","focus","parametro","toLocaleLowerCase","Padre","Products","products","unitCost","originalUnitCost","quantityOrdered","quantityReceived","totalCost","nombrePadre","obtenerProductos","aria-hidden","onKeyUp","getProducto","CartaProducto_CartaProducto","LineAreaGraph","Inventory","LineAreaGraph1","Catalogue_Catalogue","rows","LineAreaGraph_LineAreaGraph","Lobby","PikingSystem","pdfConfig","StyleSheet","create","HeaderStyle","HeaderMargin","top","BusinessLogo","left","ContactInfo","textAlign","fontSize","marginInfo","marginLeft","padding","flexDirection","marginBottom","OrderTitleStyle","marginTop","OrderInformation","TitleStyle","TextSeparator","InfoEncabezadoStyle","TextSeparator2","Table","CabeceraTabla","ColumnaNormal","ColumnaGrande","CuerpoTabla","ColumnaGrandeCuerpo","ColumnaNormalCuerpo","ColumnaNormalCuerpo2","ColumnaNormalCuerpo3","Fila","OrderPDF","showModal","Llaves","State","resultado","forEach","llave","colorButton","react_pdf_browser_es","minHeight","fixed","companyLogo","contactInfo","OrderTitle","OrderInfo1","OrderInfo2","headerTable","tit","bodyTable","elemento","break","EncabezadoInfo","headerBodyTable","fila","e2","PurchaseOrder","purchaseOrderHeader","Vendor","Carrier","orderDate","completionDate","creationDate","vendorNo","vendorName","comment","companyPrintHeader","totals","finalquantityOrderedTotal","finalquantityOrderedReceived","finalTotalCost","disableHeader","modalPurchase","oldPurchaseOrderHeader","vendorSelectInformation","onTarget","ident","PurchaseOrder_regeneratorRuntime","quantity","calculateTotals","onTargerHeader","varChange","getPurchaseOrderHeader","createNewPurchaseOrder","getPrintHeaderCompany","disableTransactions","noOrder","orderNumber","enableTransactions","header","tot","defineHeader","_callee7","_context7","clearDashBoardPurchaseOrder","cost","totalquant","_ref5","totalquantOrdered","totalquantReceived","totalcost","PurchaseOrder_createForOfIteratorHelper","temporal2","order","OrderNo","OrderDate","Comment","Status","sizeVendor","detailData","temporalproducts","prod","completeDesc","itemStatus","itemURLImage","lastUpdateDate","QuantityReceived","UnitCost","unitPrice","OriginalUnitCost","vendor","ven","customerNo","change","getVendors","print","cancelPurchaseOrder","colorStateText","stateInWords","handleChange","bind","product","class","removeProduct","createPurchaseOrder","OrderPDF_OrderPDF","SelectOldPurchaseOrder","TotalQuantity","TotalCost","App","CompanyDashBoard_CompanyDashBoard","Menu_Menu","Lobby_Lobby","CycleInvetory_CycleInvetory","CycleInventoryGraph_CycleInvetoryGraph","KPI_KPI","Inventory_Inventory","PurchaseOrder_PurchaseOrder","PikingSystem_PikingSystem","Login","loginStorage","onChangeById","idState","onKeyDown","Login_regeneratorRuntime","btn","btn_logo","innerHTML","md5","datos2","token","surname","App_App","ReactDOM","render","StrictMode","Login_Login"],"mappings":"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","file":"static/js/main.1c64fb9c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/footer-style.css\"\r\n\r\nexport default class Footer extends Component {\r\n\r\n    ActualYear() {\r\n        const time = new Date()\r\n        var year = time.getFullYear()\r\n        return year.toString()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='GenFooter'>\r\n                    <div className='container-fluid justify-content-center text-center bg-dark text-white pt-4 GenFooter'>\r\n\r\n                        <div className='logoFooter pt-2 pb-2'>\r\n                            <img src='/assets/logoM.png' alt='MayalandSolutions' />\r\n\r\n                            <p>Copyright &#169; {this.ActualYear()} Mayaland Solutions.<br /> All Rights Reserved.</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","const server={\r\n  //url:\"http://localhost:4203\"      //DEVELOPMENT\r\n  //url: \"http://134.209.119.149:4203\" //OCEANO DIGITAL\r\n  url:\"http://100.24.21.132:4200\"  //AWS\r\n}\r\n\r\nexport default server","import Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nexport const automaticCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const confirmCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: true, \r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: true,\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default  {automaticCloseAlert,confirmCloseAlert}","import Cookies from \"universal-cookie\";\r\n\r\n\r\nconst cookies=new Cookies();\r\n\r\n\r\nexport const setNewCookie=async(identification,value,timeExpiration)=>{\r\n    var tiempo=60*timeExpiration;\r\n    var expires = (new Date(Date.now()+ tiempo*1000));\r\n    cookies.set(identification, value, { path: \"*\",expires:expires,httpOnly:false});\r\n}\r\n\r\nexport const getValueCookie=(identification)=>{\r\n   return cookies.get(identification)\r\n}\r\n\r\nexport const removeCookie=(identification)=>{\r\n    cookies.remove(identification)\r\n}\r\n\r\n\r\n\r\nexport default {setNewCookie,getValueCookie,removeCookie}","import axios from \"axios\";\r\nimport server from \"../Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../../functions/alerts\"\r\nimport { Navigate} from \"react-router-dom\";\r\nimport React from \"react\"\r\nimport { getValueCookie } from \"../cookieService\";\r\nconst baseURLAuth=server.url+\"/auth\"\r\n\r\n\r\nexport const selectWithDataService=async (object,route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack\r\n    await axios.post(URL,{data:object}).then(\r\n\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\nexport const ProtectedRoute=({children})=>{\r\n    const temp=getValueCookie('sessionAuthToken')\r\n    \r\n    if(!temp){\r\n        return <Navigate to=\"/login\" />\r\n    }\r\n        return children\r\n    \r\n}\r\n\r\n\r\n\r\nexport default {selectWithDataService,ProtectedRoute}","\r\nexport function closeAllPages() {\r\n  let coleccion = document.getElementsByClassName('page');\r\n  for (let objetc of coleccion) {\r\n    objetc.style.display = 'none';\r\n  }\r\n}\r\n\r\nexport function openPage(id) {\r\n  let page = document.getElementById(id);\r\n  if (page) {\r\n    page.style.display = '';\r\n  }\r\n}\r\n\r\nexport default { closeAllPages, openPage }","import { closeAllPages,openPage } from \"./changeVisibility\";\r\nimport { removeCookie } from \"../services/cookieService\";\r\n\r\n\r\nexport function CloseAllPages() {\r\n    closeAllPages();\r\n}\r\n\r\nexport async function OpenCompanyDashBoard() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('catalogueOfCompanyActioner')\r\n    await boton.click()\r\n    openPage( \"App\");\r\n    openPage( \"CompanyDashBoard\");\r\n}\r\n\r\nexport function OpenLobby() {\r\n    CloseAllPages();\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"Lobby\")\r\n    //OpenPikingSystem()\r\n}\r\n\r\nexport async function OpenCycleInventory() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('actionatorCycleInventory')\r\n    await boton.click()\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"CycleInventory\")\r\n}\r\nexport function OpenCycleInventoryGraph(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"CycleInventoryGraph\")\r\n}\r\n\r\nexport async function OpenKPIGraph(){\r\n    CloseAllPages()\r\n    var boton=document.getElementById('actionatorKPI')\r\n    await boton.click()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"KPIGraph\")\r\n}\r\n\r\nexport function OpenLogin() {\r\n    CloseAllPages();\r\n    openPage( \"login\")\r\n}\r\n\r\nexport  function OpenInventory(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"Inventory\")\r\n}\r\n\r\nexport function OpenPikingSystem(){\r\n    CloseAllPages()\r\n    openPage(\"App\");\r\n    openPage(\"GeneralPages\");\r\n    openPage(\"PikingSystem\");\r\n}\r\nexport async function OpenPurchaseOrder(){\r\n    CloseAllPages()\r\n    var button=document.getElementById('vendorsFromPurchaseOrder')\r\n    await button.click()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"PurchaseOrder\")\r\n}\r\n\r\nexport function CloseCompanySession(){\r\n    removeCookie('Company')\r\n    OpenCompanyDashBoard()\r\n\r\n}\r\n\r\nexport default{OpenLogin,CloseAllPages,OpenCycleInventory,OpenLobby,OpenCompanyDashBoard,OpenCycleInventoryGraph,CloseCompanySession}","\r\nimport { removeCookie } from \"../services/cookieService\"\r\nimport { OpenLogin } from \"./pagesFunction\"\r\n\r\nexport const closeSession=async ()=>{\r\n    await removeCookie('userName')\r\n    await  removeCookie('name')\r\n    await removeCookie('surname')\r\n    await removeCookie('sessionAuthToken')\r\n    await removeCookie('Company')\r\n    window.location.reload()\r\n    await OpenLogin()\r\n}\r\n\r\nexport default {closeSession}","import React, { Component } from 'react'\r\nimport \"../css/menuCompany-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport {OpenCompanyDashBoard} from \"../functions/pagesFunction\"\r\n\r\nexport class MenuCompany extends Component {\r\n\r\n\r\n \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='menuCompany'>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                               \r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={()=>OpenCompanyDashBoard()}>\r\n                                    <img src='/assets/logoM.png' alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' />Hi {getValueCookie('name')} {getValueCookie('surname')}<AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                       \r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","export const status = {\r\n\r\n    Fail:{code:-1,Description:\"Operation fail\"},\r\n    Undefined:{code:0,Description:\"Operation Undefined\"},\r\n    Success:{code:1,Description:\"operation successful\"},\r\n    ServerFail:{code:504,Description:'Server is not responding please contact the system administrators'}\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport server from \"../services/Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../functions/alerts\"\r\nimport { status } from \"../components/Status\";\r\nimport { getValueCookie } from \"./cookieService\";\r\nconst baseURLAuth=server.url\r\n\r\n\r\nexport const getInformationNoData=async (route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    await axios.get(URL).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n       \r\n        responseBack={status:status.ServerFail,response:[]};\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n       // confirmCloseAlert('incorrect','Error in the Server Response: '+status.ServerFail.Description)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const getInformationWithData=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const create_Delete_Update_Information=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\n\r\n\r\nexport default {getInformationNoData,create_Delete_Update_Information,getInformationWithData}","import React, { Component } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport { MenuCompany } from \"../components/MenuCompanySelect\";\r\nimport \"../css/companyDash-style.css\"\r\nimport { getInformationWithData } from \"../services/CABE\";\r\n//import { OpenLobby } from '../functions/pagesFunction';\r\nimport { getValueCookie, setNewCookie } from \"../services/cookieService\";\r\nexport default class CompanyDashBoard extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            CompanysofUser: []\r\n        }\r\n    }\r\n\r\n    async getCompanysAssigned() {\r\n        const data = {\r\n            userName: getValueCookie('userName')\r\n        }\r\n        const info = await getInformationWithData('/company/CatalogueofCompanies', data)\r\n        if (info.status.code === 1) {\r\n            const temporal = this.state.General\r\n            temporal.CompanysofUser = info.data\r\n            this.setState({ General: temporal })\r\n            console.log(info)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async SelectCompany(company) {\r\n            setNewCookie('Company', company.name , 50)\r\n            setNewCookie('CompanyId',company.idCompany,50)\r\n            setNewCookie('CompanyLogo',company.directoryLogo,50)\r\n            setNewCookie('TypeUser',company.idTypeofUser,50)\r\n            const data={\r\n                companyid:company.idCompany\r\n            }\r\n            const information= await getInformationWithData('/company/information',data)\r\n    \r\n            if(information.status.code===1){\r\n                setNewCookie('fullName',information.data[0].fullname,50)\r\n                setNewCookie('address',information.data[0].address,50)\r\n                setNewCookie('warehouse',information.data[0].city+\" Warehouse\",50)\r\n                setNewCookie('website',information.data[0].webSite,50)\r\n            }\r\n            window.location.reload()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"companydash\">\r\n                <button hidden id=\"catalogueOfCompanyActioner\" onClick={() => this.getCompanysAssigned()}></button>\r\n                <MenuCompany />\r\n                <div className=\"container-fluid generalContainer contPrincipal\" id=\"actualPage\">\r\n                    <div className=\"title\">\r\n                        <p className=\"text-center display-3\">Hello, please select a Company: </p>\r\n                    </div>\r\n                    <div className=\"container-fluid decoratorBar\"></div>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {\r\n                                    this.state.General.CompanysofUser.map((company, i) => (\r\n                                        <div key={i} className=\"contCompany\" onClick={() => this.SelectCompany(company)}>\r\n                                            <div className=\"titecompany text-center\">\r\n                                                <img src={company.directoryLogo} alt=\"logo\" />\r\n                                                <p>{company.name}<br /> <br /><br /><br /></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport \"../css/menu-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineReconciliation, AiOutlineClockCircle, AiOutlineHome, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle, AiOutlineAreaChart, AiTwotoneSnippets,AiFillDropboxSquare } from \"react-icons/ai\";\r\nimport { BiCartAlt } from \"react-icons/bi\";\r\nimport { TbBuildingWarehouse } from \"react-icons/tb\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { CloseCompanySession, OpenCycleInventory, OpenCycleInventoryGraph, OpenInventory,OpenPikingSystem, OpenKPIGraph, OpenLobby,OpenPurchaseOrder } from '../functions/pagesFunction';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport { BiExit } from \"react-icons/bi\";\r\nimport {BsBoxSeam} from \"react-icons/bs\"\r\nimport { getInformationWithData } from '../services/CABE';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            directoryLogo: getValueCookie('CompanyLogo'),\r\n            companyId: getValueCookie('CompanyId'),\r\n            typeUser: getValueCookie('TypeUser'),\r\n            enableModles:[],\r\n            needModlesCharge:true\r\n        },\r\n        Modules:{\r\n            ProductInfo:true,\r\n            CycleInventory:true,\r\n            KPI:true,\r\n            ReportGraphs:true\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    async AssignModules() {\r\n        const data = {\r\n            typeUser: this.state.General.typeUser,\r\n            companyId: this.state.General.companyId\r\n        }\r\n        const response = await getInformationWithData('/company/Modules', data)\r\n        \r\n        if (response.status.code === 1) {\r\n            const temporal=this.state.General\r\n            temporal.enableModles=response.data\r\n            this.setState({General:temporal})\r\n        }\r\n\r\n    }\r\n\r\n    async AssignStatesModules(){\r\n        if(this.state.General.needModlesCharge){\r\n            const temporal=this.state.General\r\n            temporal.needModlesCharge=false\r\n            const modules=this.state.Modules\r\n            await this.AssignModules()\r\n            \r\n            for (const element of this.state.General.enableModles) {\r\n                \r\n                switch(element.name){\r\n                    case 'Cycle Inventory':\r\n                        modules.CycleInventory=false\r\n                        break;\r\n                    case 'KPI':\r\n                        modules.KPI=false;\r\n                        break\r\n                    case 'Reports Graphs':\r\n                        modules.ReportGraphs=false;\r\n                        break\r\n                    case 'Product Information':\r\n                        modules.ProductInfo=false;\r\n                        break\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({General:temporal,Modules:modules})\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                                <button onClick={()=>this.AssignStatesModules()} className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\" aria-controls=\"offcanvasNavbar\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={() => OpenLobby()}>\r\n                                    <img src={this.state.General.directoryLogo} alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' /> Hi {getValueCookie('name')} {getValueCookie('surname')} <AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => OpenLobby()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"offcanvas offcanvas-start\" tabIndex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Menu Options</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => OpenLobby()}>Home <AiOutlineHome /></a>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Inventory management <AiOutlineReconciliation /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Products Information <BiCartAlt /></a></li>\r\n                                            <li hidden={this.state.Modules.CycleInventory} onClick={() => OpenCycleInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cyclical Inventory <AiOutlineClockCircle /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Warehouse management <TbBuildingWarehouse /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li  onClick={() => OpenPikingSystem()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Picking System<FaClipboardList /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Purchase Order <AiFillDropboxSquare /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenPurchaseOrder()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Purchase Order <BsBoxSeam /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n\r\n                                    <li hidden={(this.state.Modules.ReportGraphs&&this.state.Modules.KPI)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Reports <AiOutlineAreaChart /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ReportGraphs}  onClick={() => OpenCycleInventoryGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cyclical Inventory <AiOutlineClockCircle /></a></li>\r\n                                            <li hidden={this.state.Modules.KPI} onClick={() => OpenKPIGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">KPI (Key Performance Indicators) <AiTwotoneSnippets /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => CloseCompanySession()}>Close Company Session <BiExit /></a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => OpenLobby()}><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => closeSession()}><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default  class ProgressBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.progressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        min:0, \r\n        max:100,\r\n        value:0,\r\n        size:50\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setValue(95);\r\n    }\r\n\r\n    \r\n    configBar(min,max,size = 25){\r\n        this.setState({min:min});\r\n        this.setState({max:max});\r\n        this.setState({value:min});\r\n        this.setState({size:size});\r\n    }\r\n\r\n    setValue(valor){\r\n        if(valor>=this.state.min && valor <= this.state.max){ \r\n            this.setState({value:valor});\r\n        }else{\r\n            console.error('ERROR: La cantidad en la progress bar no esta dentro de los limites establecidos, revise el codigo de configuración');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"progress\" style={{height: this.state.size+\"px\"}} ref={this.progressBarRef}>\r\n                <div\r\n                    className=\"progress-bar progress-bar-striped progress-bar-animated bg-primary \"\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={this.state.value}\r\n                    aria-valuemin={this.state.min}\r\n                    aria-valuemax={this.state.max}\r\n                    style={{ width: this.state.value+\"%\" }}>\r\n                    {this.state.value}%\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Modal} from 'react-bootstrap'\r\nimport '../css/table-responsive.css'\r\nconst ModalOrders = (props) => {\r\n    return (\r\n      <>\r\n      \r\n        <Modal title={props.title} show={props.show} fullscreen={true} onHide={props.close}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className='container'>\r\n              {props.children}\r\n              </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n \r\nexport default ModalOrders;","export function formatInputDate(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('-')\r\n    if(arrayDate.length===3){\r\n    return arrayDate[1]+\"/\"+arrayDate[2]+\"/\"+arrayDate[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function formatInputDateQuery(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('T')\r\n    if(arrayDate.length===2){\r\n    const date2=arrayDate[0].split('-')\r\n    if(date2.length===3){\r\n        return date2[1]+\"/\"+date2[2]+\"/\"+date2[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function formatInputDateQuerytoInput(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('T')\r\n    if(arrayDate.length===2){\r\n    const date2=arrayDate[0].split('-')\r\n    if(date2.length===3){\r\n        return date2[0]+\"-\"+date2[1]+\"-\"+date2[2]\r\n    }else{\r\n        return \"\"\r\n    }\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function OrderArrayByDate(array){\r\n    for(let a=0;a<array.length;a++){\r\n        for(let b=0;b<(array.length-a-1);b++){\r\n            const date1=array[b].Date.split('/')\r\n            const date2=array[b+1].Date.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n            \r\n            if(date3>date4){\r\n                var temp=Object.assign({},array[b])\r\n                array[b]=Object.assign({},array[b+1])\r\n                array[b+1]=Object.assign({},temp)\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\nexport function CompareDates(datesta,dateend){\r\n    \r\n            const date1=datesta.split('/')\r\n            const date2=dateend.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n           \r\n            if(date3<=date4){\r\n                return true\r\n            }\r\n\r\n            return false\r\n        }\r\n  \r\n\r\n    }\r\n\r\nexport function DateFormatMAS90(date){\r\n    var arr=date.split('-')\r\n    if(arr.length===3){\r\n        return arr[1]+\"/\"+arr[2]+\"/\"+arr[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function FormatQueryReturnDate(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        var div2=div[0].split('-')\r\n        if(div2.length===3){\r\n            return div2[1]+\"/\"+div2[2]+\"/\"+div2[0]\r\n        }else{\r\n            return \"\"\r\n        }\r\n\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function FormatQueryReturnDateWithDash(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        return div[0].split('-')\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function getDateFromReports(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"-\"+datenow.getDate()+\"-\"+datenow.getFullYear()\r\n}\r\n\r\nexport function getDateYearMonthDayDash(){\r\n    const datenow=new Date()\r\n    return datenow.getFullYear()+'-'+(datenow.getMonth()+1)+\"-\"+datenow.getDate()\r\n}\r\n\r\nexport function ActualDate(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"/\"+datenow.getDate()+\"/\"+datenow.getFullYear()\r\n}\r\nexport function getActualDateUTC(){\r\n    const datenow=new Date()\r\n    return datenow.toISOString()\r\n}\r\n\r\n\r\nexport default {formatInputDate,OrderArrayByDate,FormatQueryReturnDate,ActualDate,getActualDateUTC,formatInputDateQuery,FormatQueryReturnDateWithDash,\r\n    getDateYearMonthDayDash,CompareDates,formatInputDateQuerytoInput,DateFormatMAS90}","export function getDataSet(info, headers,keys) {\r\n    var dataset = [{\r\n        columns: [],\r\n        data: []\r\n    }]\r\n   \r\n    for (const column of headers) {\r\n        const data = {\r\n            title: column, width: { wch: 10 },\r\n            style: {\r\n                fill: {\r\n                    patternType: \"solid\",\r\n                    fgColor: { rgb: \"000000\" },\r\n                    bgColor: { rgb: \"FFFFFF\" }\r\n                },\r\n                font:{\r\n                    color:{rgb:\"FFFFFF\"}\r\n                }\r\n            }\r\n        }\r\n\r\n        dataset[0].columns.push(data)\r\n    }\r\n\r\n    for(const data of info){\r\n        var temp=[]\r\n        for (const key of keys) {\r\n            const col= {\r\n                value: String(data[key]),\r\n                style: {\r\n                    font: {sz: \"10\"},\r\n                    alignment:{horizontal:\"left\"}\r\n                }\r\n            }\r\n            temp.push(col)\r\n        }\r\n    dataset[0].data.push(temp)\r\n\r\n    }\r\n\r\n    return dataset\r\n}\r\n\r\nexport default {getDataSet}","import ReactExport from 'react-data-export';\r\nimport React from 'react';\r\nimport {AiFillFileExcel } from \"react-icons/ai\"\r\nconst ExcelFile = ReactExport.ExcelFile\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet\r\n\r\nconst ExcelDocument=(props)=>{\r\n    return(\r\n        <>\r\n        \r\n        <ExcelFile  element={<button type=\"button\" hidden={props.hidden} className=\"btn btn-success btn-lg w-100 h-100\">Download Report In XLSX <AiFillFileExcel/></button>} filename={props.archname}>\r\n            <ExcelSheet dataSet={props.data} name={props.sheetname}/>\r\n        </ExcelFile>\r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExcelDocument","export function getIndexElement(array, key, element){\r\n    const index = array.findIndex(code => {  \r\n        return String(code[key]).toUpperCase() === element.toUpperCase()\r\n    })\r\n\r\n    return index\r\n}\r\n\r\nexport default {getIndexElement}","import React, { Component } from 'react'\r\nimport ProgressBar from '../components/ProgressBar'\r\nimport { AiOutlineSearch, AiFillCalendar } from \"react-icons/ai\"\r\nimport '../css/table-responsive.css'\r\nimport '../css/general-style.css'\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { automaticCloseAlert } from '../functions/alerts'\r\nimport { CompareDates, DateFormatMAS90, formatInputDate, formatInputDateQuery, FormatQueryReturnDate, FormatQueryReturnDateWithDash, getActualDateUTC, getDateFromReports, getDateYearMonthDayDash, OrderArrayByDate } from '../functions/dateFormat'\r\nimport { getDataSet } from '../functions/generateDataSetExcel'\r\nimport ExcelDocument from '../components/ExcelDocument'\r\nimport Select from 'react-select';\r\nimport { getIndexElement } from '../functions/searchInObject'\r\n\r\n\r\nexport default class CycleInvetory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ProgrressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        dataset: [{\r\n            columns: [],\r\n            data: []\r\n        }],\r\n        porcetaje: 0,\r\n        General: {\r\n            showModal1: false,\r\n            showModal2: false,\r\n            showModal3: false,\r\n            showModal4: false,\r\n            habilitar: false,\r\n            chekvalue: '0',\r\n            checkHistory: '0',\r\n            selectedItem: '',\r\n            selectedCycleInventory: null,\r\n            secureTransaction: false,\r\n            generalHistory: [],\r\n            outBounds: [],\r\n            purchaseOrders: [],\r\n            generalHistoryFilter: [],\r\n            oldCycleInventory: [],\r\n            detailOldCycleSelected: [],\r\n            detailOldCycleSelectedFilter: [],\r\n            optionsSelect1:[{value:'All', label:'All'}],\r\n            \r\n        },\r\n\r\n        cycleInventoryStorage: {\r\n            Header: {\r\n                closeBy: null,\r\n                createBy: '',\r\n                days: 0,\r\n                finishDate: '',\r\n                id: 0,\r\n                lastUpadeDate: '',\r\n                realFinishDate: '',\r\n                startDate: '',\r\n                status: 0,\r\n                updateBy: '',\r\n                QuantityItems:0,\r\n                FilterQuantity:0\r\n            },\r\n            Detail: [],\r\n            DetailFilter: [],\r\n            CheckedItems: []\r\n        },\r\n        secureTransaction1:false\r\n\r\n    }\r\n    valueSearchBar = async e => {\r\n        let search = e.target.value\r\n        this.getBySearchBar(search)\r\n    }\r\n\r\n    valueRadioButton = async e => {\r\n        document.getElementById('searchCycleInv1').value = \"\"\r\n        let stat = e.target.value\r\n        const temporal = this.state.General\r\n        temporal.chekvalue = stat\r\n        this.setState({ General: temporal })\r\n        this.getByStat(stat)\r\n    }\r\n\r\n\r\n\r\n    searchOlderCycleInventoryDetail = e => {\r\n        let search = e.target.value\r\n\r\n\r\n        var DetailFilter = this.state.General.detailOldCycleSelected.filter((item) => {\r\n            if (item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.status.toString().toLowerCase().includes(search.toLowerCase())) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        \r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelectedFilter = DetailFilter\r\n        \r\n        this.setState({ General: temporal})\r\n    }\r\n\r\n\r\n\r\n    getBySearchBar(search) {\r\n        \r\n        if (search !== \"\" && this.state.General.chekvalue !== '-1') {\r\n            if (this.state.General.chekvalue==='0'||this.state.General.chekvalue==='1'){\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(this.state.General.chekvalue)) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            \r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter\r\n            temporal.Header.FilterQuantity=DetailFilter.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }else if(this.state.General.chekvalue==='2'){\r\n            var DetailFilter4 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(\"1\")&&item.difference!==0) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            \r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter4\r\n            temporal.Header.FilterQuantity=DetailFilter4.length\r\n            this.setState({ cycleInventoryStorage: temporal }) \r\n        }\r\n        } else if (search !== \"\") {\r\n            \r\n            var DetailFilter2 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase()))) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter2\r\n            temporal.Header.FilterQuantity=DetailFilter2.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n\r\n        } else {\r\n            this.getByStat(this.state.General.chekvalue)\r\n        }\r\n\r\n    }\r\n\r\n    getByStat(stat) {\r\n        if (stat !== \"-1\") {\r\n            if(stat===\"0\"||stat===\"1\"){\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.status.toString().toLowerCase().includes(stat.toLowerCase())) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            const temporal = this.state.cycleInventoryStorage\r\n\r\n            temporal.DetailFilter = DetailFilter\r\n            temporal.Header.FilterQuantity=DetailFilter.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }else if (stat===\"2\"){\r\n           \r\n            var DetailFilter3 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.difference!==0) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            const temporal = this.state.cycleInventoryStorage\r\n\r\n            temporal.DetailFilter = DetailFilter3\r\n            temporal.Header.FilterQuantity=DetailFilter3.length\r\n            this.setState({ cycleInventoryStorage: temporal }) \r\n        \r\n        }\r\n\r\n            \r\n        } else {\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = temporal.Detail\r\n            temporal.Header.FilterQuantity=temporal.Detail.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCategory(stat) {\r\n        var busqueda = \"\"\r\n        switch (stat) {\r\n            case \"0\":\r\n                busqueda = \"purchase\"\r\n                break;\r\n            case \"1\":\r\n                busqueda = \"transferencia\"\r\n                break;\r\n            case \"2\":\r\n                busqueda = \"ajuste\"\r\n                break;\r\n            case \"3\":\r\n                busqueda = \"outbound\"\r\n                break;\r\n            default:\r\n                busqueda = \"\"\r\n                break;\r\n        }\r\n        return busqueda;\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        this.ProgrressBarRef.current.setValue(0);\r\n\r\n    }\r\n\r\n    async getLastCycleInventory() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const route = '/inventory/lastCycle/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header = datos.data[0]\r\n\r\n                if (temporal.Header.status === 0) {\r\n                    \r\n                    await this.getDetailCycleInventory(temporal.Header.id, \"actual\")\r\n                } else {\r\n                    temporal.Detail = []\r\n                    temporal.DetailFilter = []\r\n                    await this.setState({ cycleInventoryStorage: temporal })\r\n                }\r\n            } else {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header.status = 1\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async getOldCycleInventory() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const route = '/invertory/oldCycleInventorys/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = datos.data\r\n                await this.setState({ General: temporal })\r\n\r\n            } else {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = []\r\n                await this.setState({ General: temporal })\r\n            }\r\n        }\r\n    }\r\n\r\n    mergeDataCheck(arrayChecked, allArray) {\r\n\r\n        for (let a = 0; a < arrayChecked.length; a++) {\r\n            for (let b = 0; b < allArray.length; b++) {\r\n                if (arrayChecked[a].ItemCode === allArray[b].ItemCode && arrayChecked[a].BIN === allArray[b].BIN && arrayChecked[a].status === 1) {\r\n                    allArray[b] = arrayChecked[a]\r\n                    break\r\n                }\r\n            }\r\n\r\n        }\r\n        return allArray\r\n    }\r\n\r\n\r\n    async getDetailCycleInventory(id, type) {\r\n        const data = {\r\n            id: id,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (type === \"actual\") {\r\n            const route2 = '/inventory/allProductsCycle/post';\r\n            const allinformation = await getInformationWithData(route2, data)\r\n\r\n            if (datos.status.code === 1 && allinformation.status.code === 1) {\r\n                const realData = this.mergeDataCheck(datos.data, allinformation.data)\r\n                \r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Detail = realData\r\n                temporal.DetailFilter = realData\r\n                temporal.Header.QuantityItems=realData.length\r\n                temporal.Header.FilterQuantity=realData.length\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                const tempo = this.state.cycleInventoryStorage\r\n                tempo.CheckedItems = await this.getCheckedItems()\r\n                await this.setState({ cycleInventoryStorage: tempo })\r\n                await this.getByStat('0')\r\n                await this.completePercentage()\r\n            }\r\n        } else if (type === \"old\") {\r\n            const temporal = this.state.General\r\n            temporal.detailOldCycleSelected = datos.data\r\n            temporal.detailOldCycleSelectedFilter = datos.data\r\n            await this.setState({ General: temporal })\r\n        }\r\n\r\n    }\r\n    getOldDetailCycleInventory(item) {\r\n        const temporal = this.state.General\r\n        temporal.selectedCycleInventory = item\r\n        this.setState({ General: temporal })\r\n        this.getDetailCycleInventory(item.id, \"old\")\r\n    }\r\n\r\n\r\n    enableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    async disableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = true\r\n        await this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async startNewCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            days: 0,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            userName: getValueCookie('userName'),\r\n            realDays:0\r\n        }\r\n        await Swal.fire({\r\n            title: 'Number of Days of Cyclical Inventory',\r\n            input: 'number',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Confirm',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async (days) => {\r\n                data.days = days\r\n                var actualDate = new Date();\r\n                var finishDate = new Date(actualDate.getTime() + Number(Number(days) * 86400000))\r\n                var habilDays=0\r\n                while (actualDate<=finishDate){\r\n                    if(actualDate.getDay()===0||actualDate.getDay()===6){\r\n                        habilDays++\r\n                    }\r\n                    actualDate=new Date(actualDate.getTime()+86400000)\r\n                }\r\n                \r\n                data.realDays=Number(data.days)+Number(habilDays)\r\n                return await create_Delete_Update_Information('/invertory/newCycle/post', data)\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n\r\n            if (result.isConfirmed) {\r\n                await this.getLastCycleInventory()\r\n                await Swal.fire({\r\n                    title: `The Cyclical Inventory was created!`,\r\n                })\r\n\r\n            }\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    async endCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            userName: getValueCookie('userName')\r\n        }\r\n        await Swal.fire({\r\n            title: 'Do you want to end the actual Cyclical Inventory?',\r\n            showDenyButton: true,\r\n            backdrop:true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    const res = await create_Delete_Update_Information('/invertory/closeCycle/post', data)\r\n                    if (res.status.code === 1) {\r\n                        await this.getLastCycleInventory()\r\n                        Swal.fire('Cyclical inventory are closed!', '', 'success')\r\n                        this.setState({ porcetaje: 0 })\r\n                        this.ProgrressBarRef.current.setValue(0);\r\n\r\n                    } else {\r\n                        Swal.fire('Cyclical inventory could not be closed', '', 'error')\r\n                    }\r\n\r\n                } else if (result.isDenied) {\r\n                    Swal.fire('Changes are not saved', '', 'info')\r\n                }\r\n            }\r\n\r\n        })\r\n        this.enableTransaction()\r\n    }\r\n\r\n    async setCycleInventoryDetailInfo(item, idQuant) {\r\n        this.disableTransaction()\r\n        const data={\r\n            ItemCode:item.ItemCode,\r\n            BIN:item.BIN,\r\n            company:getValueCookie('Company')\r\n        }\r\n\r\n        const resultquant= await getInformationWithData('/invertory/getQuantity/post',data)\r\n        if(resultquant.status.code===1){\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        var flag = true\r\n        if (index !== -1) {\r\n\r\n            if (temporal.Detail[index].idcycleInventoryHeader !== 0) {\r\n                flag = false\r\n            }\r\n\r\n            temporal.Detail[index].idcycleInventoryHeader = this.state.cycleInventoryStorage.Header.id\r\n            \r\n            temporal.Detail[index].countBy = getValueCookie('userName')\r\n            temporal.Detail[index].date = getActualDateUTC()\r\n            temporal.Detail[index].systemQuantity=resultquant.data[0].Quantity\r\n            temporal.Detail[index].difference = temporal.Detail[index].realQuantity - resultquant.data[0].Quantity\r\n            temporal.Detail[index].status = 1\r\n            var response\r\n            if (flag) {\r\n                response = await create_Delete_Update_Information('/invertory/insertDetailCycle/post', temporal.Detail[index])\r\n            } else {\r\n                response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n            }\r\n            if (response.status.code === 1) {\r\n\r\n                automaticCloseAlert('correct', 'The item was check!')\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                await this.completePercentage()\r\n            } else {\r\n                automaticCloseAlert('incorrect', 'The item was not checked')\r\n            }\r\n        }\r\n        const tempo = this.state.cycleInventoryStorage\r\n        tempo.CheckedItems = await this.getCheckedItems()\r\n        await this.setState({ cycleInventoryStorage: tempo })\r\n        await this.enableTransaction()\r\n        }\r\n\r\n    }\r\n\r\n    async updateCycleInventoryDetail(item) {\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        if (index !== -1) {\r\n            temporal.Detail[index].countBy = null\r\n            temporal.Detail[index].status = 0\r\n            await this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n    completePercentage() {\r\n        this.setState({ porcetaje: 0 })\r\n        var count = 0;\r\n        var total = this.state.cycleInventoryStorage.Detail.length\r\n\r\n        for (const item of this.state.cycleInventoryStorage.Detail) {\r\n            if (item.status === 1)\r\n                count++\r\n        }\r\n\r\n        for (let a = 0; a < ((count * 100) / total); a++) {\r\n            this.addValue()\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    textStatus(value) {\r\n        if (value === 0) {\r\n            return \"Not checked\"\r\n        }\r\n        return \"Checked\"\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    addValue() {\r\n        let cantidad = this.state.porcetaje;\r\n        cantidad++;\r\n        this.setState({ porcetaje: cantidad });\r\n        this.ProgrressBarRef.current.setValue(cantidad);\r\n    }\r\n\r\n    handleModalOpen = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = true\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    handleModalClose = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async openOlCycleInventory() {\r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelected = []\r\n        temporal.detailOldCycleSelectedFilter = []\r\n        temporal.selectedCycleInventory = null\r\n        this.setState({ General: temporal })\r\n        this.getOldCycleInventory()\r\n        await this.handleModalOpen(\"showModal2\")\r\n    }\r\n\r\n    async getInfoProduct() {\r\n        this.setState({secureTransaction1:true})\r\n        var date1 = formatInputDate(document.getElementById('searchHistoryCycleInvDate1').value)\r\n        var date2 = formatInputDate(document.getElementById('searchHistoryCycleInvDate2').value)\r\n        const data = {\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            Start: date1,\r\n            End: date2,\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId')\r\n        }\r\n        const data2={\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId'),\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            date:date1\r\n        }\r\n        const data3={\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId'),\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            date:date2\r\n        }\r\n\r\n        //AQUI COLOCAR LAS LLAMADAS A LOS DATOS\r\n        //const route = '/invertory/getGeneralHistory/post';\r\n        const generalHistoryData = await getInformationWithData('/invertory/getGeneralHistory/post', data)\r\n        const pickList = await getInformationWithData('/pickList/history/getByItemCode', data)\r\n        const transfer = await getInformationWithData('/transfer/history/getByItemCode', data)\r\n        const purchase = await getInformationWithData('/purchase/history/getByItemCode', data)\r\n        const adjust = await getInformationWithData('/adjustment/history/getByItemCode', data)\r\n        const InventStart=await getInformationWithData('/Items/getQuantityHistory',data2)\r\n        const InventEnd=await getInformationWithData('/Items/getQuantityHistory',data3)\r\n        \r\n        if (InventStart.status.code===1&&InventEnd.status.code===1&&generalHistoryData.status.code === 1 && pickList.status.code === 1 && transfer.status.code === 1 && purchase.status.code === 1 && adjust.status.code === 1) {\r\n            const Inv2Start=await this.DeleteRepeatBins(data2,InventStart.data)\r\n            const Inv2End=await this.DeleteRepeatBins(data3,InventEnd.data)\r\n            const InvStart=this.getDataMayorInventory(Inv2Start,'Start')\r\n            const InvEnd=this.getDataMayorInventory(Inv2End,'End')\r\n            const categories=this.state.General\r\n            categories.optionsSelect1=[{ value: 'All', label: 'All'}]\r\n            this.setState({General:categories})\r\n            await this.consolidateTable(pickList.data, purchase.data, transfer.data, adjust.data, generalHistoryData.data,InvStart,InvEnd)\r\n        }\r\n        this.setState({secureTransaction1:false})\r\n    }\r\n\r\n   async DeleteRepeatBins(data,information){\r\n    const result=await getInformationWithData('/inventory/getDeletedBins/post',data)\r\n    if(result.status.code===1){\r\n        \r\n        for(let it of result.data) {\r\n            for (let a = information.length-1; a >= 0; a--) {\r\n                if(information[a].BIN===it.BIN&&CompareDates(formatInputDateQuery(information[a].fech),formatInputDateQuery(it.date))){\r\n                    information.splice(a,1)\r\n                }\r\n            }\r\n        }\r\n        \r\n        return information\r\n    }else{\r\n        return []\r\n    }\r\n   }\r\n    getDataMayorInventory(data,type){\r\n       var information=[]\r\n       for (const it of data) {\r\n            const index=information.findIndex(element=>{\r\n                return String(element.BIN).toLowerCase()===it.BIN.toLowerCase()\r\n            })\r\n            if(index===-1){\r\n                if(type==='Start'){\r\n                it.Type='Inventory Start'\r\n                }else{\r\n                it.Type='Inventory End'\r\n                }\r\n                information.push(it)\r\n            }\r\n       } \r\n\r\n\r\n       return information\r\n    }\r\n\r\n\r\n\r\n    async consolidateTable(outbounds, purchase, transfers, adjusts, generalHistory,InvStart,InvEnd) {\r\n        \r\n\r\n        var InfoArray = []\r\n\r\n        for (const row of generalHistory) {\r\n            if (row.Categoria !== \"General\") {\r\n                const structure = {\r\n                    Type: '',\r\n                    NoOrder: '',\r\n                    Description:'',\r\n                    BIN: '',\r\n                    BIN2: '',\r\n                    QuantityOrder: '',\r\n                    QuantityShipped: '',\r\n                    User: '',\r\n                    Date: ''\r\n                }\r\n                structure.Type = row.Categoria\r\n                structure.NoOrder = row.OrderNumber\r\n                structure.Description=row.description\r\n                structure.BIN = row.BIN\r\n                structure.BIN2 = row.BIN2\r\n                structure.QuantityOrder = row.OldQuantity\r\n                structure.QuantityShipped = row.NewQuantity\r\n                structure.User = row.username\r\n                structure.Date = row.Date2\r\n                InfoArray.push(structure)\r\n            }\r\n\r\n        }\r\n\r\n        for (const row of outbounds) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: '',\r\n                CustomerName:'',\r\n                CustomerNo:''\r\n            }\r\n            \r\n            structure.CustomerName=row.Cliente \r\n            structure.CustomerNo=row.NoCliente\r\n            structure.Type = row.Type\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.Description=row.description\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.QuantityOrder\r\n            structure.QuantityShipped = row.QuantityShipped\r\n            structure.User = row.username\r\n            \r\n            if(FormatQueryReturnDate(row.Date).split(\"/\").length===3){\r\n                structure.Date = FormatQueryReturnDate(row.Date)\r\n            }else{\r\n                structure.Date = DateFormatMAS90(row.Date)\r\n            }\r\n\r\n            \r\n            InfoArray.push(structure)\r\n            \r\n        }\r\n\r\n        for (const row of transfers) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.Description=row.description\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BINSalida\r\n            structure.BIN2 = row.BINEntrada\r\n            structure.QuantityOrder = 0\r\n            structure.QuantityShipped = row.Quantity\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of purchase) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: '',\r\n                CustomerName:'',\r\n                CustomerNo:''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.CustomerNo=row.VendorNo\r\n            structure.CustomerName=row.VendorName\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.BIN = row.BIN\r\n            structure.Description=row.description\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.Quantity\r\n            structure.QuantityShipped = null\r\n            structure.User = row.username\r\n\r\n            if(FormatQueryReturnDate(row.Date).split(\"/\").length===3){\r\n                structure.Date = FormatQueryReturnDate(row.Date)\r\n            }else{\r\n                structure.Date = DateFormatMAS90(row.Date)\r\n            }\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of adjusts) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.OldQuantity\r\n            structure.QuantityShipped = row.NewQuantity\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n\r\n\r\n        var n = await OrderArrayByDate(InfoArray)\r\n        for (const item of InvStart) {\r\n            n.unshift(item)\r\n        }\r\n        for (const item of InvEnd) {\r\n            n.push(item)\r\n        }\r\n        var actualTypes=this.state.General.optionsSelect1\r\n        for (const row of n) {\r\n            const ind=getIndexElement(actualTypes,\"value\",row.Type)\r\n            if(ind===-1){\r\n                const element={\r\n                    value:row.Type,\r\n                    label:row.Type\r\n                }\r\n                actualTypes.push(element)\r\n            }\r\n        }\r\n\r\n\r\n        const temporal = this.state.General\r\n        temporal.generalHistory = n\r\n        temporal.generalHistoryFilter = n\r\n        temporal.optionsSelect1=actualTypes\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async getGeneralHistory(itemCode) {\r\n        this.handleModalOpen(\"showModal3\")\r\n        this.displaySnipper('snipperDetail','')\r\n        //this.setState({secureTransaction1:true})\r\n        const temporal = this.state.General\r\n        temporal.selectedItem = itemCode\r\n        temporal.generalHistory = []\r\n        temporal.generalHistoryFilter = []\r\n        const data = {\r\n            ItemCode: itemCode.ItemCode,\r\n            company:getValueCookie('Company'),\r\n            Date: FormatQueryReturnDate(this.state.cycleInventoryStorage.Header.startDate)\r\n        }\r\n\r\n        const val = await getInformationWithData('/pickList/history/getOutBound', data)\r\n        const val2= await getInformationWithData('/invoice/history/getCurrentInvoice',data)\r\n        //const val2 = await getInformationWithData('/purchase/history/getFutureByItemCode', data)\r\n        if (val.status.code === 1 && val2.status.code===1) {\r\n            var arr=[]\r\n            for (const row of val.data) {\r\n                const element={\r\n                    Type:row.Type,\r\n                    Number:row.Num,\r\n                    BIN:row.BIN,\r\n                    QuantityOrdered:row.QuantityOrdered,\r\n                    QuantityShipped:row.QuantityShipped,\r\n                    username:row.username,\r\n                    date:row.CreationDate\r\n                }\r\n                arr.push(element)\r\n            }\r\n\r\n            for(const row of val2.data){\r\n                const element={\r\n                    Type:row.Type,\r\n                    Number:row.InvoiceNo,\r\n                    BIN:row.BIN,\r\n                    QuantityOrdered:row.QuantityOrdered,\r\n                    QuantityShipped:row.QuantityShipped,\r\n                    username:row.SalespersonNo,\r\n                    date:row.InvoiceDate\r\n                }\r\n                arr.push(element)\r\n            }\r\n\r\n            temporal.outBounds = arr\r\n            this.displaySnipper('snipperDetail','none')\r\n        }\r\n\r\n       /* if (val2.status.code === 1) {\r\n            temporal.purchaseOrders = val2.data\r\n\r\n        }\r\n        */\r\n\r\n        this.setState({ General: temporal })\r\n        //this.setState({secureTransaction1:false})\r\n        \r\n    }\r\n\r\n    async updateSystemQuantity(item) {\r\n\r\n        this.setState({ secureTransaction: true })\r\n        Swal.fire({\r\n            title: 'For this Action you need a User and  Password Admin. Please enter it to continue:',\r\n            html: `<input type=\"text\" id=\"loginChangeQuantity\" class=\"swal2-input\" placeholder=\"Username\">\r\n  <input type=\"password\" id=\"passwordChangeQuantity\" class=\"swal2-input\" placeholder=\"Password\">`,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Continue',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const login = Swal.getPopup().querySelector('#loginChangeQuantity').value\r\n                const password = Swal.getPopup().querySelector('#passwordChangeQuantity').value\r\n                if (!login || !password) {\r\n                    Swal.showValidationMessage(`Please enter login and password`)\r\n                } else if (login === \"diego.perez\" && password === \"Diego1560\") {\r\n                    automaticCloseAlert('correct', 'The Quantity has been updated!')\r\n                } else {\r\n                    automaticCloseAlert('incorrect', 'Username or password are invalid!')\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        this.setState({ secureTransaction: false })\r\n    }\r\n\r\n    async getCheckedItems() {\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        return datos.data\r\n    }\r\n\r\n    generateInfo() {\r\n\r\n        let proccessInfo = JSON.parse(JSON.stringify(this.state.cycleInventoryStorage.CheckedItems))\r\n        const headerKeys = ['ItemCode', 'productLine', 'Description', 'realQuantity', 'BIN', 'systemQuantity', 'difference', 'countBy', 'date', 'status', 'comentary']\r\n        for (const item of proccessInfo) {\r\n            for (const head of headerKeys) {\r\n                if (head !== \"status\") {\r\n                    if (item[head] === null || item[head] === \"null\") {\r\n                        item[head] = \"\"\r\n                    } else if (head === \"date\") {\r\n                        item[head] = FormatQueryReturnDate(item[head])\r\n                    }\r\n                } else {\r\n                    if (item[head] === 0) {\r\n                        item[head] = \"Not checked\"\r\n                    } else {\r\n                        item[head] = \"Checked\"\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        var info = getDataSet(proccessInfo,\r\n            ['Item Code', 'Product Line', 'Description', 'Quantity', 'BIN', 'System Quantity', 'Difference', 'Counted By', 'Date', 'Status', 'Comments'],\r\n            headerKeys)\r\n        //this.setState({dataset:info})\r\n        return info\r\n    }\r\n\r\n    async addComentary(item) {\r\n        this.disableTransaction()\r\n        var comm = \"\"\r\n        if (item.comentary) {\r\n            comm = item.comentary\r\n        }\r\n\r\n\r\n        Swal.fire({\r\n            title: 'Product: ' + item.ItemCode + ' \\nBIN: ' + item.BIN,\r\n            html: `<div class='textAreaGeneral textAreaComment'>\r\n                    <textarea id='comentOfCycleInventoryDifference' rows=\"10\" cols=\"50\">${comm}</textarea>\r\n                   </div>\r\n            `,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Save Commentary',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const coment = Swal.getPopup().querySelector('#comentOfCycleInventoryDifference').value\r\n                const temporal = this.state.cycleInventoryStorage\r\n                const index = temporal.Detail.indexOf(item)\r\n                if (index !== -1) {\r\n                    temporal.Detail[index].comentary = coment\r\n                    const response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n                    if (response.status.code === 1) {\r\n                        automaticCloseAlert('correct', 'The comment was save!')\r\n                        await this.setState({ cycleInventoryStorage: temporal })\r\n                    } else {\r\n                        automaticCloseAlert('incorrect', 'The comment was not save')\r\n                    }\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    onChangeQuantity=(item,e)=>{\r\n        const temp=this.state.cycleInventoryStorage\r\n        const index=temp.Detail.indexOf(item)\r\n        if(index!==-1){\r\n            temp.Detail[index].realQuantity = Number(e.target.value)\r\n        }\r\n    }\r\n\r\n    addDifferenceSymbol(diff){\r\n        if(diff<0){\r\n            return \"\"\r\n        }else{\r\n            return \"+\"\r\n        }\r\n    }\r\n    RemainingDays(date){\r\n        var actual=getDateYearMonthDayDash()\r\n        var start=FormatQueryReturnDateWithDash(date)\r\n        var date3=new Date(start)\r\n        var date4=new Date(actual)\r\n        var date5=new Date(start)\r\n        var date6=new Date(actual)\r\n        var difference= Math.abs(date4-date3);\r\n        \r\n        var preliminarDays=difference/(1000 * 3600 * 24)\r\n        var inhDays=0\r\n        while(date4<=date3){\r\n            if(date4.getDay()===0||date4.getDay()===6){\r\n                inhDays++\r\n            }\r\n            date4=new Date(date4.getTime()+86400000)\r\n        }\r\n       \r\n        if(date6>date5){\r\n            return (preliminarDays-inhDays)*-1\r\n        }else{\r\n           \r\n            return preliminarDays-inhDays\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    onChangeFilterHistory=(e)=>{\r\n        if(e.value!=='All'){\r\n        var DetailFilter = this.state.General.generalHistory.filter((item) => {\r\n            if (item.Type.toString().toLowerCase().includes(e.value.toLowerCase())) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        const temporal=this.state.General\r\n        temporal.generalHistoryFilter=DetailFilter\r\n        this.setState({General: temporal})\r\n    }else{\r\n        const temporal=this.state.General\r\n        temporal.generalHistoryFilter=temporal.generalHistory\r\n        this.setState({General: temporal})\r\n    }\r\n\r\n    }\r\n\r\n    generateExcelDataForHistory(){\r\n        const headers=[\"Type\",\"No Order\",\"Customer No\",\"Customer Name\",\"BIN\",\"New BIN\",\t`Quantity Order/Old Quantity`,`Quantity Shipped/New Quantity`,\"Difference\",\"Description\",\"Username\",\"Date\"]\r\n        const keys=[\"Type\",\"NoOrder\",\"CustomerNo\",\"CustomerName\",\"BIN\",\"BIN2\",\"QuantityOrder\",\"QuantityShipped\",\"difference\",\"Description\",\"User\",\"Date\"]\r\n        var copyOfHistory=this.state.General.generalHistoryFilter\r\n        for (const row of copyOfHistory) {\r\n            \r\n            if(row.Type===\"Purchase\"){\r\n                row.difference=\"+\"+row.QuantityOrder\r\n            }else if(row.Type===\"Ajuste\"||row.Type===\"Transferencia\"){\r\n                row.difference=this.addDifferenceSymbol(Number(row.QuantityShipped)-Number(row.QuantityOrder))+(Number(row.QuantityShipped)-Number(row.QuantityOrder))\r\n            }\r\n\r\n            for (const key of keys) {\r\n                if(row[key]===null||row[key]===undefined){\r\n                    row[key]='-'\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n        var info = getDataSet(copyOfHistory,headers,keys)\r\n        return info\r\n    }\r\n\r\n    getKPI(){\r\n        var DetailFilter1 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n            if (item.status===1) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n\r\n        var DetailFilter3 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n            if (item.difference!==0) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        var total=100-(DetailFilter3.length/DetailFilter1.length)\r\n        return total.toFixed(2)\r\n    }\r\n\r\n    displaySnipper(id,state){\r\n        let snipper=document.getElementById(id)\r\n        if(snipper){\r\n            snipper.style.display=state\r\n        }else{\r\n            console.log(\"SNIPPER\")\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='inventoryCycle'>\r\n                <button hidden id='actionatorCycleInventory' onClick={() => this.getLastCycleInventory()}></button>\r\n                <p className='text-center display-1 pb-2' >Cyclical Inventory</p>\r\n                <div>\r\n\r\n                    <div className='row pb-2'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-5'>\r\n                                    <button className='btn btn-primary btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 0} onClick={() => this.startNewCycleInventory()}> Start Cyclical Inventory</button>\r\n                                    <button className='btn btn-danger btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 1} onClick={() => this.endCycleInventory()}> End Cyclical Inventory</button>\r\n                                </div>\r\n\r\n                                <div className='col-5'><button className='btn btn-success btn-lg w-100' onClick={() => this.openOlCycleInventory()} > Open Olds Cyclical Inventory</button></div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div hidden={this.state.cycleInventoryStorage.Header.status !== 0} className='row pb-2 pt-3'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5'><p className='display-6'>Start Date: {formatInputDateQuery(this.state.cycleInventoryStorage.Header.startDate)}</p></div>\r\n                            <div className='col-5'><p className='display-6'>Proposed end date: {formatInputDateQuery(this.state.cycleInventoryStorage.Header.finishDate)}</p></div>\r\n                            <div className='col-1'></div>\r\n                            </div>\r\n                            <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5'><p className='display-6'>Estimated number of days: {this.state.cycleInventoryStorage.Header.days}</p></div>\r\n                            <div className='col-5'><p className='display-6'>Remaining days: {isNaN(this.RemainingDays(this.state.cycleInventoryStorage.Header.finishDate))?'-':this.RemainingDays(this.state.cycleInventoryStorage.Header.finishDate)}</p></div>\r\n                            \r\n                            <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='row pb-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Inventory complete:</p>\r\n                            <ProgressBar ref={this.ProgrressBarRef} />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" autoComplete='off' className=\"form-control\" placeholder='Search by ItemCode, BIN, Description, Category, UPC ...' id='searchCycleInv1' onChange={this.valueSearchBar} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n                            <div className='row fw-bold'>\r\n                                <div className='col-4'></div>\r\n                                <div className='col-4'>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"-1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"-1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            All items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"0\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"0\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            No Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"2\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"2\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Differences\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-4'></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n\r\n                            <ExcelDocument hidden={this.state.cycleInventoryStorage.Header.status === 1} data={this.generateInfo()} sheetname={\"CycleInventoryDetail\"} archname={\"CYCLICAL INVENTORY NO \" + this.state.cycleInventoryStorage.Header.id + \" COMPANY \" + getValueCookie('Company') + \" DATE \" + getDateFromReports()} ></ExcelDocument>\r\n\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Items</p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pt-2 pb-2'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <div className='row'>\r\n                                <div className='col-6'><p className='display-5'>Total items: {this.state.cycleInventoryStorage.Header.QuantityItems}</p></div>\r\n                                <div className='col-6'><p className='display-5'>Total search result: {this.state.cycleInventoryStorage.Header.FilterQuantity}</p></div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                <p className='display-5'>KPI: {isNaN(this.getKPI())?\"0%\":this.getKPI()+\"%\"}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Product Line</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.cycleInventoryStorage.DetailFilter.map((item, i) => (\r\n                                        <tr key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.productLine}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td><input disabled={item.status === 1} type=\"number\" key={item.realQuantity} defaultValue={item.realQuantity} id={\"realQuantityCycleInv_\" + item.id} className=\"form-control text-end\" onChange={(e)=>this.onChangeQuantity(item,e)} /></td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td><button type=\"button\" className=\"btn btn-secondary btn-lg\" onClick={() => this.addComentary(item)} disabled={this.state.General.secureTransaction || item.status === 0}>Add Comments</button></td>\r\n                                            <td className='text-center'>\r\n                                                <button type=\"button\" className=\"btn btn-success btn-lg\" disabled={this.state.General.secureTransaction} onClick={() => this.setCycleInventoryDetailInfo(item, \"realQuantityCycleInv_\" + item.id,)} hidden={item.status === 1}>Check</button>\r\n                                                <button type=\"button\" className=\"btn btn-danger btn-lg\" disabled={this.state.General.secureTransaction} onClick={() => this.updateCycleInventoryDetail(item)} hidden={item.status === 0}>Change</button>\r\n                                            </td>\r\n                                            <td className='text-center'><button disabled={this.state.secureTransaction1} onClick={() => this.getGeneralHistory(item)} type=\"button\" className=\"btn btn-info btn-lg\">Detail</button></td>\r\n                                            <td className='text-center'><button disabled={this.state.General.secureTransaction} onClick={() => this.updateSystemQuantity(item)} type=\"button\" className=\"btn btn-warning btn-lg\" hidden={item.status === 0}>Update Inventory</button></td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <ModalOrders title={'Old Cyclical Inventory'} show={this.state.General.showModal2} close={(modal = \"showModal2\") => this.handleModalClose(modal)}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12 display-5 pb-3'>\r\n                            <p >Select an old Cyclical Inventory to see they detail:</p>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='bg-dark text-light'>\r\n                                        <th className='text-center bg-dark'>Id</th>\r\n                                        <th className='text-center bg-dark'>Start Date</th>\r\n                                        <th className='text-center bg-dark'>Estimated Date to finish</th>\r\n                                        <th className='text-center bg-dark'>Real Finish Date</th>\r\n                                        <th className='text-center bg-dark'>Days</th>\r\n                                        <th className='text-center bg-dark'>Create By</th>\r\n                                        <th className='text-center bg-dark'>Close By</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {\r\n                                        this.state.General.oldCycleInventory.map((item, i) => (\r\n                                            <tr className={this.state.General.selectedCycleInventory === item ? 'bg-warning text-center' : 'text-center'} onClick={() => this.getOldDetailCycleInventory(item)} key={i}>\r\n                                                <td>{item.id}</td>\r\n                                                <td>{item.startDate2}</td>\r\n                                                <td>{item.finishDate2}</td>\r\n                                                <td>{item.realFinishDate2}</td>\r\n                                                <td>{item.realQuantityDays}</td>\r\n                                                <td>{item.createBy}</td>\r\n                                                <td>{item.closeBy}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                        <div className='col-12 display-5 '>\r\n                            <p >Detail:</p>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" className=\"form-control\" placeholder='Search by BIN, Description, Date...' id='searchOldCycleInv' onChange={this.searchOlderCycleInventoryDetail} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3 text-center'>\r\n                            <div className='row h4'>\r\n                                <div className='col correctCount2'>Exact difference</div>\r\n                                <div className='col negativeCount2'>Negative difference</div>\r\n                                <div className='col positiveCount2'>Positive difference</div>\r\n                                <div className='col notcounted2'>Item not counted</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12'>{/*Here we need specific information*/}</div>\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Comments</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.detailOldCycleSelectedFilter.map((item, i) => (\r\n                                        <tr className={item.status === 0 ? 'notcounted' : item.difference < 0 ? 'negativeCount' : item.difference === 0 ? 'correctCount' : 'positiveCount'} key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.realQuantity}</td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td>{item.comentary === 'null' ? '-' : item.comentary}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n                <ModalOrders title={'Detail of Product'} show={this.state.General.showModal3} close={(modal = \"showModal3\") => this.handleModalClose(modal)}>\r\n                    \r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Item Code:</p>\r\n                                </div>\r\n                                <div className='col-12 text-start'>\r\n                                    <p className='fw-bold'>{this.state.General.selectedItem.ItemCode}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12 justifyText'>\r\n                                    <p>{this.state.General.selectedItem.Description}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-center'>\r\n                            <img className=' pt-4 detailIMG' src='/assets/notavailable.png' alt='Company' />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n\r\n                    <div className='row text-start pt-5'>\r\n                        <div className='row'>\r\n                            <div className='col-12 fs-5 d-inline'>\r\n                               <div className='row'>\r\n                               <div className='col-6'>\r\n                                <p className='text-danger fw-bold'>Current Orders who maybe affect the current physical inventory</p>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                <div className=\"spinner-border text-danger\" id='snipperDetail' role=\"status\"></div>\r\n                                </div>\r\n                               </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>Number</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order</th>\r\n                                        <th className='bg-dark'>Quantity Shipped</th>\r\n                                        <th className='bg-dark'>Username <br/> Sales Person</th>\r\n                                        <th className='bg-dark'>Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.outBounds.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.Number}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.QuantityOrdered}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                            <td>{item.username}</td>\r\n                                            <td>{item.date}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n                                    {/*this.state.General.purchaseOrders.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.OrdenNo}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.Quantity}</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                    ))\r\n                                        */\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate1' />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate2' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-5'></div>\r\n                        <div className='col-2'>\r\n                            <button disabled={this.state.secureTransaction1} className='btn btn-danger btn-lg' onClick={() => this.getInfoProduct()}>Search</button>\r\n                        </div>\r\n                        <div className='col-5'></div>\r\n                    </div>\r\n                    <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Search Result:</p>\r\n                                </div>\r\n                                \r\n                    </div>\r\n                    <div className='row fs-4 pb-3'>\r\n                                <div className='col-6 text-start'>\r\n                                    <Select defaultValue={this.state.General.optionsSelect1[0]} options={this.state.General.optionsSelect1} onChange={this.onChangeFilterHistory} />\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                <ExcelDocument hidden={this.state.General.generalHistoryFilter.length===0} data={this.generateExcelDataForHistory()} sheetname={\"History ITEM \"+this.state.General.selectedItem.ItemCode} archname={\"Hystory Product \"+this.state.General.selectedItem.ItemCode+\" COMPANY \" + getValueCookie('Company') + \" DATE \" + getDateFromReports()} ></ExcelDocument>\r\n\r\n                                </div>\r\n                                \r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>No Order</th>\r\n                                        <th hidden={getValueCookie('CompanyId')==='2'} className='bg-dark'>Customer No</th>\r\n                                        <th hidden={getValueCookie('CompanyId')==='2'}  className='bg-dark'>Customer Name</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>New BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order/<br />Old Quantity</th>\r\n                                        <th className='bg-dark'>Quantity Shipped/<br/>New Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Username</th>\r\n                                        <th className='bg-dark'>Date</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.generalHistoryFilter.map((item, i) => (\r\n                                        <tr className={'text-center '+((item.Type==='Inventory Start'||item.Type==='Inventory End')?(item.Type==='Inventory Start'?'correctCount':'positiveCount'):'')} key={i}>\r\n                                            <td className='text-start'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.NoOrder}</td>\r\n                                            <td hidden={getValueCookie('CompanyId')==='2'} className='text-start'>{item.CustomerNo}</td>\r\n                                            <td hidden={getValueCookie('CompanyId')==='2'} className='text-start'>{item.CustomerName}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.BIN2}</td>\r\n                                            <td>{item.QuantityOrder}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                            <td className='text-center'>{(item.Type===\"Transferencia\"||item.Type===\"Ajuste\")?this.addDifferenceSymbol(Number(item.QuantityShipped)-Number(item.QuantityOrder))+(Number(item.QuantityShipped)-Number(item.QuantityOrder)):((item.Type==='Outbound'||item.Type==='Purchase')?(item.Type==='Outbound'?\"-\"+item.QuantityShipped:\"+\"+item.QuantityOrder):'-')}</td>\r\n                                            <td className='text-start'>{item.Description}</td>\r\n                                            <td>{item.User}</td>\r\n                                            <td>{item.Date}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Pie,Doughnut, Bar,Line } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend,CategoryScale,LinearScale,BarElement,Title,PointElement,LineElement,Filler } from 'chart.js';\r\nimport { faker } from '@faker-js/faker';\r\nexport default class CycleInvetoryGraph extends Component {\r\n    state = {\r\n\r\n    }\r\n    constructor(){\r\n        super()\r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            \r\n            Filler,\r\n            );\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    datapie={\r\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n    }\r\n\r\n    optionsbar = {\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart - Stacked',\r\n          },\r\n        },\r\n        responsive: true,\r\n        interaction: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n        scales: {\r\n          x: {\r\n            stacked: true,\r\n          },\r\n          y: {\r\n            stacked: true,\r\n          },\r\n        },\r\n      };\r\n      \r\n    labels=['January', 'February', 'March', 'April', 'May', 'June', 'July']\r\n      \r\n       databar = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(75, 192, 192)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 3',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(53, 162, 235)',\r\n            stack: 'Stack 1',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsarea = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      dataarea = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            fill: true,\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            borderColor: 'rgb(53, 162, 235)',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsLine2 = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      databars = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n    render() {\r\n        return (\r\n            <div className='CycleInventoryReport'>\r\n                <p className='text-center display-1 pb-2' >Cycle Inventory Graphs</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10'>\r\n                        <select className=\"form-select form-select-lg mb-3\" aria-label=\"select option\">\r\n                            <option>Select an old Cycle Inventory to see they graphs</option>\r\n                            <option value=\"1\">Cycle Invetory No. 1 06/20/2022-06/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 2 06/29/2022-07/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 3 08/15/2022-08/30/2022</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Pie Graph</p>\r\n                        <Pie data={this.datapie}></Pie>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Doughnut Graph</p>\r\n                        <Doughnut data={this.datapie}></Doughnut>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Bar Graph</p>\r\n                        <Bar options={this.optionsbar} data={this.databar}></Bar>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Line Graph</p>\r\n                        <Line options={this.optionsarea} data={this.dataarea}></Line>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Another Line Graph</p>\r\n                        <Line options={this.optionsLine2} data={this.databar}></Line>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Bars Graph</p>\r\n                        <Bar options={this.optionsLine2} data={this.databars}></Bar>\r\n                    </div>            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class BarGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n            plugins: {\r\n              legend: {\r\n                position: 'top',\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: '',\r\n              },\r\n            },\r\n          }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Bar options={this.state.options} data={this.state.data}></Bar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../css/table-responsive.css'\r\nimport {getInformationWithData } from '../services/CABE'\r\nimport BarGraph from '../components/BarGraph'\r\nimport { getValueCookie } from '../services/cookieService'\r\nexport default class KPI extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.BarGraph1 = React.createRef()\r\n\r\n    }\r\n\r\n\r\n    state = {\r\n        General: {\r\n            KPIInfo: [],\r\n            KPIInfoFilter: []\r\n        },\r\n        GraphData: {\r\n\r\n        }\r\n    }\r\n\r\n     componentDidMount() {\r\n         \r\n         \r\n    }\r\n\r\n\r\n    async getKPIInfo(){\r\n        const data1={\r\n            company:getValueCookie('Company')\r\n        }\r\n        const temporal=this.state.General\r\n        const data=await getInformationWithData('/reports/getKPI',data1)\r\n        if(data.status.code===1){\r\n        temporal.KPIInfo=data.data\r\n        temporal.KPIInfoFilter=data.data\r\n        await this.setState({General:temporal})\r\n        await this.generateGraphDays(data.data)\r\n        }\r\n    }\r\n\r\n    async generateGraphDays(data) {\r\n        this.BarGraph1.current.setTitle('Inventory Cycle Days')\r\n\r\n        let labels = []\r\n        let completeInfo = []\r\n\r\n        for (const element of data) {\r\n            labels.push('Cycle ' + String(element.id))\r\n            completeInfo.push(String(element.realQuantityDays))\r\n        }\r\n\r\n        var info = {\r\n            label: 'Days',\r\n            data: completeInfo,\r\n            backgroundColor: 'rgb(17,131,29)',\r\n\r\n        }\r\n        await this.BarGraph1.current.setLabels(labels)\r\n        await this.BarGraph1.current.setData([info])\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='KPI'>\r\n                <button hidden id='actionatorKPI' onClick={()=>this.getKPIInfo()}></button>\r\n                <p className='text-center display-1 pb-3' >Inventories of {getValueCookie('Company')}</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10 tableFixHead tb-5'>\r\n                        <table className='table'>\r\n                            <thead>\r\n                                <tr className='text-light text-center'>\r\n                                    <th className='bg-dark'>Type of Inventory</th>\r\n                                    <th className='bg-dark'>Cycle</th>\r\n                                    <th className='bg-dark'>Full cycle count days</th>\r\n                                    <th className='bg-dark'>Closing date</th>\r\n                                    <th className='bg-dark'>Counted items</th>\r\n                                    <th className='bg-dark'>Average binary accuracy</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>Adjustments</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>KPI result</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.General.KPIInfoFilter.map((element, i) => (\r\n                                    <tr className='text-center' key={i}>\r\n                                        <td>Cycle</td>\r\n                                        <td>{element.id}</td>\r\n                                        <td>{element.realQuantityDays}</td>\r\n                                        <td>{element.realFinishDate2}</td>\r\n                                        <td>{element.ItemsContados}</td>\r\n                                        <td>{element.ExBinaria}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            <tfoot className='tfoot'>\r\n\r\n                                <tr className='bg-secondary text-light'>\r\n\r\n                                </tr>\r\n                            </tfoot>\r\n\r\n                        </table>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <BarGraph ref={this.BarGraph1} />\r\n                    </div>\r\n                    <div className='col-5'>\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport '../css/CartaProducto.css'\r\n\r\n\r\nexport default class CartaProducto extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conteiner cartaHover\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 imgC \">\r\n                        <img src={\"./assets/notavailable.png\"} alt=\"Card  cap\" className='imgC'/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row text-start pt-5\">\r\n                            <h5 className=\"card-title\">{this.props.ItemCode}</h5>\r\n                        </div>\r\n                        <div className=\"row text-start\">\r\n                            <p className=\"card-text fs-6\">{this.props.Description}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-6\"><i>UPC:</i> {this.props.UPC}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-5\"><b>OnHand:</b> {this.props.OnHand}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport CartaProducto from './CartaProducto'\r\nimport { getInformationNoData } from '../services/CABE.js'\r\n\r\n\r\nexport default class Catalogue extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.retornarProducto = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        Catalogo: [],\r\n        ProductosMostrados: []\r\n    }\r\n\r\n    async obtenerProductos() {\r\n        const buscador = document.getElementById('catalogo_busqueda');\r\n        const Enpoint = '/Items/get'\r\n        const respuesta = await getInformationNoData(Enpoint);\r\n        \r\n        if (respuesta.status.code === 1) {\r\n            this.setState({ Catalogo: respuesta.data });\r\n            this.setState({ ProductosMostrados: respuesta.data });\r\n        }\r\n        buscador.value='';\r\n        setTimeout( ()=>{buscador.focus();}, 300);\r\n    }\r\n\r\n    buscarProductos = e => {\r\n  \r\n            let busqueda = e.target.value;\r\n            let Productos = this.state.Catalogo.filter((producto) => {\r\n                if (((\r\n                        this.contiene(producto.itemCode,busqueda)\r\n                    ||  this.contiene(producto.abbreviatedDesc,busqueda)\r\n                    ||  this.contiene(producto.upc,busqueda))\r\n                    )\r\n                ) {\r\n                    return producto\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n            this.setState({ ProductosMostrados: Productos });\r\n    }\r\n\r\n    contiene(parametro,busqueda){\r\n        return parametro.toString().toLowerCase().includes(busqueda.toLocaleLowerCase())\r\n    }\r\n\r\n    getProducto(producto){\r\n        //Aqui asignamos el producto al estado del padre\r\n        const Padre = this.props.Padre\r\n        const Products = Padre.state.products;\r\n        producto.BIN=\"\";\r\n        producto.unitCost=0;\r\n        producto.originalUnitCost=0;\r\n        producto.quantityOrdered=0;\r\n        producto.quantityReceived=0;\r\n        producto.totalCost=0;\r\n        Products.push(producto);\r\n        Padre.setState({products:Products});\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button type=\"button\" disabled={this.props.disabled} className=\"btn catalogueOpen btn-lg w-100\" data-bs-toggle=\"modal\" data-bs-target={\"#Catalogo\" + this.props.nombrePadre} onClick={() => this.obtenerProductos()}>Open Catalogue </button>\r\n                <div className=\"modal fade\" id={\"Catalogo\" + this.props.nombrePadre} tabIndex=\"-1\" aria-labelledby=\"catalogoModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-fullscreen\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"catalogoModalLabel\">Catalogue</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body \">\r\n                                <div className='row form-group pt-4'>\r\n                                    <input className='form-control' placeholder='Search by ItemCode,BIN,Description...' id='catalogo_busqueda' onKeyUp={this.buscarProductos} />\r\n                                </div>\r\n                                <div className='row'>\r\n                                    {\r\n                                        this.state.ProductosMostrados.map((producto, i) => (\r\n                                            <div key={i} className='col-6 ' data-bs-dismiss=\"modal\" onClick={()=>this.getProducto(producto)}>\r\n                                                <CartaProducto ItemCode={producto.itemCode} Description={producto.abbreviatedDesc} OnHand={producto.OnHand} UPC={producto.upc} />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class LineAreaGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[\r\n                {\r\n                    fill: true,\r\n                    label: 'Quantity',\r\n                    data: [],\r\n                    borderColor: 'rgb(53, 162, 235)',\r\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                  }\r\n            ]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: '',\r\n          },\r\n        },\r\n        }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets[0].data=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Line options={this.state.options} data={this.state.data}></Line>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/inventory-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport Catalogue from '../components/Catalogue.js'\r\nimport { AiOutlineSearch, AiFillPrinter, AiFillBook, AiFillDollarCircle, AiFillCheckSquare, AiFillCreditCard, AiFillTag, AiOutlineBarcode } from \"react-icons/ai\"\r\nimport LineAreaGraph from '../components/LineAreaGraph'\r\nexport default class Inventory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.LineAreaGraph1 = React.createRef()\r\n    }\r\n\r\n    state={\r\n        producto:{\r\n            itemCode:\"Item Code\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LineAreaGraph1.current.setTitle('Quantity sold per month year 2022')\r\n        this.LineAreaGraph1.current.setLabels(['January', 'February', 'March', 'April', 'May', 'June'])\r\n        this.LineAreaGraph1.current.setData(['123', '100', '12', '156', '145', '110'])\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='InventoryInfo lobbyContainer'>\r\n                <div className='row searchPart'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5 pb-5'>\r\n                        <p className='text-start pt-4 pb-2' >Search specific Product:</p>\r\n                        <div className=\"input-group input-group-lg pb-4\">\r\n                            <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Search by ItemCode' />\r\n                        </div>\r\n                        {\r\n                            /* \r\n                            \r\n                            <div className='text-center'>\r\n                            <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Search <AiOutlineFileSearch /></button>\r\n                        </div>\r\n                            */\r\n                        }\r\n\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        <p className='text-start pt-4 pb-2' >See all Catalogue:</p>\r\n                        <div className='text-center'>\r\n                            <Catalogue nombrePadre={'InventoryBin'} Padre={this}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='ItemInfo' hidden={false}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='text-start display-4 pb-2' >Item information: </p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n                    <div className='row pt-3'>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber'>\r\n                                <p className='text-center display-3' >{this.state.producto.itemCode}</p>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center'>\r\n                                <img className='pb-5 pt-5' src='/assets/notavailable.png' alt='Company' />\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Print labels <AiFillPrinter /></button>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 historyProd\">View history <AiFillBook /></button>\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='row pt-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >General information: <AiOutlineBarcode /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>UPC:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4 textAreaGeneral\">\r\n                                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>U/M:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Categories to which it belongs:</p>\r\n                                </div>\r\n                                <div className='col-12 tableFixHead'>\r\n                                    <table className='table'>\r\n                                        <thead>\r\n                                            <tr className='text-light text-center'>\r\n                                                <th className='bg-dark'>Categories</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className='text-center'>BOOTS</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>FIBER ADAPTER</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>KEYSTONE JACKS</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tfoot className='tfoot'>\r\n                                        </tfoot>\r\n\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Quantity Available: <AiFillCheckSquare /> </p>\r\n                                    <div className='row'>\r\n                                        <div className='col-12 titleTotal text-center'>\r\n                                            <p>General Total: 1563</p>\r\n                                        </div>\r\n                                        <div className='col-12 titleDistribution'>\r\n                                            <p>Distribution:</p>\r\n                                        </div>\r\n                                        <div className='col-12 tableFixHead'>\r\n                                            <table className='table'>\r\n                                                <thead>\r\n                                                    <tr className='text-light text-center'>\r\n                                                        <th className='bg-dark'>BIN</th>\r\n                                                        <th className='bg-dark'>Quantity</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A001</td>\r\n                                                        <td className='text-end'>1500</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>B002</td>\r\n                                                        <td className='text-end'>60</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A003</td>\r\n                                                        <td className='text-end'>3</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tfoot className='tfoot'>\r\n\r\n                                                    <tr className='bg-secondary text-light'>\r\n                                                        <td className='text-center'>Total</td>\r\n                                                        <td className='text-end'>1563</td>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >Physical details: <AiFillTag /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Weight (lbs) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Length (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Height (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Width (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Financial information: <AiFillCreditCard /></p>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Purchase price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Sale price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <LineAreaGraph ref={this.LineAreaGraph1} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/general-style.css\"\r\n\r\n\r\nexport default class Lobby extends Component {\r\n\r\n    componentDidMount() {\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid generalContainer lobbyContainer display-1 text-center pt-5\">\r\n                <p>Welcome</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Catalogue from '../components/Catalogue'\r\n\r\nexport default class PikingSystem extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className='fs-1'>Picking System</p>\r\n                <div className='form-group '>\r\n                    <input className='form-control w-75 d-inline fs-3' disabled />\r\n                    <button className='btn btn-success d-inline fs-3 w-25'>Sales order mode</button>\r\n                </div>\r\n                <div>\r\n                    <label className='w-50'>\r\n                        Order name:\r\n                        <input className='form-control' disabled />\r\n                    </label>\r\n                    <label className='w-50'>\r\n                        Order by:\r\n                        <input className='form-control' disabled />\r\n                    </label>\r\n\r\n                </div>\r\n                <div>\r\n                    <p className='bg-primary text-white p-2 fs-3 text-center'>Picking list</p>\r\n                    <div className='pb-5 bg-light'>\r\n                        <label className='w-100 '>\r\n                            Search by UPC:\r\n                            <input className='form-control ' placeholder='Scanner...' />\r\n                        </label>\r\n                        <div className='w-100'>\r\n                            <Catalogue nombrePadre={'PickinSystem'} Padre={this} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <table className='table'>\r\n                        <thead className='thead bg-secondary text-white'>\r\n                            <tr>\r\n                                <th>Item Code</th>\r\n                                <th>Description</th>\r\n                                <th>Quantity Ordered</th>\r\n                                <th>Weight</th>\r\n                                <th>Total Weight</th>\r\n                                <th>BIN</th>\r\n                                <th>Comments</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='tbody'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot className='tfoot bg-dark text-white'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>Totals</td>\r\n                                <td>0</td>\r\n                                <td>0.00</td>\r\n                                <td>0.00</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                    <p className='bg-primary text-white p-2 fs-3 text-center'>Picked up list</p>\r\n                    <table className='table'>\r\n                        <thead className='thead bg-secondary text-white'>\r\n                            <tr>\r\n                                <th>Item Code</th>\r\n                                <th>Description</th>\r\n                                <th>Quantity Ordered</th>\r\n                                <th>Quantity Shipped</th>\r\n                                <th>Weight</th>\r\n                                <th>Total Weight</th>\r\n                                <th>BIN</th>\r\n                                <th>Comments</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='tbody'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot className='tfoot bg-dark text-white'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>Totals</td>\r\n                                <td>0</td>\r\n                                <td>0</td>\r\n                                <td>0.00</td>\r\n                                <td>0.00</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import  {StyleSheet } from '@react-pdf/renderer'\r\n\r\nconst pdfConfig=StyleSheet.create({\r\n\r\n    HeaderStyle:{\r\n        backgroundColor:\"rgb(20, 42, 77)\",\r\n        color:\"rgb(255, 255, 255)\",\r\n    },\r\n    HeaderMargin:{\r\n        top:\"45px\",\r\n        height:\"150px\"\r\n    },\r\n\r\n    BusinessLogo:{\r\n        width:\"150px\",\r\n        left:\"35px\",\r\n        top:\"10px\"\r\n    },\r\n    ContactInfo:{\r\n        textAlign:\"justify\",\r\n        fontSize:\"14px\",\r\n        top:\"-30px\",\r\n        left:\"220px\"\r\n    },\r\n//backgroundColor:\"rgb(69, 71, 74)\",\r\n    marginInfo:{\r\n        width:\"80%\",\r\n        marginLeft:\"10%\",\r\n        padding:\"20px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginBottom:\"8px\",\r\n        color:\"rgb(255, 255, 255)\"\r\n\r\n    },\r\n    OrderTitleStyle:{\r\n        color:\"rgb(0, 0, 0)\",\r\n        textAlign:\"center\",\r\n        fontSize:\"20px\",\r\n        marginTop:\"4px\"\r\n    },\r\n    OrderInformation:{\r\n        width:\"100%\",\r\n        backgroundColor:\"rgb(255, 255, 255)\",\r\n    },\r\n    TitleStyle:{\r\n        textAlign:\"left\",\r\n        fontSize:\"14px\",\r\n        width:\"50%\",\r\n        color:\"rgb(0, 0, 0)\",\r\n    },\r\n\r\n    TextSeparator:{\r\n        marginBottom:\"4px\"\r\n    },\r\n    InfoEncabezadoStyle:{\r\n        width:\"30%\",\r\n        fontSize:\"12px\",\r\n    },\r\n    TextSeparator2:{\r\n        marginTop:\"1px\",\r\n        marginBottom:\"3.5px\"\r\n    },\r\n\r\n    Table:{\r\n        width:\"80%\",\r\n        marginLeft:\"10%\",\r\n        \r\n    },\r\n\r\n    CabeceraTabla:{\r\n        width:\"100%\",\r\n        backgroundColor:\"#000000\",\r\n        color:\"#F0FFFF\",\r\n        textAlign:\"center\",        \r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n\r\n    ColumnaNormal:{\r\n        width:\"15%\",\r\n        textAlign:\"center\",\r\n        fontSize:\"10px\",\r\n    },\r\n\r\n    ColumnaGrande:{\r\n        width:\"54%\",\r\n        textAlign:\"center\",\r\n        fontSize:\"10px\",\r\n    },\r\n    CuerpoTabla:{\r\n        width:\"100%\",\r\n        textAlign:\"center\",\r\n        padding:\"8px\",\r\n        fontSize:\"9px\",\r\n        \r\n        \r\n    },\r\n    ColumnaGrandeCuerpo:{\r\n        width:\"54%\",\r\n        fontSize:\"9px\",\r\n        textAlign:\"justify\",\r\n        padding:\"8px\",\r\n    },\r\n    ColumnaNormalCuerpo:{\r\n        width:\"15%\",\r\n        textAlign:\"center\",\r\n        display:\"block\",\r\n        marginTop:\"1.2%\"\r\n    },\r\n\r\n    ColumnaNormalCuerpo2:{\r\n        width:\"15%\",\r\n        textAlign:\"right\",\r\n        display:\"block\",\r\n        marginTop:\"1.2%\"\r\n    },\r\n\r\n    ColumnaNormalCuerpo3:{\r\n        width:\"15%\",\r\n        textAlign:\"left\",\r\n        display:\"block\",\r\n        marginTop:\"1.2%\"\r\n    },\r\n\r\n   \r\n\r\n    Fila:{\r\n        width:\"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    }\r\n\r\n    \r\n   \r\n});\r\n\r\nexport default pdfConfig;","import React, { Component } from 'react'\r\nimport \"../css/general-style.css\"\r\nimport { AiFillPrinter } from \"react-icons/ai\"\r\nimport ModalOrders from './ModalComponent'\r\nimport pdfConfig from '../pdfConfig/pdfConfig'\r\nimport { Document, Image, PDFViewer, View, Page, Text } from '@react-pdf/renderer'\r\n\r\n\r\nexport class OrderPDF extends Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n    }\r\n\r\n    state = {\r\n        showModal: false\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState({ showModal: true })\r\n    }\r\n\r\n    handleModalClose = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    EncabezadoInfo(Llaves, State) {\r\n        let resultado = []\r\n        Llaves.forEach(llave => {\r\n            resultado.push(State[llave])\r\n        });\r\n\r\n        return resultado\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                    <button disabled={this.props.disabled} type=\"button\" onClick={() => this.handleModalOpen()} className={\"btn \" + this.props.colorButton + \" btn-lg\"}>Print Order <AiFillPrinter /></button>\r\n                </div>\r\n                <ModalOrders title={this.props.title} show={this.state.showModal} close={() => this.handleModalClose()}>\r\n                    <PDFViewer className=\"w-100\" style={{ minHeight: \"90vh\" }}>\r\n                        <Document>\r\n                            <Page wrap>\r\n\r\n                                {/*THIS IS THE HEADER OF THE DOCUMENT*/}\r\n                                <View style={pdfConfig.HeaderStyle} fixed>\r\n                                    <View style={pdfConfig.HeaderMargin}>\r\n                                        <Image style={pdfConfig.BusinessLogo} src={this.props.companyLogo} />\r\n                                        <View style={pdfConfig.ContactInfo}>\r\n                                            {this.props.contactInfo.map((element, e) => (\r\n                                                <Text key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                                {/*ORDER INFO*/}\r\n                                <View fixed style={pdfConfig.OrderInformation}>\r\n                                    <View style={pdfConfig.OrderTitleStyle}>\r\n                                        <Text>{this.props.OrderTitle}</Text>\r\n                                    </View>\r\n                                    <View style={pdfConfig.marginInfo}>\r\n                                        <View style={pdfConfig.TitleStyle}>\r\n                                            {this.props.OrderInfo1.map((element, e) => (\r\n                                                <Text style={pdfConfig.TextSeparator} key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n\r\n                                        <View style={pdfConfig.TitleStyle}>\r\n                                            {this.props.OrderInfo2.map((element, e) => (\r\n                                                <Text style={pdfConfig.TextSeparator} key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n                                \r\n                                <View style={pdfConfig.Table}>\r\n                                                <View fixed style={pdfConfig.CabeceraTabla}>\r\n                                                    {this.props.headerTable.map((tit, e) => (\r\n                                                        e !== 1 ? <Text style={pdfConfig.ColumnaNormal} key={e}>{tit}</Text> : <Text style={pdfConfig.ColumnaGrande} key={e}>{tit}</Text>\r\n                                                    ))}\r\n                                                </View>\r\n\r\n                                                {\r\n                                                    this.props.bodyTable.map((elemento, e) => (\r\n                                                        e % 7 === 0 && e !== 0 ?\r\n                                                            <View break key={e} style={pdfConfig.CuerpoTabla}>\r\n                                                                <View key={e} style={pdfConfig.Fila}>{\r\n                                                                    this.EncabezadoInfo(this.props.headerBodyTable, elemento).map((fila, e2) => (\r\n                                                                        e2 !== 1 ? (e2===0?<View style={pdfConfig.ColumnaNormalCuerpo3} key={e2}><Text  key={e2}>{fila}</Text></View>:<View style={pdfConfig.ColumnaNormalCuerpo2} key={e2}><Text  key={e2}>{fila}</Text></View>) : <View style={pdfConfig.ColumnaGrandeCuerpo} key={e2}><Text key={e2}>{fila}</Text></View>\r\n                                                                    ))\r\n                                                                }</View>\r\n                                                            </View>\r\n                                                            :\r\n                                                            <View key={e} style={pdfConfig.CuerpoTabla}>\r\n                                                                 <View key={e} style={pdfConfig.Fila}>{\r\n                                                                    this.EncabezadoInfo(this.props.headerBodyTable, elemento).map((fila, e2) => (\r\n                                                                        e2 !== 1 ? (e2===0?<View style={pdfConfig.ColumnaNormalCuerpo3} key={e2}><Text  key={e2}>{fila}</Text></View>:<View style={pdfConfig.ColumnaNormalCuerpo2} key={e2}><Text  key={e2}>{fila}</Text></View>) : <View style={pdfConfig.ColumnaGrandeCuerpo} key={e2}><Text key={e2}>{fila}</Text></View>\r\n                                                                    ))\r\n                                                                }</View>\r\n                                                            </View>\r\n                                                    ))\r\n                                                \r\n                                                }\r\n                                                \r\n                                                <View style={pdfConfig.CabeceraTabla}>\r\n                                                    \r\n                                                    {\r\n                                                    /*\r\n                                                    ['', 'Total', '', this.state.Impresion.Totales].map((tit, e) => (\r\n                                                        e !== 1 ? <Text style={pdfConfig.ColumnaNormal} key={e}>{tit}</Text> : <Text style={pdfConfig.ColumnaGrande} key={e}>{tit}</Text>\r\n                                                    ))\r\n                                                    */}\r\n                                                </View>\r\n                                            </View>\r\n\r\n\r\n                            </Page>\r\n                        </Document>\r\n                    </PDFViewer>\r\n                </ModalOrders>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport { BsCheckSquare, BsCartPlus } from \"react-icons/bs\";\r\nimport { AiTwotoneSave, AiOutlineCloseCircle, AiFillDelete } from \"react-icons/ai\"\r\nimport Catalogue from '../components/Catalogue';\r\nimport { OrderPDF } from '../components/OrderPDF';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport { getIndexElement } from '../functions/searchInObject';\r\nimport { confirmCloseAlert } from '../functions/alerts';\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { formatInputDate, formatInputDateQuery, formatInputDateQuerytoInput } from '../functions/dateFormat';\r\nimport Select from 'react-select';\r\nexport default class PurchaseOrder extends Component {\r\n\r\n    state = {\r\n\r\n        purchaseOrderHeader: {\r\n            NoOrder: '',\r\n            Vendor: {},\r\n            Carrier: '',\r\n            orderDate: '',\r\n            completionDate: '',\r\n            creationDate: '',\r\n            vendorNo: '',\r\n            vendorName: '',\r\n            comment: '',\r\n            createBy: '',\r\n            State: ''\r\n        },\r\n        companyPrintHeader: [],\r\n        products: [],\r\n        totals: {\r\n            finalquantityOrderedTotal: 0,\r\n            finalquantityOrderedReceived: 0,\r\n            finalTotalCost: 0\r\n        },\r\n        disableHeader: true,\r\n        secureTransaction: false,\r\n        modalPurchase: false,\r\n        oldPurchaseOrderHeader: [],\r\n        vendorSelectInformation: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ companyPrintHeader: this.getPrintHeaderCompany() })\r\n    }\r\n\r\n    print() {\r\n        console.log(this.state.products)\r\n\r\n    }\r\n\r\n    disableTransactions() {\r\n        this.setState({ secureTransaction: true })\r\n    }\r\n\r\n    enableTransactions() {\r\n        this.setState({ secureTransaction: false })\r\n    }\r\n\r\n\r\n    onTarget = async (e, item) => {\r\n        const temporal = this.state.products\r\n        const ident = e.target.id.split('_')\r\n        const index = temporal.indexOf(item)\r\n        if (index !== -1) {\r\n            if (ident[0] === \"BINPurchase\") {\r\n                temporal[index].BIN = e.target.value\r\n                this.setState({ products: temporal })\r\n            } else if (ident[0] === \"quantityPurchase\") {\r\n                temporal[index].quantity = Number(e.target.value)\r\n                temporal[index].totalCost = Number(e.target.value) * temporal[index].unitCost\r\n                this.setState({ products: temporal })\r\n                this.calculateTotals()\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    onTargerHeader = async (e) => {\r\n        const varChange = e.target.id\r\n        const temporal = this.state.purchaseOrderHeader\r\n        if (varChange === \"purchaseOrderNo\") {\r\n            await this.getPurchaseOrderHeader()\r\n            const index = getIndexElement(this.state.oldPurchaseOrderHeader, \"OrderNo\", e.target.value)\r\n            if (index === -1) {\r\n                temporal.NoOrder = e.target.value\r\n                this.setState({ purchaseOrderHeader: temporal })\r\n            } else {\r\n                confirmCloseAlert('incorrect', \"The order number is already registered, select a different number or use the autogenerated one\")\r\n                await this.createNewPurchaseOrder()\r\n            }\r\n        } else if (varChange === \"purchaseCarrier\") {\r\n            temporal.Carrier = e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        } else if (varChange === \"purchaseVendor\") {\r\n            temporal.Vendor = e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        } else if (varChange === \"purchaseDate\") {\r\n            temporal.orderDate = e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        }else if( varChange===\"purchaseComment\"){\r\n            temporal.comment=e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        }else if( varChange===\"purchaseCompletionDate\"){\r\n            temporal.completionDate=e.target.value\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async createNewPurchaseOrder() {\r\n        this.disableTransactions()\r\n        var data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const noOrder = await getInformationWithData('/purchase/create/newOrderNumber', data)\r\n\r\n        if (noOrder.status.code === 1) {\r\n            var orderNumber = \"PO\"\r\n            for (let a = noOrder.data[0].NoOrder.toString().length; a < 4; a++) {\r\n                orderNumber += \"0\"\r\n            }\r\n\r\n            orderNumber += noOrder.data[0].NoOrder.toString()\r\n\r\n            const temporal = this.state.purchaseOrderHeader\r\n            temporal.NoOrder = orderNumber\r\n            this.setState({ purchaseOrderHeader: temporal, disableHeader: false })\r\n            document.getElementById('purchaseOrderNo').value = this.state.purchaseOrderHeader.NoOrder\r\n        }\r\n\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    async getPurchaseOrderHeader() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const result = await getInformationWithData('/purchase/get/purchaseOrderHeader', data)\r\n        if (result.status.code === 1) {\r\n            this.setState({ oldPurchaseOrderHeader: result.data })\r\n        }\r\n    }\r\n\r\n    async clearDashBoardPurchaseOrder() {\r\n\r\n        var header = {\r\n            NoOrder: '',\r\n            Vendor: {},\r\n            Carrier: '',\r\n            orderDate: '',\r\n            completionDate: '',\r\n            creationDate: '',\r\n            vendorNo: '',\r\n            vendorName: '',\r\n            comment: '',\r\n            createBy: '',\r\n            State: ''\r\n        }\r\n        var tot = {\r\n            finalquantityOrderedTotal: 0,\r\n            finalquantityOrderedReceived: 0,\r\n            finalTotalCost: 0\r\n        }\r\n        this.setState({ purchaseOrderHeader: header, products: [], totals: tot, disableHeader: true })\r\n        this.defineHeader()\r\n    }\r\n\r\n    cancelPurchaseOrder() {\r\n        this.disableTransactions()\r\n        Swal.fire({\r\n            title: 'Do you want to discard the actual Purchase Order?',\r\n            backdrop: true,\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    await this.clearDashBoardPurchaseOrder()\r\n                    Swal.fire('The Purchase Order was canceled!', '', 'info')\r\n                }\r\n            }\r\n\r\n        })\r\n        this.enableTransactions()\r\n    }\r\n    stateInWords(state) {\r\n\r\n        if (state === '') {\r\n            return 'Creating order'\r\n        } else if (state === '1') {\r\n            return 'Order created'\r\n        } else if (state === '2') {\r\n            return 'Order received'\r\n        } else if (state === '3') {\r\n            return 'Order completed and loaded'\r\n        }\r\n\r\n    }\r\n    colorStateText(state) {\r\n\r\n        if (state === '') {\r\n            return 'text-secondary'\r\n        } else if (state === '1') {\r\n            return 'text-primary'\r\n        } else if (state === '2') {\r\n            return 'text-warning'\r\n        } else if (state === '3') {\r\n            return 'text-success'\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    async createPurchaseOrder() {\r\n        this.disableTransactions()\r\n        const temporal = this.state.purchaseOrderHeader\r\n        temporal.State = \"1\"\r\n        this.setState({ purchaseOrderHeader: temporal })\r\n        const data = {\r\n            header: this.state.purchaseOrderHeader,\r\n            products: this.state.products,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            username: getValueCookie('userName'),\r\n            cost: this.state.totals.finalTotalCost,\r\n            totalquant: this.state.totals.finalquantityOrderedReceived,\r\n            coment: ''\r\n        }\r\n        const result = await create_Delete_Update_Information('/purchase/create/purchaseOrder', data)\r\n        if (result.status.code === 1) {\r\n            Swal.fire({\r\n                title: 'Do you want to print the actual Purchase Order?',\r\n                backdrop: true,\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Yes',\r\n                denyButtonText: `No`,\r\n                allowOutsideClick: () => !Swal.isLoading()\r\n            }).then(async (result) => {\r\n                if (result !== null && result !== undefined) {\r\n                    if (result.isConfirmed) {\r\n\r\n                    } else {\r\n                        this.clearDashBoardPurchaseOrder()\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    calculateTotals() {\r\n        var totalquantOrdered = 0\r\n        var totalquantReceived = 0\r\n        var totalcost = 0\r\n        const temporal = this.state.products\r\n\r\n        for (const item of temporal) {\r\n            totalquantOrdered += Number(item.quantityOrdered)\r\n            totalquantReceived += Number(item.quantityReceived)\r\n            totalcost += Number(item.totalCost)\r\n        }\r\n        const temporal2 = this.state.totals\r\n        temporal2.finalquantityOrderedTotal = totalquantOrdered\r\n        temporal2.finalquantityOrderedReceived = totalquantReceived\r\n        temporal2.finalTotalCost = totalcost.toFixed(2)\r\n\r\n\r\n        this.setState({ totals: temporal2 })\r\n    }\r\n\r\n    handleModalOpen = async () => {\r\n        this.getPurchaseOrderHeader()\r\n        await this.setState({ modalPurchase: true })\r\n    }\r\n\r\n    handleModalClose = () => {\r\n\r\n        this.setState({ modalPurchase: false })\r\n    }\r\n\r\n    removeProduct(item) {\r\n        var temporal = this.state.products\r\n        const index = temporal.indexOf(item)\r\n\r\n        if (index !== -1) {\r\n            temporal.splice(index, 1)\r\n            console.log(temporal)\r\n            for (let a = 0; a < temporal.length; a++) {\r\n                document.getElementById(\"BINPurchase_\" + a).value = temporal[a].BIN\r\n                document.getElementById(\"quantityPurchase_\" + a).value = temporal[a].quantity\r\n            }\r\n\r\n\r\n            this.setState({ products: temporal })\r\n            this.calculateTotals()\r\n        }\r\n\r\n    }\r\n\r\n    async SelectOldPurchaseOrder(order) {\r\n        this.handleModalClose()\r\n        console.log(order)\r\n        const data = {\r\n            NoOrder: order.OrderNo,\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n\r\n        const temporal = this.state.purchaseOrderHeader\r\n        temporal.Carrier = order.Carrier\r\n        temporal.NoOrder = order.OrderNo\r\n        temporal.completionDate = formatInputDateQuerytoInput(order.completionDate)\r\n        temporal.orderDate = formatInputDateQuerytoInput(order.OrderDate)\r\n        temporal.creationDate = formatInputDateQuerytoInput(order.CreationDate)\r\n        temporal.comment = order.Comment\r\n        temporal.State = order.Status\r\n        temporal.createBy = order.createBy\r\n        temporal.vendorNo = ''\r\n        var sizeVendor = ('' + order.VendorNo).length\r\n        if (sizeVendor !== 7) {\r\n            for (let a = sizeVendor; a < 7; a++) {\r\n                temporal.vendorNo += '0'\r\n            }\r\n        }\r\n        temporal.vendorNo += order.VendorNo\r\n        temporal.vendorName = order.VendorName\r\n        console.log(temporal)\r\n        this.defineHeader()\r\n        const detailData = await getInformationWithData('/purchase/get/purchaseOrderDetail', data)\r\n        if (detailData.status.code === 1) {\r\n            this.setState({ purchaseOrderHeader: temporal, disableHeader: false })\r\n            var temporalproducts = []\r\n            for (const item of detailData.data) {\r\n                const prod = {\r\n                    BIN: null,\r\n                    abbreviatedDesc: \"\",\r\n                    completeDesc: item.completeDesc,\r\n                    createBy: \"\",\r\n                    creationDate: \"\",\r\n                    height: \"0\",\r\n                    itemCode: item.ItemCode,\r\n                    itemStatus: 1,\r\n                    itemURLImage: \"\",\r\n                    lastUpdateDate: \"\",\r\n                    length: \"\",\r\n                    quantityOrdered: item.QuantityOrdered,\r\n                    quantityReceived: item.QuantityReceived,\r\n                    totalCost: (item.QuantityReceived * item.UnitCost).toFixed(2),\r\n                    unitPrice: 0,\r\n                    unitCost: item.UnitCost,\r\n                    originalUnitCost: item.OriginalUnitCost,\r\n                    upc: \"\",\r\n                    updateBy: \"\",\r\n                    width: \"\",\r\n                }\r\n                temporalproducts.push(prod)\r\n\r\n            }\r\n            this.setState({ products: temporalproducts })\r\n            this.calculateTotals()\r\n        }\r\n\r\n\r\n\r\n    }\r\n    defineHeader() {\r\n        const temporal = this.state.purchaseOrderHeader\r\n        document.getElementById('purchaseOrderNo').value = temporal.NoOrder\r\n        document.getElementById('purchaseCarrier').value = temporal.Carrier\r\n        document.getElementById('purchaseOrderDate').value = temporal.orderDate\r\n        document.getElementById('purchaseCompletionDate').value = temporal.completionDate\r\n        document.getElementById('purchaseComment').value = temporal.comment\r\n    }\r\n\r\n    getPrintHeaderCompany() {\r\n        var header = []\r\n        header.push(getValueCookie('fullName'))\r\n        header.push(getValueCookie('address'))\r\n        header.push(getValueCookie('warehouse'))\r\n        header.push(getValueCookie('website'))\r\n        return header\r\n\r\n    }\r\n\r\n    async getVendors() {\r\n        const data = {\r\n            companyid: getValueCookie('CompanyId')\r\n        }\r\n        const result = await getInformationWithData('/vendors/get/vendorsInformation', data)\r\n        if (result.status.code === 1) {\r\n            var arr = []\r\n            for (const vendor of result.data) {\r\n                const ven = {\r\n                    value: vendor.customerNo + '-' + vendor.name,\r\n                    label: vendor.customerNo + \" \" + vendor.name\r\n                }\r\n                arr.push(ven)\r\n            }\r\n            this.setState({ vendorSelectInformation: arr })\r\n\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        const change = e.value.split('-')\r\n        if (change.length === 2) {\r\n            const temporal = this.state.purchaseOrderHeader\r\n            temporal.vendorNo = change[0]\r\n            temporal.vendorName = change[1]\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='purchaseOrderContainer'>\r\n                <button hidden id='vendorsFromPurchaseOrder' onClick={() => this.getVendors()}></button>\r\n                <button onClick={() => this.print()}>PRINT</button>\r\n                <p className='text-center display-1 pb-2' >Purchase Order</p>\r\n\r\n                <div>\r\n                    <div className='row pb-5 text-center'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button type=\"button\" className=\"btn greenButton btn-lg\" disabled={this.state.secureTransaction} hidden={!this.state.disableHeader} onClick={() => this.createNewPurchaseOrder()}>New Purchase Order <BsCartPlus /></button>\r\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg\" disabled={this.state.secureTransaction} hidden={this.state.disableHeader} onClick={() => this.cancelPurchaseOrder()}>Cancel Purchase Order <AiFillDelete /></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button type=\"button\" className=\"btn brownButton btn-lg\" disabled={this.state.secureTransaction || !this.state.disableHeader} onClick={() => this.handleModalOpen()}>History <BsCheckSquare /></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-2 text-center'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <div className='row pb-2'>\r\n                                <div className='col-6'>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Order No:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseOrderNo' type=\"text\" onChange={this.onTargerHeader} /></div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Carrier:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseCarrier' type=\"text\" onChange={this.onTargerHeader} /></div>\r\n                                    </div>\r\n                                    <div className='row pb-3'>\r\n                                        <div className='col-12 text-start pText'><p>Comment:</p></div>\r\n                                        <div className='col-12 textAreaGeneral'>\r\n                                            <textarea className=\"form-control\" id='purchaseComment' onChange={this.onTargerHeader} rows=\"4\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-4 text-start pText'><p>Order State:</p></div>\r\n                                        <div className='col-8 text-start pText'><p className={'fw-bold ' + this.colorStateText(this.state.purchaseOrderHeader.State)}>{this.stateInWords(this.state.purchaseOrderHeader.State)}</p></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-12 text-start pText'><p>Vendor:</p></div>\r\n                                        <div className='col-12'>\r\n                                            <Select value={{ label: this.state.purchaseOrderHeader.vendorNo + ' ' + this.state.purchaseOrderHeader.vendorName, value: this.state.purchaseOrderHeader.vendorNo + '-' + this.state.purchaseOrderHeader.vendorName }} options={this.state.vendorSelectInformation} className='fs-4 text-start' placeholder=\"Select Vendor\" onChange={this.handleChange.bind(this)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Date:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseOrderDate' onChange={this.onTargerHeader} type=\"date\" /></div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Completion date:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseCompletionDate' onChange={this.onTargerHeader} type=\"date\" /></div>\r\n                                    </div>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-12'><Catalogue disabled={false} nombrePadre={\"PurchaseOrder\"} Padre={this} /></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-2 pt-3 text-center'>\r\n                        <div className='col-12 pb-3 text-start display-6'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-10'>\r\n                                    Order Detail:\r\n                                </div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 tb-5 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>{(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\") ? \"Quantity Ordered\" : \"Quantity\"}</th>\r\n                                        <th className='bg-dark' hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")}>Quantity Received</th>\r\n                                        <th className='bg-dark'>Standar Cost</th>\r\n                                        <th className='bg-dark'>Real Standar Cost</th>\r\n                                        <th className='bg-dark'>Total Cost</th>\r\n                                        <th className='bg-dark'></th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {this.state.products.map((product, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-start'>{product.itemCode}</td>\r\n                                            <td className='text-start'>{product.abbreviatedDesc}</td>\r\n                                            <td>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"text\" id={'BINPurchase_' + i} defaultValue={product.BIN} className=\"form-control text-center\" onChange={(e) => this.onTarget(e, product)} />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"number\" id={'quantityOrderPurchase_' + i} min={0} defaultValue={product.quantityOrdered} onChange={(e) => this.onTarget(e, product)} className=\"form-control text-end\" />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")}>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"number\" id={'quantityReceivedPurchase_' + i} min={0} defaultValue={product.quantityReceived} onChange={(e) => this.onTarget(e, product)} className=\"form-control text-end\" />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className='text-end'>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <span class=\"input-group-text\">$</span>\r\n                                                    <input type=\"number\" id={'standarCostPurchase_' + i} min={0} defaultValue={product.unitCost} onChange={(e) => this.onTarget(e, product)} className=\"form-control text-end\" />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className='text-end'>$ {product.originalUnitCost}</td>\r\n                                            <td className='text-end'>$ {product.totalCost}</td>\r\n                                            <td><button onClick={() => this.removeProduct(product)} className='btn btn-danger'><AiOutlineCloseCircle /></button></td>\r\n                                        </tr>\r\n\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>TOTAL:</td>\r\n                                        <td className='text-end'>{this.state.totals.finalquantityOrderedTotal}</td>\r\n                                        <td hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")} className='text-end'>{this.state.totals.finalquantityOrderedReceived}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td className='text-end'>{\"$ \"+this.state.totals.finalTotalCost}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row  pb-4 text-center'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button type=\"button\" disabled={this.state.disableHeader || this.state.secureTransaction} className=\"btn yellowButton btn-lg\" onClick={() => this.createPurchaseOrder()}>Save Order <AiTwotoneSave /></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        {this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\" ?\r\n                            <OrderPDF disabled={this.state.disableHeader || this.state.secureTransaction} colorButton=\"orangeButton\" title=\"Purchase Order Print\"\r\n                                companyLogo={getValueCookie('CompanyLogo')}\r\n                                OrderTitle=\"Purchase Order\"\r\n                                contactInfo={this.state.companyPrintHeader}\r\n                                OrderInfo1={[\"Order No: \" + this.state.purchaseOrderHeader.NoOrder, \"No Vendor: \" + this.state.purchaseOrderHeader.vendorNo, \"Vendor: \" + this.state.purchaseOrderHeader.vendorName, \"Carrier: \" + this.state.purchaseOrderHeader.Carrier, \"Date: \" + formatInputDate(this.state.purchaseOrderHeader.orderDate)]}\r\n                                OrderInfo2={[\"Order State: \" + this.stateInWords(this.state.purchaseOrderHeader.State), \"Comment: \" + this.state.purchaseOrderHeader.comment, \"Order by: \" + this.state.purchaseOrderHeader.createBy, \"Printed by: \" + getValueCookie('userName')]}\r\n                                headerTable={[\"\\n Item Code\", \"\\n Description\", \"\\n BIN\", \"\\n Quantity \\n Ordered\", \"\\n Quantity \\n Received\", \"\\n Standar Cost\", \"Real \\n Standar \\n Cost\\n\", \"\\n Total \\n Cost\\n\"]}\r\n                                bodyTable={this.state.products}\r\n                                headerBodyTable={[\"itemCode\", \"abbreviateDesc\", \"BIN\", \"quantityOrdered\", \"quantityReceived\", \"unitCost\", \"originalUnitCost\", \"totalCost\"]}\r\n                            />\r\n                            :\r\n                            <OrderPDF disabled={this.state.disableHeader || this.state.secureTransaction} colorButton=\"orangeButton\" title=\"Purchase Order Print\"\r\n                                companyLogo={getValueCookie('CompanyLogo')}\r\n                                OrderTitle=\"Purchase Order\"\r\n                                contactInfo={this.state.companyPrintHeader}\r\n                                OrderInfo1={[\"Order No: \" + this.state.purchaseOrderHeader.NoOrder, \"No Vendor: \" + this.state.purchaseOrderHeader.vendorNo, \"Vendor: \" + this.state.purchaseOrderHeader.vendorName, \"Carrier: \" + this.state.purchaseOrderHeader.Carrier, \"Date: \" + formatInputDate(this.state.purchaseOrderHeader.orderDate)]}\r\n                                OrderInfo2={[\"Order State: \" + this.stateInWords(this.state.purchaseOrderHeader.State), \"Comment: \" + this.state.purchaseOrderHeader.comment, \"Order by: \" + this.state.purchaseOrderHeader.createBy, \"Printed by: \" + getValueCookie('userName')]}\r\n                                headerTable={[\"\\n Item Code\", \"\\n Description\", \"\\n BIN\", \"\\n Quantity\", \"\\n Standar Cost\", \"Real \\n Standar \\n Cost\\n\", \"\\n Total \\n Cost\\n\"]}\r\n                                bodyTable={this.state.products}\r\n                                headerBodyTable={[\"itemCode\", \"abbreviateDesc\", \"BIN\", \"quantityOrdered\", \"unitCost\", \"originalUnitCost\", \"totalCost\"]}\r\n                            />\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <ModalOrders title={'Purchase Orders'} show={this.state.modalPurchase} close={() => this.handleModalClose()}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Order No</th>\r\n                                        <th className='bg-dark'>Order Date</th>\r\n                                        <th className='bg-dark'>Comment</th>\r\n                                        <th className='bg-dark'>Vendor</th>\r\n                                        <th className='bg-dark'>Carrier</th>\r\n                                        <th className='bg-dark'>Total Quantity</th>\r\n                                        <th className='bg-dark'>Total Cost</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Create by</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {this.state.oldPurchaseOrderHeader.map((item, i) => (\r\n                                        <tr onClick={() => this.SelectOldPurchaseOrder(item)} className='text-center' key={i}>\r\n                                            <td>{item.OrderNo}</td>\r\n                                            <td>{formatInputDateQuery(item.OrderDate)}</td>\r\n                                            <td className='text-start'>{item.Comment}</td>\r\n                                            <td className='text-start'>{item.VendorName}</td>\r\n                                            <td>{item.Carrier}</td>\r\n                                            <td className='text-end'>{item.TotalQuantity}</td>\r\n                                            <td><div className='row'><div className='col-1'></div> <div className='col-1 text-end'>$</div><div className='col-7'>{item.TotalCost} </div><div className='col-1'></div></div></td>\r\n                                            <td className={'' + this.colorStateText(item.Status)}>{this.stateInWords(item.Status)}</td>\r\n                                            <td>{item.createBy}</td>\r\n                                        </tr>\r\n                                    ))}\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { Component } from \"react\"\r\nimport CompanyDashBoard from \"../pages/CompanyDashBoard\"\r\nimport {Menu} from \"../components/Menu\"\r\nimport Footer from \"../components/Footer\"\r\nimport CycleInventory from \"../pages/CycleInvetory\"\r\nimport CycleInvetoryGraph from \"../pages/CycleInventoryGraph\"\r\nimport KPI from \"../pages/KPI\"\r\nimport Inventory from \"../pages/Inventory\"\r\nimport Lobby from \"../pages/Lobby\"\r\nimport PikingSystem from \"../pages/PikingSystem\"\r\nimport PurchaseOrder from \"../pages/PurchaseOrder\"\r\nimport \"../css/general-style.css\"\r\n\r\nexport default class App extends Component {\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"page\" id=\"CompanyDashBoard\">\r\n                    <CompanyDashBoard />\r\n                </div>\r\n\r\n                <div id=\"GeneralPages\" className=\"page\">\r\n                    <Menu/>\r\n                    <div className=\"container-fluid generalContainer contPrincipal\" id=\"actualPage\">\r\n\r\n                        <div id=\"Lobby\" className=\"page\">\r\n                            <Lobby/>\r\n                        </div>\r\n\r\n                        <div id=\"CycleInventory\" className=\"page\">\r\n                            <CycleInventory />\r\n                        </div>\r\n                        <div id=\"CycleInventoryGraph\" className=\"page\">\r\n                            <CycleInvetoryGraph/>\r\n                        </div>\r\n\r\n                        <div id=\"KPIGraph\" className=\"page\">\r\n                            <KPI/>\r\n                        </div>\r\n\r\n                        <div id=\"Inventory\" className='page'>\r\n                            <Inventory/>\r\n                        </div>\r\n                        <div id=\"PurchaseOrder\" className='page'>\r\n                            <PurchaseOrder/>\r\n                        </div>\r\n\r\n                        <div id=\"PikingSystem\" className='page'>\r\n                            <PikingSystem/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/login-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport Footer from '../components/Footer'\r\nimport { AiOutlineUser, AiOutlineKey, AiOutlineLogin } from 'react-icons/ai';\r\nimport { selectWithDataService } from '../services/auth/authservices';\r\nimport { getValueCookie, setNewCookie } from '../services/cookieService';\r\nimport {automaticCloseAlert} from'../functions/alerts'\r\nimport md5 from 'md5'\r\nimport { closeSession } from \"../functions/closeSession\"\r\nimport App from '../components/App';\r\nimport { OpenCompanyDashBoard, OpenLobby, OpenLogin } from '../functions/pagesFunction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n  state = {\r\n    loginStorage: {\r\n      userName: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  onChangeById = e => {\r\n    var idState = e.target.id.split('_')\r\n    const temp = this.state.loginStorage\r\n    if (idState.length === 2) {\r\n      temp[idState[1]] = e.target.value\r\n    }\r\n\r\n    this.setState({ loginStorage: temp })\r\n  }\r\n\r\n  onKeyDown = async e => {\r\n    if (e.key === 'Enter') {\r\n      await this.Login()\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(getValueCookie('userName')){\r\n      if(getValueCookie('Company')){\r\n        OpenLobby()\r\n        //OpenPurchaseOrder()\r\n        //OpenCycleInventory()\r\n        \r\n      }else{\r\n        OpenCompanyDashBoard()\r\n      }\r\n    }else{\r\n      OpenLogin()\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  async Login() {\r\n    const temp = this.state.loginStorage\r\n    const btn = document.getElementById('btn_signin');\r\n    const btn_logo = btn.innerHTML;\r\n    const datos = {\r\n      userName: temp.userName,\r\n      password: md5(temp.password),\r\n    }\r\n    btn.innerHTML = 'Loading...';\r\n    btn.disabled = true;\r\n    const datos2 = await selectWithDataService(datos, \"/login\")\r\n    if (datos2 != null) {\r\n      if (datos2.status.code === 1) {\r\n        if (datos2.token !== 'invalid') {\r\n          await automaticCloseAlert('correct', 'Welcome: ' + datos2.data.name + \" \" + datos2.data.surname)\r\n          setNewCookie('sessionAuthToken', datos2.token, 50)\r\n          setNewCookie('userName', datos2.data.userName, 50)\r\n          setNewCookie('name', datos2.data.name, 50)\r\n          setNewCookie('surname', datos2.data.surname, 50)\r\n          window.location.reload()\r\n          //await OpenCompanyDashBoard()\r\n        } else {\r\n          closeSession()\r\n          automaticCloseAlert('incorrect', 'Your  Username or Password are incorrect. Please try again')\r\n\r\n        }\r\n      }\r\n    }\r\n    btn.innerHTML = btn_logo;\r\n    btn.disabled = false;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id='login' className='page'>\r\n         \r\n          <div className='container-fluid pb-1 contPrincipal'>\r\n            <div className='container'>\r\n              <div className='row pt-5 pb-3 d-flex justify-content-center'>\r\n                <div className='col-9 contLogin'>\r\n                  <div className=\"border border-5 border-primary\"></div>\r\n                  <div className='row d-flex justify-content-center pt-5   '>\r\n                    <p className='display-2 '>Login</p>\r\n\r\n                    <div className='row d-flex justify-content-center pt-5 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineUser /></span>\r\n                          <input type=\"text\" id='Login_userName' onChange={this.onChangeById} onKeyDown={this.onKeyDown} className=\"form-control\" placeholder='Username' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineKey /></span>\r\n                          <input type=\"password\" id='Login_password' onKeyDown={this.onKeyDown} onChange={this.onChangeById} className=\"form-control\" placeholder='Password' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3 text-center'>\r\n                      <div className='col-7'>\r\n                        <button id='btn_signin' type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => this.Login()}>Sign in <AiOutlineLogin /></button>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        \r\n        <div id='App' className='page'>\r\n          <App />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport Login from './pages/Login';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Login/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}