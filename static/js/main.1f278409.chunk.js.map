{"version":3,"sources":["components/Footer.js","services/Connection/backEndLink.js","functions/alerts.js","services/cookieService.js","services/auth/authservices.js","functions/changeVisibility.js","functions/pagesFunction.js","functions/closeSession.js","components/MenuCompanySelect.js","components/Status.js","services/CABE.js","pages/CompanyDashBoard.js","components/Menu.js","components/ProgressBar.js","components/ModalComponent.js","functions/dateFormat.js","functions/generateDataSetExcel.js","components/ExcelDocument.js","pages/CycleInvetory.js","pages/CycleInventoryGraph.js","components/BarGraph.js","pages/KPI.js","components/CartaProducto.js","components/Catalogue.js","components/LineAreaGraph.js","pages/Inventory.js","pages/Lobby.js","components/App.js","pages/Login.js","index.js"],"names":["Footer","Date","getFullYear","toString","react_default","a","createElement","Fragment","className","src","alt","this","ActualYear","Component","server","url","automaticCloseAlert","type","message","Swal","fire","icon","title","showConfirmButton","timer","confirmCloseAlert","cookies","Cookies","setNewCookie","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","identification","value","timeExpiration","tiempo","expires","wrap","_context","prev","next","now","set","path","httpOnly","stop","_x","_x2","_x3","apply","arguments","getValueCookie","get","removeCookie","remove","baseURLAuth","selectWithDataService","authservices_regeneratorRuntime","object","route","URL","responseBack","axios","post","data","then","response","catch","error","abrupt","closeAllPages","_step","_iterator","_createForOfIteratorHelper","document","getElementsByClassName","s","n","done","style","display","err","e","f","openPage","id","page","getElementById","CloseAllPages","OpenCompanyDashBoard","_OpenCompanyDashBoard","boton","pagesFunction_regeneratorRuntime","click","OpenLobby","OpenCycleInventory","_OpenCycleInventory","_callee2","_context2","OpenCycleInventoryGraph","_callee3","_context3","OpenLogin","CloseCompanySession","closeSession","closeSession_regeneratorRuntime","window","location","reload","MenuCompany","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","href","onClick","role","data-bs-toggle","aria-expanded","index_esm","aria-labelledby","data-bs-target","aria-controls","tabIndex","data-bs-dismiss","aria-label","aria-current","status","Fail","code","Description","Undefined","Success","ServerFail","getInformationNoData","CABE_regeneratorRuntime","getInformationWithData","_ref2","create_Delete_Update_Information","_ref3","_x4","_x5","CompanyDashBoard","state","General","CompanysofUser","userName","info","temporal","setState","console","log","company","name","idCompany","directoryLogo","idTypeofUser","_this2","hidden","getCompanysAssigned","MenuCompanySelect_MenuCompany","map","i","SelectCompany","Footer_Footer","Menu","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","companyId","typeUser","enableModles","needModlesCharge","Modules","ProductInfo","CycleInventory","KPI","ReportGraphs","_AssignModules","Menu_regeneratorRuntime","sent","_AssignStatesModules","modules","element","AssignModules","Menu_createForOfIteratorHelper","t0","t1","finish","AssignStatesModules","bi_index_esm","_OpenKPIGraph","OpenKPIGraph","ProgressBar","props","min","max","size","progressBarRef","React","createRef","setValue","undefined","valor","height","ref","aria-valuenow","aria-valuemin","aria-valuemax","width","ModalOrders","Modal","show","fullscreen","onHide","close","Header","closeButton","Title","Body","children","formatInputDate","datevalue","arrayDate","split","OrderArrayByDate","array","b","date1","date2","temp","assign","FormatQueryReturnDate","date","div","String","div2","getDateFromReports","datenow","getMonth","getDate","getDataSet","headers","keys","dataset","columns","generateDataSetExcel_createForOfIteratorHelper","wch","fill","patternType","fgColor","rgb","bgColor","font","color","push","_step2","_iterator2","_step3","_iterator3","col","sz","alignment","horizontal","ExcelFile","ReactExport","ExcelSheet","ExcelDocument","filename","archname","dataSet","sheetname","CycleInvetory","porcetaje","showModal1","showModal2","showModal3","showModal4","habilitar","chekvalue","checkHistory","selectedItem","selectedCycleInventory","secureTransaction","generalHistory","outBounds","purchaseOrders","generalHistoryFilter","oldCycleInventory","detailOldCycleSelected","detailOldCycleSelectedFilter","cycleInventoryStorage","closeBy","createBy","days","finishDate","lastUpadeDate","realFinishDate","startDate","updateBy","Detail","DetailFilter","valueSearchBar","CycleInvetory_regeneratorRuntime","search","target","getBySearchBar","valueRadioButton","stat","getByStat","searchOlderCycleInventoryDetail","filter","item","ItemCode","toLowerCase","includes","BIN","handleModalOpen","modal","handleModalClose","ProgrressBarRef","productLine","DetailFilter2","busqueda","current","datos","getDetailCycleInventory","completePercentage","disableTransaction","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","_preConfirm","_callee8","_context8","allowOutsideClick","isLoading","_callee9","result","_context9","isConfirmed","_this3","getLastCycleInventory","_x6","enableTransaction","showDenyButton","denyButtonText","_ref4","_callee11","_context11","_this4","isDenied","_x7","idComent","idQuant","coment","quant","index","indexOf","comentary","realQuantity","Number","countBy","difference","systemQuantity","count","total","CycleInvetory_createForOfIteratorHelper","addValue","cantidad","getOldCycleInventory","Start","End","generalHistoryData","pickList","transfer","purchase","adjust","consolidateTable","outbounds","transfers","adjusts","InfoArray","row","Categoria","structure","Type","NoOrder","BIN2","QuantityOrder","QuantityShipped","User","OrderNumber","OldQuantity","NewQuantity","username","Date2","OrdenNo","_iterator4","_step4","BINSalida","BINEntrada","Quantity","_iterator5","_step5","_iterator6","_step6","itemCode","val","val2","html","backdrop","_preConfirm2","_callee19","login","password","_context19","getPopup","querySelector","showValidationMessage","_step7","proccessInfo","JSON","parse","stringify","headerKeys","_iterator7","_step8","_iterator8","head","_this5","disabled","startNewCycleInventory","endCycleInventory","openOlCycleInventory","ProgressBar_ProgressBar","autoComplete","placeholder","onChange","checked","htmlFor","components_ExcelDocument","generateInfo","defaultValue","textStatus","setCycleInventoryDetailInfo","updateCycleInventoryDetail","getGeneralHistory","updateSystemQuantity","ModalComponent","getOldDetailCycleInventory","startDate2","finishDate2","realFinishDate2","realQuantityDays","getInfoProduct","OrderNo","QuantityOrdered","CycleInvetoryGraph","datapie","labels","datasets","label","backgroundColor","borderColor","borderWidth","optionsbar","plugins","text","responsive","interaction","mode","intersect","scales","x","stacked","y","databar","faker","datatype","number","stack","optionsarea","legend","position","dataarea","optionsLine2","databars","ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Filler","react_chartjs_2_dist","options","BarGraph","KPIInfo","KPIInfoFilter","GraphData","BarGraph1","data1","generateGraphDays","setTitle","completeInfo","setLabels","setData","getKPIInfo","ItemsContados","ExBinaria","BarGraph_BarGraph","CartaProducto","OnHand","Catalogue","Catalogo","ProdcutosMostrados","nombrePadre","obtenerProductos","aria-hidden","CartaProducto_CartaProducto","LineAreaGraph","Inventory","LineAreaGraph1","Catalogue_Catalogue","rows","LineAreaGraph_LineAreaGraph","Lobby","App","CompanyDashBoard_CompanyDashBoard","Menu_Menu","Lobby_Lobby","CycleInvetory_CycleInvetory","CycleInventoryGraph_CycleInvetoryGraph","KPI_KPI","Inventory_Inventory","Login","loginStorage","onChangeById","idState","onKeyDown","Login_regeneratorRuntime","btn","btn_logo","innerHTML","md5","datos2","token","surname","App_App","ReactDOM","render","StrictMode","Login_Login"],"mappings":"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","file":"static/js/main.1f278409.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/footer-style.css\"\r\n\r\nexport default class Footer extends Component {\r\n\r\n    ActualYear() {\r\n        const time = new Date()\r\n        var year = time.getFullYear()\r\n        return year.toString()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='GenFooter '>\r\n                    <div className='container-fluid justify-content-center text-center bg-dark text-white pt-4 GenFooter'>\r\n\r\n                        <div className='logoFooter pt-2 pb-2'>\r\n                            <img src='/assets/logoM.png' alt='MayalandSolutions' />\r\n\r\n                            <p>Copyright &#169; {this.ActualYear()} Mayaland Solutions.<br /> All Rights Reserved.</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","const server={\r\n  //url:\"http://localhost:4203\"\r\n  url: \"http://134.209.119.149:4203\"\r\n}\r\n\r\nexport default server","import Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nexport const automaticCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const confirmCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: true, \r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: true,\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default  {automaticCloseAlert,confirmCloseAlert}","import Cookies from \"universal-cookie\";\r\n\r\n\r\nconst cookies=new Cookies();\r\n\r\n\r\nexport const setNewCookie=async(identification,value,timeExpiration)=>{\r\n    var tiempo=60*timeExpiration;\r\n    var expires = (new Date(Date.now()+ tiempo*1000));\r\n    cookies.set(identification, value, { path: \"*\",expires:expires,httpOnly:false});\r\n}\r\n\r\nexport const getValueCookie=(identification)=>{\r\n   return cookies.get(identification)\r\n}\r\n\r\nexport const removeCookie=(identification)=>{\r\n    cookies.remove(identification)\r\n}\r\n\r\n\r\n\r\nexport default {setNewCookie,getValueCookie,removeCookie}","import axios from \"axios\";\r\nimport server from \"../Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../../functions/alerts\"\r\nimport { Navigate} from \"react-router-dom\";\r\nimport React from \"react\"\r\nimport { getValueCookie } from \"../cookieService\";\r\nconst baseURLAuth=server.url+\"/auth\"\r\n\r\n\r\nexport const selectWithDataService=async (object,route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack\r\n    await axios.post(URL,{data:object}).then(\r\n\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\nexport const ProtectedRoute=({children})=>{\r\n    const temp=getValueCookie('sessionAuthToken')\r\n    \r\n    if(!temp){\r\n        return <Navigate to=\"/login\" />\r\n    }\r\n        return children\r\n    \r\n}\r\n\r\n\r\n\r\nexport default {selectWithDataService,ProtectedRoute}","\r\nexport function closeAllPages() {\r\n  let coleccion = document.getElementsByClassName('page');\r\n  for (let objetc of coleccion) {\r\n    objetc.style.display = 'none';\r\n  }\r\n}\r\n\r\nexport function openPage(id) {\r\n  let page = document.getElementById(id);\r\n  if (page) {\r\n    page.style.display = '';\r\n  }\r\n}\r\n\r\nexport default { closeAllPages, openPage }","import { closeAllPages,openPage } from \"./changeVisibility\";\r\nimport { removeCookie } from \"../services/cookieService\";\r\n\r\n\r\nexport function CloseAllPages() {\r\n    closeAllPages();\r\n}\r\n\r\nexport async function OpenCompanyDashBoard() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('catalogueOfCompanyActioner')\r\n    await boton.click()\r\n    openPage( \"App\");\r\n    openPage( \"CompanyDashBoard\");\r\n}\r\n\r\nexport function OpenLobby() {\r\n    CloseAllPages();\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"Lobby\")\r\n}\r\n\r\nexport async function OpenCycleInventory() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('actionatorCycleInventory')\r\n    await boton.click()\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"CycleInventory\")\r\n}\r\nexport function OpenCycleInventoryGraph(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"CycleInventoryGraph\")\r\n}\r\n\r\nexport async function OpenKPIGraph(){\r\n    CloseAllPages()\r\n    var boton=document.getElementById('actionatorKPI')\r\n    await boton.click()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"KPIGraph\")\r\n}\r\n\r\nexport function OpenLogin() {\r\n    CloseAllPages();\r\n    openPage( \"login\")\r\n}\r\n\r\nexport  function OpenInventory(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"Inventory\")//arreglar\r\n}\r\n\r\nexport function CloseCompanySession(){\r\n    removeCookie('Company')\r\n    OpenCompanyDashBoard()\r\n\r\n}\r\n\r\nexport default{OpenLogin,CloseAllPages,OpenCycleInventory,OpenLobby,OpenCompanyDashBoard,OpenCycleInventoryGraph,CloseCompanySession}","\r\nimport { removeCookie } from \"../services/cookieService\"\r\nimport { OpenLogin } from \"./pagesFunction\"\r\n\r\nexport const closeSession=async ()=>{\r\n    await removeCookie('userName')\r\n    await  removeCookie('name')\r\n    await removeCookie('surname')\r\n    await removeCookie('sessionAuthToken')\r\n    await removeCookie('Company')\r\n    window.location.reload()\r\n    await OpenLogin()\r\n}\r\n\r\nexport default {closeSession}","import React, { Component } from 'react'\r\nimport \"../css/menuCompany-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport {OpenCompanyDashBoard} from \"../functions/pagesFunction\"\r\n\r\nexport class MenuCompany extends Component {\r\n\r\n\r\n \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='menuCompany'>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                               \r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={()=>OpenCompanyDashBoard()}>\r\n                                    <img src='/assets/logoM.png' alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' />Hi {getValueCookie('name')} {getValueCookie('surname')}<AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                       \r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","export const status = {\r\n\r\n    Fail:{code:-1,Description:\"Operation fail\"},\r\n    Undefined:{code:0,Description:\"Operation Undefined\"},\r\n    Success:{code:1,Description:\"operation successful\"},\r\n    ServerFail:{code:504,Description:'Server is not responding please contact the system administrators'}\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport server from \"../services/Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../functions/alerts\"\r\nimport { status } from \"../components/Status\";\r\nimport { getValueCookie } from \"./cookieService\";\r\nconst baseURLAuth=server.url\r\n\r\n\r\nexport const getInformationNoData=async (route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    await axios.get(URL).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n       \r\n        responseBack={status:status.ServerFail,response:[]};\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n       // confirmCloseAlert('incorrect','Error in the Server Response: '+status.ServerFail.Description)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const getInformationWithData=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const create_Delete_Update_Information=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\n\r\n\r\nexport default {getInformationNoData,create_Delete_Update_Information,getInformationWithData}","import React, { Component } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport { MenuCompany } from \"../components/MenuCompanySelect\";\r\nimport \"../css/companyDash-style.css\"\r\nimport { getInformationWithData } from \"../services/CABE\";\r\n//import { OpenLobby } from '../functions/pagesFunction';\r\nimport { getValueCookie, setNewCookie } from \"../services/cookieService\";\r\nexport default class CompanyDashBoard extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            CompanysofUser: []\r\n        }\r\n    }\r\n\r\n    async getCompanysAssigned() {\r\n        const data = {\r\n            userName: getValueCookie('userName')\r\n        }\r\n        const info = await getInformationWithData('/company/CatalogueofCompanies', data)\r\n        if (info.status.code === 1) {\r\n            const temporal = this.state.General\r\n            temporal.CompanysofUser = info.data\r\n            this.setState({ General: temporal })\r\n            console.log(info)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async SelectCompany(company) {\r\n            setNewCookie('Company', company.name , 50)\r\n            setNewCookie('CompanyId',company.idCompany,50)\r\n            setNewCookie('CompanyLogo',company.directoryLogo,50)\r\n            setNewCookie('TypeUser',company.idTypeofUser,50)\r\n            window.location.reload()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"companydash\" >\r\n                <button hidden id=\"catalogueOfCompanyActioner\" onClick={() => this.getCompanysAssigned()}></button>\r\n                <MenuCompany />\r\n                <div className=\"container-fluid generalContainer\" id=\"actualPage\">\r\n                    <div className=\"title\">\r\n                        <p className=\"text-center display-3\">Hello, please select a Company: </p>\r\n                    </div>\r\n                    <div className=\"container-fluid decoratorBar\"></div>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {\r\n                                    this.state.General.CompanysofUser.map((company, i) => (\r\n                                        <div key={i} className=\"contCompany\" onClick={() => this.SelectCompany(company)}>\r\n                                            <div className=\"titecompany text-center\">\r\n                                                <img src={company.directoryLogo} alt=\"logo\" />\r\n                                                <p>{company.name}<br /> <br /><br /><br /></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport \"../css/menu-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineReconciliation, AiOutlineClockCircle, AiOutlineHome, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle, AiOutlineAreaChart, AiTwotoneSnippets } from \"react-icons/ai\";\r\nimport { BiCartAlt } from \"react-icons/bi\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { CloseCompanySession, OpenCycleInventory, OpenCycleInventoryGraph, OpenInventory, OpenKPIGraph, OpenLobby } from '../functions/pagesFunction';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport { BiExit } from \"react-icons/bi\";\r\nimport { getInformationWithData } from '../services/CABE';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            directoryLogo: getValueCookie('CompanyLogo'),\r\n            companyId: getValueCookie('CompanyId'),\r\n            typeUser: getValueCookie('TypeUser'),\r\n            enableModles:[],\r\n            needModlesCharge:true\r\n        },\r\n        Modules:{\r\n            ProductInfo:true,\r\n            CycleInventory:true,\r\n            KPI:true,\r\n            ReportGraphs:true\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    async AssignModules() {\r\n        const data = {\r\n            typeUser: this.state.General.typeUser,\r\n            companyId: this.state.General.companyId\r\n        }\r\n        const response = await getInformationWithData('/company/Modules', data)\r\n        \r\n        if (response.status.code === 1) {\r\n            const temporal=this.state.General\r\n            temporal.enableModles=response.data\r\n            this.setState({General:temporal})\r\n        }\r\n\r\n    }\r\n\r\n    async AssignStatesModules(){\r\n        if(this.state.General.needModlesCharge){\r\n            const temporal=this.state.General\r\n            temporal.needModlesCharge=false\r\n            const modules=this.state.Modules\r\n            await this.AssignModules()\r\n            \r\n            for (const element of this.state.General.enableModles) {\r\n                \r\n                switch(element.name){\r\n                    case 'Cycle Inventory':\r\n                        modules.CycleInventory=false\r\n                        break;\r\n                    case 'KPI':\r\n                        modules.KPI=false;\r\n                        break\r\n                    case 'Reports Graphs':\r\n                        modules.ReportGraphs=false;\r\n                        break\r\n                    case 'Product Information':\r\n                        modules.ProductInfo=false;\r\n                        break\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({General:temporal,Modules:modules})\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                                <button onClick={()=>this.AssignStatesModules()} className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\" aria-controls=\"offcanvasNavbar\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={() => OpenLobby()}>\r\n                                    <img src={this.state.General.directoryLogo} alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' /> Hi {getValueCookie('name')} {getValueCookie('surname')} <AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => OpenLobby()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"offcanvas offcanvas-start\" tabIndex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Menu Options</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => OpenLobby()}>Home <AiOutlineHome /></a>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Inventory management <AiOutlineReconciliation /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Products Information <BiCartAlt /></a></li>\r\n                                            <li hidden={this.state.Modules.CycleInventory} onClick={() => OpenCycleInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cycle Inventory <AiOutlineClockCircle /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ReportGraphs&&this.state.Modules.KPI)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Reports <AiOutlineAreaChart /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ReportGraphs}  onClick={() => OpenCycleInventoryGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cycle Inventory <AiOutlineClockCircle /></a></li>\r\n                                            <li hidden={this.state.Modules.KPI} onClick={() => OpenKPIGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">KPI (Key Performance Indicators) <AiTwotoneSnippets /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => CloseCompanySession()}>Close Company Session <BiExit /></a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => OpenLobby()}><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => closeSession()}><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default  class ProgressBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.progressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        min:0,\r\n        max:100,\r\n        value:0,\r\n        size:50\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setValue(95);\r\n    }\r\n\r\n    \r\n    configBar(min,max,size = 25){\r\n        this.setState({min:min});\r\n        this.setState({max:max});\r\n        this.setState({value:min});\r\n        this.setState({size:size});\r\n    }\r\n\r\n    setValue(valor){\r\n        if(valor>=this.state.min && valor <= this.state.max){ \r\n            this.setState({value:valor});\r\n        }else{\r\n            console.error('ERROR: La cantidad en la progress bar no esta dentro de los limites establecidos, revise el codigo de configuración');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"progress\" style={{height: this.state.size+\"px\"}} ref={this.progressBarRef}>\r\n                <div\r\n                    className=\"progress-bar progress-bar-striped progress-bar-animated bg-primary \"\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={this.state.value}\r\n                    aria-valuemin={this.state.min}\r\n                    aria-valuemax={this.state.max}\r\n                    style={{ width: this.state.value+\"%\" }}>\r\n                    {this.state.value}%\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Modal} from 'react-bootstrap'\r\nimport '../css/table-responsive.css'\r\nconst ModalOrders = (props) => {\r\n    return (\r\n      <>\r\n      \r\n        <Modal title={props.title} show={props.show} fullscreen={true} onHide={props.close}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className='container'>\r\n              {props.children}\r\n              </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n \r\nexport default ModalOrders;","export function formatInputDate(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('-')\r\n    if(arrayDate.length===3){\r\n    return arrayDate[1]+\"/\"+arrayDate[2]+\"/\"+arrayDate[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function OrderArrayByDate(array){\r\n    for(let a=0;a<array.length;a++){\r\n        for(let b=0;b<(array.length-a-1);b++){\r\n            const date1=array[b].Date.split('/')\r\n            const date2=array[b+1].Date.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n            \r\n            if(date3>date4){\r\n                var temp=Object.assign({},array[b])\r\n                array[b]=Object.assign({},array[b+1])\r\n                array[b+1]=Object.assign({},temp)\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function FormatQueryReturnDate(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        var div2=div[0].split('-')\r\n        if(div2.length===3){\r\n            return div2[1]+\"/\"+div2[2]+\"/\"+div2[0]\r\n        }else{\r\n            return \"\"\r\n        }\r\n\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function getDateFromReports(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"-\"+datenow.getDate()+\"-\"+datenow.getFullYear()\r\n}\r\n\r\n\r\nexport default {formatInputDate,OrderArrayByDate,FormatQueryReturnDate}","export function getDataSet(info, headers,keys) {\r\n    var dataset = [{\r\n        columns: [],\r\n        data: []\r\n    }]\r\n   \r\n    for (const column of headers) {\r\n        const data = {\r\n            title: column, width: { wch: 10 },\r\n            style: {\r\n                fill: {\r\n                    patternType: \"solid\",\r\n                    fgColor: { rgb: \"000000\" },\r\n                    bgColor: { rgb: \"FFFFFF\" }\r\n                },\r\n                font:{\r\n                    color:{rgb:\"FFFFFF\"}\r\n                }\r\n            }\r\n        }\r\n\r\n        dataset[0].columns.push(data)\r\n    }\r\n\r\n    for(const data of info){\r\n        var temp=[]\r\n        for (const key of keys) {\r\n            const col= {\r\n                value: String(data[key]),\r\n                style: {\r\n                    font: {sz: \"10\"},\r\n                    alignment:{horizontal:\"left\"}\r\n                }\r\n            }\r\n            temp.push(col)\r\n        }\r\n    dataset[0].data.push(temp)\r\n\r\n    }\r\n    \r\n    return dataset\r\n}\r\n\r\nexport default {getDataSet}","import ReactExport from 'react-data-export';\r\nimport React from 'react';\r\nimport {AiFillFileExcel } from \"react-icons/ai\"\r\nconst ExcelFile = ReactExport.ExcelFile\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet\r\n\r\nconst ExcelDocument=(props)=>{\r\n    return(\r\n        <>\r\n        \r\n        <ExcelFile  element={<button type=\"button\" className=\"btn btn-success btn-lg w-100 h-100\">Download Report In XLSX <AiFillFileExcel/></button>} filename={props.archname}>\r\n            <ExcelSheet dataSet={props.data} name={props.sheetname}/>\r\n        </ExcelFile>\r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExcelDocument","import React, { Component } from 'react'\r\nimport ProgressBar from '../components/ProgressBar'\r\nimport { AiOutlineSearch, AiFillCalendar } from \"react-icons/ai\"\r\nimport '../css/table-responsive.css'\r\nimport '../css/general-style.css'\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { automaticCloseAlert } from '../functions/alerts'\r\nimport { formatInputDate, FormatQueryReturnDate, getDateFromReports, OrderArrayByDate } from '../functions/dateFormat'\r\nimport { getDataSet } from '../functions/generateDataSetExcel'\r\nimport ExcelDocument from '../components/ExcelDocument'\r\n\r\n\r\n\r\nexport default class CycleInvetory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ProgrressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        dataset: [{\r\n            columns: [],\r\n            data: []\r\n        }],\r\n        porcetaje: 0,\r\n        General: {\r\n            showModal1: false,\r\n            showModal2: false,\r\n            showModal3: false,\r\n            showModal4: false,\r\n            habilitar: false,\r\n            chekvalue: '0',\r\n            checkHistory: '0',\r\n            selectedItem: '',\r\n            selectedCycleInventory: null,\r\n            secureTransaction: false,\r\n            generalHistory: [],\r\n            outBounds: [],\r\n            purchaseOrders: [],\r\n            generalHistoryFilter: [],\r\n            oldCycleInventory: [],\r\n            detailOldCycleSelected: [],\r\n            detailOldCycleSelectedFilter: []\r\n        },\r\n\r\n        cycleInventoryStorage: {\r\n            Header: {\r\n                closeBy: null,\r\n                createBy: '',\r\n                days: 0,\r\n                finishDate: '',\r\n                id: 0,\r\n                lastUpadeDate: '',\r\n                realFinishDate: '',\r\n                startDate: '',\r\n                status: 0,\r\n                updateBy: ''\r\n            },\r\n            Detail: [],\r\n            DetailFilter: [],\r\n        }\r\n\r\n    }\r\n    valueSearchBar = async e => {\r\n        let search = e.target.value\r\n        this.getBySearchBar(search)\r\n    }\r\n\r\n    valueRadioButton = async e => {\r\n        document.getElementById('searchCycleInv1').value = \"\"\r\n        let stat = e.target.value\r\n        const temporal = this.state.General\r\n        temporal.chekvalue = stat\r\n        this.setState({ General: temporal })\r\n        this.getByStat(stat)\r\n    }\r\n\r\n\r\n\r\n    searchOlderCycleInventoryDetail = e => {\r\n        let search = e.target.value\r\n\r\n\r\n        var DetailFilter = this.state.General.detailOldCycleSelected.filter((item) => {\r\n            if (item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.status.toString().toLowerCase().includes(search.toLowerCase())) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n\r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelectedFilter = DetailFilter\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n\r\n    getBySearchBar(search) {\r\n        if (search !== \"\" && this.state.General.chekvalue !== '-1') {\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(this.state.General.chekvalue)) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        } else if (search !== \"\") {\r\n            var DetailFilter2 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase()))) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter2\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n\r\n        } else {\r\n            this.getByStat(this.state.General.chekvalue)\r\n        }\r\n\r\n    }\r\n\r\n    getByStat(stat) {\r\n        if (stat !== \"-1\") {\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.status.toString().toLowerCase().includes(stat.toLowerCase())) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        } else {\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = temporal.Detail\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCategory(stat) {\r\n        var busqueda = \"\"\r\n        switch (stat) {\r\n            case \"0\":\r\n                busqueda = \"purchase\"\r\n                break;\r\n            case \"1\":\r\n                busqueda = \"transferencia\"\r\n                break;\r\n            case \"2\":\r\n                busqueda = \"ajuste\"\r\n                break;\r\n            case \"3\":\r\n                busqueda = \"outbound\"\r\n                break;\r\n            default:\r\n                busqueda = \"\"\r\n                break;\r\n        }\r\n        return busqueda;\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        this.ProgrressBarRef.current.setValue(0);\r\n\r\n    }\r\n\r\n    async getLastCycleInventory() {\r\n        const data = {\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/lastCycle/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header = datos.data[0]\r\n\r\n                if (temporal.Header.status === 0) {\r\n                    await this.getDetailCycleInventory(temporal.Header.id, \"actual\")\r\n                } else {\r\n                    temporal.Detail = []\r\n                    temporal.DetailFilter = []\r\n                    await this.setState({ cycleInventoryStorage: temporal })\r\n                }\r\n            } else {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header.status = 1\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async getOldCycleInventory() {\r\n        const data = {\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/invertory/oldCycleInventorys/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = datos.data\r\n                await this.setState({ General: temporal })\r\n\r\n            } else {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = []\r\n                await this.setState({ General: temporal })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    async getDetailCycleInventory(id, type) {\r\n        const data = {\r\n            id: id\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        if (type === \"actual\") {\r\n\r\n            if (datos.status.code === 1) {\r\n                if (datos.data.length > 0) {\r\n                    const temporal = this.state.cycleInventoryStorage\r\n                    temporal.Detail = datos.data\r\n                    temporal.DetailFilter = datos.data\r\n                    await this.setState({ cycleInventoryStorage: temporal })\r\n                    await this.completePercentage()\r\n                    await this.getByStat('0')\r\n                } else {\r\n                    const temporal = this.state.cycleInventoryStorage\r\n                    temporal.Detail = []\r\n                    await this.setState({ cycleInventoryStorage: temporal })\r\n                }\r\n            }\r\n        } else if (type === \"old\") {\r\n            const temporal = this.state.General\r\n            temporal.detailOldCycleSelected = datos.data\r\n            temporal.detailOldCycleSelectedFilter = datos.data\r\n            await this.setState({ General: temporal })\r\n        }\r\n\r\n    }\r\n    getOldDetailCycleInventory(item) {\r\n        const temporal = this.state.General\r\n        temporal.selectedCycleInventory = item\r\n        this.setState({ General: temporal })\r\n        this.getDetailCycleInventory(item.id, \"old\")\r\n    }\r\n\r\n\r\n    enableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    async disableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = true\r\n        await this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async startNewCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            days: 0,\r\n            company: getValueCookie('Company'),\r\n            userName: getValueCookie('userName')\r\n        }\r\n        await Swal.fire({\r\n            title: 'Number of Days of Cycle Inventory',\r\n            input: 'number',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Confirm',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async (days) => {\r\n                data.days = days\r\n                return await create_Delete_Update_Information('/invertory/newCycle/post', data)\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n\r\n            if (result.isConfirmed) {\r\n                await this.getLastCycleInventory()\r\n                await Swal.fire({\r\n                    title: `The Cycle Inventory was created!`,\r\n                })\r\n\r\n            }\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    async endCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            userName: getValueCookie('userName')\r\n        }\r\n        await Swal.fire({\r\n            title: 'Do you want to end the actual Cycle Inventory?',\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    const res = await create_Delete_Update_Information('/invertory/closeCycle/post', data)\r\n                    if (res.status.code === 1) {\r\n                        await this.getLastCycleInventory()\r\n                        Swal.fire('Cycle inventory are closed!', '', 'success')\r\n                        this.setState({ porcetaje: 0 })\r\n                        this.ProgrressBarRef.current.setValue(0);\r\n\r\n                    } else {\r\n                        Swal.fire('Cycle inventory could not be closed', '', 'error')\r\n                    }\r\n\r\n                } else if (result.isDenied) {\r\n                    Swal.fire('Changes are not saved', '', 'info')\r\n                }\r\n            }\r\n\r\n        })\r\n        this.enableTransaction()\r\n    }\r\n\r\n    async setCycleInventoryDetailInfo(item, idComent, idQuant) {\r\n        this.disableTransaction()\r\n        const coment = document.getElementById(idComent).value\r\n        const quant = document.getElementById(idQuant).value\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        if (index !== -1) {\r\n            temporal.Detail[index].comentary = coment\r\n            temporal.Detail[index].realQuantity = Number(quant)\r\n            temporal.Detail[index].countBy = getValueCookie('userName')\r\n            temporal.Detail[index].difference = temporal.Detail[index].realQuantity - temporal.Detail[index].systemQuantity\r\n            temporal.Detail[index].status = 1\r\n\r\n            const response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n            if (response.status.code === 1) {\r\n\r\n                automaticCloseAlert('correct', 'The item was check!')\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                await this.completePercentage()\r\n            } else {\r\n                automaticCloseAlert('incorrect', 'The item was not checked')\r\n            }\r\n        }\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    async updateCycleInventoryDetail(item) {\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        if (index !== -1) {\r\n            temporal.Detail[index].countBy = null\r\n            temporal.Detail[index].status = 0\r\n            await this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n    completePercentage() {\r\n        this.setState({ porcetaje: 0 })\r\n        var count = 0;\r\n        var total = this.state.cycleInventoryStorage.Detail.length\r\n\r\n        for (const item of this.state.cycleInventoryStorage.Detail) {\r\n            if (item.status === 1)\r\n                count++\r\n        }\r\n\r\n        for (let a = 0; a < ((count * 100) / total); a++) {\r\n            this.addValue()\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    textStatus(value) {\r\n        if (value === 0) {\r\n            return \"Not checked\"\r\n        }\r\n        return \"Checked\"\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    addValue() {\r\n        let cantidad = this.state.porcetaje;\r\n        cantidad++;\r\n        this.setState({ porcetaje: cantidad });\r\n        this.ProgrressBarRef.current.setValue(cantidad);\r\n    }\r\n\r\n    handleModalOpen = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = true\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    handleModalClose = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async openOlCycleInventory() {\r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelected = []\r\n        temporal.detailOldCycleSelectedFilter = []\r\n        temporal.selectedCycleInventory = null\r\n        this.setState({ General: temporal })\r\n        this.getOldCycleInventory()\r\n        await this.handleModalOpen(\"showModal2\")\r\n    }\r\n\r\n    async getInfoProduct() {\r\n        var date1 = formatInputDate(document.getElementById('searchHistoryCycleInvDate1').value)\r\n        var date2 = formatInputDate(document.getElementById('searchHistoryCycleInvDate2').value)\r\n        const data = {\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            Start: date1,\r\n            End: date2\r\n        }\r\n\r\n        //AQUI COLOCAR LAS LLAMADAS A LOS DATOS\r\n        //const route = '/invertory/getGeneralHistory/post';\r\n        const generalHistoryData = await getInformationWithData('/invertory/getGeneralHistory/post', data)\r\n        const pickList = await getInformationWithData('/pickList/history/getByItemCode', data)\r\n        const transfer = await getInformationWithData('/transfer/history/getByItemCode', data)\r\n        const purchase = await getInformationWithData('/purchase/history/getByItemCode', data)\r\n        const adjust = await getInformationWithData('/adjustment/history/getByItemCode', data)\r\n\r\n        if (generalHistoryData.status.code === 1 && pickList.status.code === 1 && transfer.status.code === 1 && purchase.status.code === 1 && adjust.status.code === 1) {\r\n\r\n            await this.consolidateTable(pickList.data, purchase.data, transfer.data, adjust.data, generalHistoryData.data)\r\n        }\r\n    }\r\n\r\n    async consolidateTable(outbounds, purchase, transfers, adjusts, generalHistory) {\r\n\r\n\r\n        var InfoArray = []\r\n\r\n        for (const row of generalHistory) {\r\n            if (row.Categoria !== \"General\") {\r\n                const structure = {\r\n                    Type: '',\r\n                    NoOrder: '',\r\n                    BIN: '',\r\n                    BIN2: '',\r\n                    QuantityOrder: '',\r\n                    QuantityShipped: '',\r\n                    User: '',\r\n                    Date: ''\r\n                }\r\n                structure.Type = row.Categoria\r\n                structure.NoOrder = row.OrderNumber\r\n                structure.BIN = row.BIN\r\n                structure.BIN2 = row.BIN2\r\n                structure.QuantityOrder = row.OldQuantity\r\n                structure.QuantityShipped = row.NewQuantity\r\n                structure.User = row.username\r\n                structure.Date = row.Date2\r\n                InfoArray.push(structure)\r\n            }\r\n\r\n        }\r\n\r\n        for (const row of outbounds) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.QuantityOrder\r\n            structure.QuantityShipped = row.QuantityShipped\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of transfers) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BINSalida\r\n            structure.BIN2 = row.BINEntrada\r\n            structure.QuantityOrder = row.Quantity\r\n            structure.QuantityShipped = null\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of purchase) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.Quantity\r\n            structure.QuantityShipped = null\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of adjusts) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.OldQuantity\r\n            structure.QuantityShipped = row.NewQuantity\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n\r\n\r\n        var n = await OrderArrayByDate(InfoArray)\r\n        const temporal = this.state.General\r\n        temporal.generalHistory = n\r\n        temporal.generalHistoryFilter = n\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async getGeneralHistory(itemCode) {\r\n        const temporal = this.state.General\r\n        temporal.selectedItem = itemCode\r\n        temporal.generalHistory = []\r\n        temporal.generalHistoryFilter = []\r\n        const data = {\r\n            ItemCode: itemCode.ItemCode,\r\n            Date: FormatQueryReturnDate(this.state.cycleInventoryStorage.Header.startDate)\r\n        }\r\n\r\n        const val = await getInformationWithData('/pickList/history/getOutBound', data)\r\n        const val2 = await getInformationWithData('/purchase/history/getFutureByItemCode', data)\r\n        if (val.status.code === 1) {\r\n            temporal.outBounds = val.data\r\n\r\n        }\r\n\r\n        if (val2.status.code === 1) {\r\n            temporal.purchaseOrders = val2.data\r\n\r\n        }\r\n\r\n        this.setState({ General: temporal })\r\n        await this.handleModalOpen(\"showModal3\")\r\n    }\r\n\r\n    async updateSystemQuantity(item) {\r\n\r\n        this.setState({ secureTransaction: true })\r\n        Swal.fire({\r\n            title: 'For this Action you need a User and  Password Admin. Please enter it to continue:',\r\n            html: `<input type=\"text\" id=\"loginChangeQuantity\" class=\"swal2-input\" placeholder=\"Username\">\r\n  <input type=\"password\" id=\"passwordChangeQuantity\" class=\"swal2-input\" placeholder=\"Password\">`,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Continue',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const login = Swal.getPopup().querySelector('#loginChangeQuantity').value\r\n                const password = Swal.getPopup().querySelector('#passwordChangeQuantity').value\r\n                if (!login || !password) {\r\n                    Swal.showValidationMessage(`Please enter login and password`)\r\n                } else if (login === \"diego.perez\" && password === \"Diego1560\") {\r\n                    automaticCloseAlert('correct', 'The Quantity has been updated!')\r\n                } else {\r\n                    automaticCloseAlert('incorrect', 'Username or password are invalid!')\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        this.setState({ secureTransaction: false })\r\n    }\r\n\r\n    generateInfo() {\r\n        let proccessInfo = JSON.parse(JSON.stringify(this.state.cycleInventoryStorage.Detail))\r\n        const headerKeys = ['ItemCode', 'productLine', 'Description', 'realQuantity', 'BIN', 'systemQuantity', 'difference', 'countBy', 'date', 'status', 'comentary']\r\n        for (const item of proccessInfo) {\r\n            for (const head of headerKeys) {\r\n                if (head !== \"status\") {\r\n                    if (item[head] === null) {\r\n                        item[head] = \"\"\r\n                    } else if (head === \"date\") {\r\n                        item[head] = FormatQueryReturnDate(item[head])\r\n                    }\r\n                } else {\r\n                    if (item[head] === 0) {\r\n                        item[head] = \"Not checked\"\r\n                    } else {\r\n                        item[head] = \"Checked\"\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        var info = getDataSet(proccessInfo,\r\n            ['Item Code', 'Product Line', 'Description', 'Quantity', 'BIN', 'System Quantity', 'Difference', 'Counted By', 'Date', 'Status', 'Comentary'],\r\n            headerKeys)\r\n        //this.setState({dataset:info})\r\n        return info\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='inventoryCycle'>\r\n                <button hidden id='actionatorCycleInventory' onClick={() => this.getLastCycleInventory()}></button>\r\n                <p className='text-center display-1 pb-2' >Cycle Inventory</p>\r\n                <div>\r\n\r\n                    <div className='row pb-2'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-5'>\r\n                                    <button className='btn btn-primary btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 0} onClick={() => this.startNewCycleInventory()}> Start Cycle Inventory</button>\r\n                                    <button className='btn btn-danger btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 1} onClick={() => this.endCycleInventory()}> End Cycle Inventory</button>\r\n                                </div>\r\n\r\n                                <div className='col-5'><button className='btn btn-success btn-lg w-100' onClick={() => this.openOlCycleInventory()} > Open Old Cycle Inventory</button></div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row pb-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Inventory complete:</p>\r\n                            <ProgressBar ref={this.ProgrressBarRef} />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" autoComplete='off' className=\"form-control\" placeholder='Search by ItemCode, BIN, Description, Category, UPC ...' id='searchCycleInv1' onChange={this.valueSearchBar} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n                            <div className='row fw-bold'>\r\n                                <div className='col-4'></div>\r\n                                <div className='col-4'>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"-1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"-1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            All items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"0\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"0\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            No Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-4'></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n\r\n                            <ExcelDocument data={this.generateInfo()} sheetname={\"CycleInventoryDetail\"} archname={\"CYCLE INVENTORY NO \" + this.state.cycleInventoryStorage.Header.id + \" COMPANY \" + getValueCookie('Company') + \" DATE \" + getDateFromReports()} ></ExcelDocument>\r\n\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Items</p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Product Line</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Comentary</th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.cycleInventoryStorage.DetailFilter.map((item, i) => (\r\n                                        <tr key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.productLine}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td><input disabled={item.status === 1} type=\"number\" key={item.realQuantity} defaultValue={item.realQuantity} id={\"realQuantityCycleInv_\" + item.id} className=\"form-control text-end\" /></td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td><textarea disabled={item.status === 1} className=\"form-control\" key={item.comentary === 'null' ? '' : item.comentary} id={\"comentaryCycleInv_\" + item.id} defaultValue={item.comentary === 'null' ? '' : item.comentary}></textarea></td>\r\n                                            <td className='text-center'>\r\n                                                <button type=\"button\" className=\"btn btn-success\" disabled={this.state.General.secureTransaction} onClick={() => this.setCycleInventoryDetailInfo(item, \"comentaryCycleInv_\" + item.id, \"realQuantityCycleInv_\" + item.id,)} hidden={item.status === 1}>Check</button>\r\n                                                <button type=\"button\" className=\"btn btn-danger\" disabled={this.state.General.secureTransaction} onClick={() => this.updateCycleInventoryDetail(item)} hidden={item.status === 0}>Change</button>\r\n                                            </td>\r\n                                            <td className='text-center'><button onClick={() => this.getGeneralHistory(item)} type=\"button\" className=\"btn btn-info\">Detail</button></td>\r\n                                            <td className='text-center'><button disabled={this.state.General.secureTransaction} onClick={() => this.updateSystemQuantity(item)} type=\"button\" className=\"btn btn-warning\" hidden={item.status === 0}>Update Inventory</button></td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <ModalOrders title={'Old Cycle Inventory'} show={this.state.General.showModal2} close={(modal = \"showModal2\") => this.handleModalClose(modal)}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12 display-5 pb-3'>\r\n                            <p >Select an old Cycle Inventory to see they detail:</p>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='bg-dark text-light'>\r\n                                        <th className='text-center bg-dark'>Id</th>\r\n                                        <th className='text-center bg-dark'>Start Date</th>\r\n                                        <th className='text-center bg-dark'>Estimated Date to finish</th>\r\n                                        <th className='text-center bg-dark'>Real Finish Date</th>\r\n                                        <th className='text-center bg-dark'>Days</th>\r\n                                        <th className='text-center bg-dark'>Create By</th>\r\n                                        <th className='text-center bg-dark'>Close By</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {\r\n                                        this.state.General.oldCycleInventory.map((item, i) => (\r\n                                            <tr className={this.state.General.selectedCycleInventory === item ? 'bg-warning text-center' : 'text-center'} onClick={() => this.getOldDetailCycleInventory(item)} key={i}>\r\n                                                <td>{item.id}</td>\r\n                                                <td>{item.startDate2}</td>\r\n                                                <td>{item.finishDate2}</td>\r\n                                                <td>{item.realFinishDate2}</td>\r\n                                                <td>{item.realQuantityDays}</td>\r\n                                                <td>{item.createBy}</td>\r\n                                                <td>{item.closeBy}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                        <div className='col-12 display-5 '>\r\n                            <p >Detail:</p>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" className=\"form-control\" placeholder='Search by BIN, Description, Date...' id='searchOldCycleInv' onChange={this.searchOlderCycleInventoryDetail} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3 text-center'>\r\n                            <div className='row h4'>\r\n                                <div className='col correctCount2'>Exact difference</div>\r\n                                <div className='col negativeCount2'>Negative difference</div>\r\n                                <div className='col positiveCount2'>Positive difference</div>\r\n                                <div className='col notcounted2'>Item not counted</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12'>{/*Here we need specific information*/}</div>\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Comentary</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.detailOldCycleSelectedFilter.map((item, i) => (\r\n                                        <tr className={item.status === 0 ? 'notcounted' : item.difference < 0 ? 'negativeCount' : item.difference === 0 ? 'correctCount' : 'positiveCount'} key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.realQuantity}</td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td>{item.comentary === 'null' ? '-' : item.comentary}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n                <ModalOrders title={'Detail of Product'} show={this.state.General.showModal3} close={(modal = \"showModal3\") => this.handleModalClose(modal)}>\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate1' />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate2' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-5'></div>\r\n                        <div className='col-2'>\r\n                            <button className='btn btn-danger btn-lg' onClick={() => this.getInfoProduct()}>Search</button>\r\n                        </div>\r\n                        <div className='col-5'></div>\r\n                    </div>\r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Item Code:</p>\r\n                                </div>\r\n                                <div className='col-12 text-start'>\r\n                                    <p className='fw-bold'>{this.state.General.selectedItem.ItemCode}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12 justifyText'>\r\n                                    <p>{this.state.General.selectedItem.Description}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-center'>\r\n                            <img className=' pt-4 detailIMG' src='/assets/notavailable.png' alt='Company' />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n\r\n                    <div className='row text-start pt-2'>\r\n                        <div className='col-12 fs-5'>\r\n                            <p>Current Orders who maybe affect the current physical inventory</p>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead pt-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>No Order</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order</th>\r\n                                        <th className='bg-dark'>Quantity Shipped</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.outBounds.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.OrderNo}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.QuantityOrdered}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n                                    {this.state.General.purchaseOrders.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.OrdenNo}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.Quantity}</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12 tableFixHead pt-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>No Order</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>New BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order<br />Old Quantity<br /> New Quantity</th>\r\n                                        <th className='bg-dark'>Quantity Shipped</th>\r\n                                        <th className='bg-dark'>Start Total Quantity</th>\r\n                                        <th className='bg-dark'>End Total Quantity</th>\r\n                                        <th className='bg-dark'>Username</th>\r\n                                        <th className='bg-dark'>Date</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.generalHistoryFilter.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-start'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.NoOrder}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.BIN2}</td>\r\n                                            <td>{item.QuantityOrder}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                            <td></td>\r\n                                            <td></td>\r\n                                            <td>{item.User}</td>\r\n                                            <td>{item.Date}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Pie,Doughnut, Bar,Line } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend,CategoryScale,LinearScale,BarElement,Title,PointElement,LineElement,Filler } from 'chart.js';\r\nimport { faker } from '@faker-js/faker';\r\nexport default class CycleInvetoryGraph extends Component {\r\n    state = {\r\n\r\n    }\r\n    constructor(){\r\n        super()\r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            \r\n            Filler,\r\n            );\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    datapie={\r\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n    }\r\n\r\n    optionsbar = {\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart - Stacked',\r\n          },\r\n        },\r\n        responsive: true,\r\n        interaction: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n        scales: {\r\n          x: {\r\n            stacked: true,\r\n          },\r\n          y: {\r\n            stacked: true,\r\n          },\r\n        },\r\n      };\r\n      \r\n    labels=['January', 'February', 'March', 'April', 'May', 'June', 'July']\r\n      \r\n       databar = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(75, 192, 192)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 3',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(53, 162, 235)',\r\n            stack: 'Stack 1',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsarea = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      dataarea = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            fill: true,\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            borderColor: 'rgb(53, 162, 235)',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsLine2 = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      databars = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n    render() {\r\n        return (\r\n            <div className='CycleInventoryReport'>\r\n                <p className='text-center display-1 pb-2' >Cycle Inventory Graphs</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10'>\r\n                        <select className=\"form-select form-select-lg mb-3\" aria-label=\"select option\">\r\n                            <option>Select an old Cycle Inventory to see they graphs</option>\r\n                            <option value=\"1\">Cycle Invetory No. 1 06/20/2022-06/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 2 06/29/2022-07/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 3 08/15/2022-08/30/2022</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Pie Graph</p>\r\n                        <Pie data={this.datapie}></Pie>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Doughnut Graph</p>\r\n                        <Doughnut data={this.datapie}></Doughnut>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Bar Graph</p>\r\n                        <Bar options={this.optionsbar} data={this.databar}></Bar>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Line Graph</p>\r\n                        <Line options={this.optionsarea} data={this.dataarea}></Line>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Another Line Graph</p>\r\n                        <Line options={this.optionsLine2} data={this.databar}></Line>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Bars Graph</p>\r\n                        <Bar options={this.optionsLine2} data={this.databars}></Bar>\r\n                    </div>            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class BarGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n            plugins: {\r\n              legend: {\r\n                position: 'top',\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: '',\r\n              },\r\n            },\r\n          }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Bar options={this.state.options} data={this.state.data}></Bar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../css/table-responsive.css'\r\nimport {getInformationWithData } from '../services/CABE'\r\nimport BarGraph from '../components/BarGraph'\r\nimport { getValueCookie } from '../services/cookieService'\r\nexport default class KPI extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.BarGraph1 = React.createRef()\r\n\r\n    }\r\n\r\n\r\n    state = {\r\n        General: {\r\n            KPIInfo: [],\r\n            KPIInfoFilter: []\r\n        },\r\n        GraphData: {\r\n\r\n        }\r\n    }\r\n\r\n     componentDidMount() {\r\n         \r\n         \r\n    }\r\n\r\n\r\n    async getKPIInfo(){\r\n        const data1={\r\n            company:getValueCookie('Company')\r\n        }\r\n        const temporal=this.state.General\r\n        const data=await getInformationWithData('/reports/getKPI',data1)\r\n        if(data.status.code===1){\r\n        temporal.KPIInfo=data.data\r\n        temporal.KPIInfoFilter=data.data\r\n        await this.setState({General:temporal})\r\n        await this.generateGraphDays(data.data)\r\n        }\r\n    }\r\n\r\n    async generateGraphDays(data) {\r\n        this.BarGraph1.current.setTitle('Inventory Cycle Days')\r\n\r\n        let labels = []\r\n        let completeInfo = []\r\n\r\n        for (const element of data) {\r\n            labels.push('Cycle ' + String(element.id))\r\n            completeInfo.push(String(element.realQuantityDays))\r\n        }\r\n\r\n        var info = {\r\n            label: 'Days',\r\n            data: completeInfo,\r\n            backgroundColor: 'rgb(17,131,29)',\r\n\r\n        }\r\n        await this.BarGraph1.current.setLabels(labels)\r\n        await this.BarGraph1.current.setData([info])\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='KPI'>\r\n                <button hidden id='actionatorKPI' onClick={()=>this.getKPIInfo()}></button>\r\n                <p className='text-center display-1 pb-3' >Inventories of {getValueCookie('Company')}</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10 tableFixHead tb-5'>\r\n                        <table className='table'>\r\n                            <thead>\r\n                                <tr className='text-light text-center'>\r\n                                    <th className='bg-dark'>Type of Inventory</th>\r\n                                    <th className='bg-dark'>Cycle</th>\r\n                                    <th className='bg-dark'>Full cycle count days</th>\r\n                                    <th className='bg-dark'>Closing date</th>\r\n                                    <th className='bg-dark'>Counted items</th>\r\n                                    <th className='bg-dark'>Average binary accuracy</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>Adjustments</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>KPI result</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.General.KPIInfoFilter.map((element, i) => (\r\n                                    <tr className='text-center' key={i}>\r\n                                        <td>Cycle</td>\r\n                                        <td>{element.id}</td>\r\n                                        <td>{element.realQuantityDays}</td>\r\n                                        <td>{element.realFinishDate2}</td>\r\n                                        <td>{element.ItemsContados}</td>\r\n                                        <td>{element.ExBinaria}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            <tfoot className='tfoot'>\r\n\r\n                                <tr className='bg-secondary text-light'>\r\n\r\n                                </tr>\r\n                            </tfoot>\r\n\r\n                        </table>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <BarGraph ref={this.BarGraph1} />\r\n                    </div>\r\n                    <div className='col-5'>\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport '../css/CartaProducto.css'\r\n\r\n\r\nexport default class CartaProducto extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conteiner cartaHover\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 imgC \">\r\n                        <img src={\"./assets/notavailable.png\"} alt=\"Card  cap\" className='imgC'/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row text-start pt-5\">\r\n                            <h5 className=\"card-title\">{this.props.ItemCode}</h5>\r\n                        </div>\r\n                        <div className=\"row text-start\">\r\n                            <p className=\"card-text fs-6\">{this.props.Description}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-5\"><b>OnHand:</b> {this.props.OnHand}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport CartaProducto from './CartaProducto'\r\nimport {getInformationNoData} from '../services/CABE.js'\r\n\r\n\r\nexport default class Catalogue extends Component {\r\n\r\n    state={\r\n        Catalogo:[],\r\n        ProdcutosMostrados:[]\r\n    }\r\n\r\n    async obtenerProductos(){\r\n        const Enpoint = '/Items/get'\r\n        console.log( await getInformationNoData(Enpoint));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button type=\"button\" className=\"btn catalogueOpen btn-lg w-100\" data-bs-toggle=\"modal\" data-bs-target={\"#Catalogo\" + this.props.nombrePadre} onClick={()=>this.obtenerProductos()}>Open Catalogue </button>\r\n                <div className=\"modal fade\" id={\"Catalogo\" + this.props.nombrePadre} tabIndex=\"-1\" aria-labelledby=\"catalogoModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-fullscreen\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"catalogoModalLabel\">Catalogue</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body container\">\r\n                                <div className='row form-group pt-4'>\r\n                                    <input className='form-control' placeholder='Search by ItemCode,BIN,Description...'/>\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className='col-6 ' data-bs-dismiss=\"modal\">\r\n                                        <CartaProducto ItemCode={'FARMCA1006'} Description={'Descripcion de Farcma 1006 para ver cmo se ve 16x35 onz (libras)'} OnHand={'23'} />\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class LineAreaGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[\r\n                {\r\n                    fill: true,\r\n                    label: 'Quantity',\r\n                    data: [],\r\n                    borderColor: 'rgb(53, 162, 235)',\r\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                  }\r\n            ]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: '',\r\n          },\r\n        },\r\n        }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets[0].data=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Line options={this.state.options} data={this.state.data}></Line>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/inventory-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport Catalogue from '../components/Catalogue.js'\r\nimport { AiOutlineSearch, AiOutlineFileSearch, AiFillPrinter, AiFillBook, AiFillDollarCircle, AiFillCheckSquare, AiFillCreditCard, AiFillTag, AiOutlineBarcode } from \"react-icons/ai\"\r\nimport LineAreaGraph from '../components/LineAreaGraph'\r\nexport default class Inventory extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.LineAreaGraph1 = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LineAreaGraph1.current.setTitle('Quantity sold per month year 2022')\r\n        this.LineAreaGraph1.current.setLabels(['January', 'February', 'March', 'April', 'May', 'June'])\r\n        this.LineAreaGraph1.current.setData(['123', '100', '12', '156', '145', '110'])\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='InventoryInfo lobbyContainer'>\r\n                <div className='row searchPart'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5 pb-5'>\r\n                        <p className='text-start pt-4 pb-2' >Search specific Product:</p>\r\n                        <div className=\"input-group input-group-lg pb-4\">\r\n                            <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Search by ItemCode' />\r\n                        </div>\r\n                        <div className='text-center'>\r\n                            <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Search <AiOutlineFileSearch /></button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        <p className='text-start pt-4 pb-2' >See all Catalogue:</p>\r\n                        <div className='text-center'>\r\n                            <Catalogue nombrePadre={'InventoryBin'}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='ItemInfo' hidden={false}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='text-start display-4 pb-2' >Item information: </p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n                    <div className='row pt-3'>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber'>\r\n                                <p className='text-center display-3' >CM-2U-PL-COV</p>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center'>\r\n                                <img className='pb-5 pt-5' src='/assets/notavailable.png' alt='Company' />\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Print labels <AiFillPrinter /></button>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 historyProd\">View history <AiFillBook /></button>\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='row pt-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >General information: <AiOutlineBarcode /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>UPC:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4 textAreaGeneral\">\r\n                                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>U/M:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Categories to which it belongs:</p>\r\n                                </div>\r\n                                <div className='col-12 tableFixHead'>\r\n                                    <table className='table'>\r\n                                        <thead>\r\n                                            <tr className='text-light text-center'>\r\n                                                <th className='bg-dark'>Categories</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className='text-center'>BOOTS</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>FIBER ADAPTER</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>KEYSTONE JACKS</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tfoot className='tfoot'>\r\n                                        </tfoot>\r\n\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Quantity Available: <AiFillCheckSquare /> </p>\r\n                                    <div className='row'>\r\n                                        <div className='col-12 titleTotal text-center'>\r\n                                            <p>General Total: 1563</p>\r\n                                        </div>\r\n                                        <div className='col-12 titleDistribution'>\r\n                                            <p>Distribution:</p>\r\n                                        </div>\r\n                                        <div className='col-12 tableFixHead'>\r\n                                            <table className='table'>\r\n                                                <thead>\r\n                                                    <tr className='text-light text-center'>\r\n                                                        <th className='bg-dark'>BIN</th>\r\n                                                        <th className='bg-dark'>Quantity</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A001</td>\r\n                                                        <td className='text-end'>1500</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>B002</td>\r\n                                                        <td className='text-end'>60</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A003</td>\r\n                                                        <td className='text-end'>3</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tfoot className='tfoot'>\r\n\r\n                                                    <tr className='bg-secondary text-light'>\r\n                                                        <td className='text-center'>Total</td>\r\n                                                        <td className='text-end'>1563</td>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >Physical details: <AiFillTag /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Weight (lbs) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Length (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Height (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Width (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Financial information: <AiFillCreditCard /></p>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Purchase price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Sale price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <LineAreaGraph ref={this.LineAreaGraph1} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/general-style.css\"\r\n\r\n\r\nexport default class Lobby extends Component {\r\n\r\n    componentDidMount() {\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid generalContainer lobbyContainer display-1 text-center pt-5\">\r\n                <p>Welcome</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { Component } from \"react\"\r\nimport CompanyDashBoard from \"../pages/CompanyDashBoard\"\r\nimport {Menu} from \"../components/Menu\"\r\nimport Footer from \"../components/Footer\"\r\nimport CycleInventory from \"../pages/CycleInvetory\"\r\nimport CycleInvetoryGraph from \"../pages/CycleInventoryGraph\"\r\nimport KPI from \"../pages/KPI\"\r\nimport Inventory from \"../pages/Inventory\"\r\nimport Lobby from \"../pages/Lobby\"\r\n\r\n\r\nexport default class App extends Component {\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"page\" id=\"CompanyDashBoard\">\r\n                    <CompanyDashBoard />\r\n                </div>\r\n\r\n                <div id=\"GeneralPages\" className=\"page\">\r\n                    <Menu/>\r\n                    <div className=\"container-fluid generalContainer\" id=\"actualPage\">\r\n\r\n                        <div id=\"Lobby\" className=\"page\">\r\n                            <Lobby/>\r\n                        </div>\r\n\r\n                        <div id=\"CycleInventory\" className=\"page\">\r\n                            <CycleInventory />\r\n                        </div>\r\n                        <div id=\"CycleInventoryGraph\" className=\"page\">\r\n                            <CycleInvetoryGraph/>\r\n                        </div>\r\n\r\n                        <div id=\"KPIGraph\" className=\"page\">\r\n                            <KPI/>\r\n                        </div>\r\n\r\n                        <div id=\"Inventory\" className='page'>\r\n                            <Inventory/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/login-style.css\"\r\nimport Footer from '../components/Footer'\r\nimport { AiOutlineUser, AiOutlineKey, AiOutlineLogin } from 'react-icons/ai';\r\nimport { selectWithDataService } from '../services/auth/authservices';\r\nimport { getValueCookie, setNewCookie } from '../services/cookieService';\r\nimport {automaticCloseAlert} from'../functions/alerts'\r\nimport md5 from 'md5'\r\nimport { closeSession } from \"../functions/closeSession\"\r\nimport App from '../components/App';\r\nimport { OpenCompanyDashBoard, OpenLobby, OpenLogin } from '../functions/pagesFunction';\r\n\r\n\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n  state = {\r\n    loginStorage: {\r\n      userName: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  onChangeById = e => {\r\n    var idState = e.target.id.split('_')\r\n    const temp = this.state.loginStorage\r\n    if (idState.length === 2) {\r\n      temp[idState[1]] = e.target.value\r\n    }\r\n\r\n    this.setState({ loginStorage: temp })\r\n  }\r\n\r\n  onKeyDown = async e => {\r\n    if (e.key === 'Enter') {\r\n      await this.Login()\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(getValueCookie('userName')){\r\n      if(getValueCookie('Company')){\r\n        OpenLobby()\r\n      }else{\r\n        OpenCompanyDashBoard()\r\n      }\r\n    }else{\r\n      OpenLogin()\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  async Login() {\r\n    const temp = this.state.loginStorage\r\n    const btn = document.getElementById('btn_signin');\r\n    const btn_logo = btn.innerHTML;\r\n    const datos = {\r\n      userName: temp.userName,\r\n      password: md5(temp.password),\r\n    }\r\n    btn.innerHTML = 'Loading...';\r\n    btn.disabled = true;\r\n    const datos2 = await selectWithDataService(datos, \"/login\")\r\n    if (datos2 != null) {\r\n      if (datos2.status.code === 1) {\r\n        if (datos2.token !== 'invalid') {\r\n          await automaticCloseAlert('correct', 'Welcome: ' + datos2.data.name + \" \" + datos2.data.surname)\r\n          setNewCookie('sessionAuthToken', datos2.token, 50)\r\n          setNewCookie('userName', datos2.data.userName, 50)\r\n          setNewCookie('name', datos2.data.name, 50)\r\n          setNewCookie('surname', datos2.data.surname, 50)\r\n          window.location.reload()\r\n          //await OpenCompanyDashBoard()\r\n        } else {\r\n          closeSession()\r\n          automaticCloseAlert('incorrect', 'Your  Username or Password are incorrect. Please try again')\r\n\r\n        }\r\n      }\r\n    }\r\n    btn.innerHTML = btn_logo;\r\n    btn.disabled = false;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id='login' className='page'>\r\n          <div className='container-fluid pb-1'>\r\n            <div className='container'>\r\n              <div className='row pt-5 pb-3 d-flex justify-content-center'>\r\n                <div className='col-9 contLogin'>\r\n                  <div className=\"border border-5 border-primary\"></div>\r\n                  <div className='row d-flex justify-content-center pt-5   '>\r\n                    <p className='display-2 '>Login</p>\r\n\r\n                    <div className='row d-flex justify-content-center pt-5 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineUser /></span>\r\n                          <input type=\"text\" id='Login_userName' onChange={this.onChangeById} onKeyDown={this.onKeyDown} className=\"form-control\" placeholder='Username' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineKey /></span>\r\n                          <input type=\"password\" id='Login_password' onKeyDown={this.onKeyDown} onChange={this.onChangeById} className=\"form-control\" placeholder='Password' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3 text-center'>\r\n                      <div className='col-7'>\r\n                        <button id='btn_signin' type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => this.Login()}>Sign in <AiOutlineLogin /></button>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        \r\n        <div id='App' className='page'>\r\n          <App />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport Login from './pages/Login';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Login/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}