{"version":3,"sources":["components/Footer.js","services/Connection/backEndLink.js","functions/alerts.js","services/cookieService.js","services/auth/authservices.js","functions/changeVisibility.js","functions/pagesFunction.js","functions/closeSession.js","components/MenuCompanySelect.js","components/Status.js","services/CABE.js","pages/CompanyDashBoard.js","components/Menu.js","components/ProgressBar.js","components/ModalComponent.js","functions/dateFormat.js","functions/generateDataSetExcel.js","components/ExcelDocument.js","pages/CycleInvetory.js","pages/CycleInventoryGraph.js","components/BarGraph.js","pages/KPI.js","components/CartaProducto.js","components/Catalogue.js","components/LineAreaGraph.js","pages/Inventory.js","pages/Lobby.js","pages/PikingSystem.js","pdfConfig/pdfConfig.js","components/OrderPDF.js","functions/searchInObject.js","pages/PurchaseOrder.js","components/App.js","pages/Login.js","index.js"],"names":["Footer","Date","getFullYear","toString","react_default","a","createElement","Fragment","className","src","alt","this","ActualYear","Component","server","url","automaticCloseAlert","type","message","Swal","fire","icon","title","showConfirmButton","timer","confirmCloseAlert","cookies","Cookies","setNewCookie","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","identification","value","timeExpiration","tiempo","expires","wrap","_context","prev","next","now","set","path","httpOnly","stop","_x","_x2","_x3","apply","arguments","getValueCookie","get","removeCookie","remove","baseURLAuth","selectWithDataService","authservices_regeneratorRuntime","object","route","URL","responseBack","axios","post","data","then","response","catch","error","abrupt","closeAllPages","_step","_iterator","_createForOfIteratorHelper","document","getElementsByClassName","s","n","done","style","display","err","e","f","openPage","id","page","getElementById","CloseAllPages","OpenCompanyDashBoard","_OpenCompanyDashBoard","boton","pagesFunction_regeneratorRuntime","click","OpenLobby","OpenCycleInventory","_OpenCycleInventory","_callee2","_context2","OpenCycleInventoryGraph","_callee3","_context3","OpenLogin","CloseCompanySession","closeSession","closeSession_regeneratorRuntime","window","location","reload","MenuCompany","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","href","onClick","role","data-bs-toggle","aria-expanded","index_esm","aria-labelledby","data-bs-target","aria-controls","tabIndex","data-bs-dismiss","aria-label","aria-current","status","Fail","code","Description","Undefined","Success","ServerFail","getInformationNoData","CABE_regeneratorRuntime","getInformationWithData","_ref2","create_Delete_Update_Information","_ref3","_x4","_x5","CompanyDashBoard","state","General","CompanysofUser","userName","info","temporal","setState","console","log","company","name","idCompany","directoryLogo","idTypeofUser","_this2","hidden","getCompanysAssigned","MenuCompanySelect_MenuCompany","map","i","SelectCompany","Footer_Footer","Menu","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","companyId","typeUser","enableModles","needModlesCharge","Modules","ProductInfo","CycleInventory","KPI","ReportGraphs","_AssignModules","Menu_regeneratorRuntime","sent","_AssignStatesModules","modules","element","AssignModules","Menu_createForOfIteratorHelper","t0","t1","finish","AssignStatesModules","bi_index_esm","tb_index_esm","fa_index_esm","bs_index_esm","_OpenKPIGraph","OpenKPIGraph","ProgressBar","props","min","max","size","progressBarRef","React","createRef","setValue","undefined","valor","height","ref","aria-valuenow","aria-valuemin","aria-valuemax","width","ModalOrders","Modal","show","fullscreen","onHide","close","Header","closeButton","Title","Body","children","formatInputDate","datevalue","arrayDate","split","formatInputDateQuery","date2","OrderArrayByDate","array","b","date1","temp","assign","CompareDates","datesta","dateend","FormatQueryReturnDate","date","div","String","div2","FormatQueryReturnDateWithDash","getDateFromReports","datenow","getMonth","getDate","getDateYearMonthDayDash","getActualDateUTC","toISOString","getDataSet","headers","keys","dataset","columns","generateDataSetExcel_createForOfIteratorHelper","wch","fill","patternType","fgColor","rgb","bgColor","font","color","push","_step2","_iterator2","_step3","_iterator3","col","sz","alignment","horizontal","ExcelFile","ReactExport","ExcelSheet","ExcelDocument","filename","archname","dataSet","sheetname","CycleInvetory","porcetaje","showModal1","showModal2","showModal3","showModal4","habilitar","chekvalue","checkHistory","selectedItem","selectedCycleInventory","secureTransaction","generalHistory","outBounds","purchaseOrders","generalHistoryFilter","oldCycleInventory","detailOldCycleSelected","detailOldCycleSelectedFilter","cycleInventoryStorage","closeBy","createBy","days","finishDate","lastUpadeDate","realFinishDate","startDate","updateBy","QuantityItems","FilterQuantity","Detail","DetailFilter","CheckedItems","valueSearchBar","CycleInvetory_regeneratorRuntime","search","target","getBySearchBar","valueRadioButton","stat","getByStat","searchOlderCycleInventoryDetail","filter","item","ItemCode","toLowerCase","includes","BIN","handleModalOpen","modal","handleModalClose","onChangeQuantity","index","indexOf","realQuantity","Number","ProgrressBarRef","productLine","DetailFilter4","difference","DetailFilter2","DetailFilter3","busqueda","current","idcompany","datos","getDetailCycleInventory","arrayChecked","allArray","allinformation","realData","mergeDataCheck","tempo","getCheckedItems","completePercentage","disableTransaction","realDays","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","_preConfirm","_callee8","actualDate","habilDays","_context8","getTime","getDay","allowOutsideClick","isLoading","_callee9","result","_context9","isConfirmed","_this3","getLastCycleInventory","_x6","enableTransaction","showDenyButton","backdrop","denyButtonText","_ref4","_callee11","_context11","_this4","isDenied","_x7","idQuant","resultquant","flag","idcycleInventoryHeader","countBy","systemQuantity","Quantity","count","total","CycleInvetory_createForOfIteratorHelper","addValue","cantidad","getOldCycleInventory","Start","End","data2","data3","generalHistoryData","pickList","transfer","purchase","adjust","InventStart","InventEnd","DeleteRepeatBins","Inv2Start","Inv2End","InvStart","getDataMayorInventory","InvEnd","consolidateTable","information","it","fech","splice","_loop","findIndex","Type","outbounds","transfers","adjusts","InfoArray","_iterator4","_step4","row","Categoria","structure","NoOrder","BIN2","QuantityOrder","QuantityShipped","User","OrderNumber","description","OldQuantity","NewQuantity","username","Date2","_iterator5","_step5","CustomerName","CustomerNo","Cliente","NoCliente","OrdenNo","_iterator6","_step6","BINSalida","BINEntrada","_iterator7","_step7","VendorNo","VendorName","_iterator8","_step8","_iterator9","_step9","unshift","_iterator10","_step10","itemCode","val","html","_preConfirm2","_callee20","login","password","_context20","getPopup","querySelector","showValidationMessage","_step11","proccessInfo","JSON","parse","stringify","headerKeys","_iterator11","_step12","_iterator12","head","comm","comentary","_preConfirm3","_callee23","coment","_context23","_this5","diff","actual","start","date3","date4","preliminarDays","Math","abs","inhDays","_this6","disabled","startNewCycleInventory","endCycleInventory","openOlCycleInventory","isNaN","RemainingDays","ProgressBar_ProgressBar","autoComplete","placeholder","onChange","checked","htmlFor","components_ExcelDocument","generateInfo","defaultValue","textStatus","addComentary","setCycleInventoryDetailInfo","updateCycleInventoryDetail","getGeneralHistory","updateSystemQuantity","ModalComponent","getOldDetailCycleInventory","startDate2","finishDate2","realFinishDate2","realQuantityDays","OrderNo","QuantityOrdered","getInfoProduct","addDifferenceSymbol","CycleInvetoryGraph","datapie","labels","datasets","label","backgroundColor","borderColor","borderWidth","optionsbar","plugins","text","responsive","interaction","mode","intersect","scales","x","stacked","y","databar","faker","datatype","number","stack","optionsarea","legend","position","dataarea","optionsLine2","databars","ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Filler","react_chartjs_2_dist","options","BarGraph","KPIInfo","KPIInfoFilter","GraphData","BarGraph1","data1","generateGraphDays","setTitle","completeInfo","setLabels","setData","getKPIInfo","ItemsContados","ExBinaria","BarGraph_BarGraph","CartaProducto","UPC","OnHand","Catalogue","Catalogo","ProductosMostrados","buscarProductos","Productos","producto","contiene","abbreviatedDesc","upc","retornarProducto","buscador","respuesta","setTimeout","focus","parametro","toLocaleLowerCase","Padre","Products","products","quantity","totalCost","nombrePadre","obtenerProductos","aria-hidden","onKeyUp","getProducto","CartaProducto_CartaProducto","LineAreaGraph","Inventory","LineAreaGraph1","Catalogue_Catalogue","rows","LineAreaGraph_LineAreaGraph","Lobby","PikingSystem","pdfConfig","StyleSheet","create","HeaderStyle","HeaderMargin","top","BusinessLogo","left","ContactInfo","textAlign","fontSize","marginInfo","marginLeft","padding","flexDirection","marginBottom","OrderTitleStyle","marginTop","OrderInformation","TitleStyle","TextSeparator","InfoEncabezadoStyle","TextSeparator2","Table","CabeceraTabla","ColumnaNormal","ColumnaGrande","CuerpoTabla","ColumnaGrandeCuerpo","ColumnaNormalCuerpo","Fila","OrderPDF","showModal","colorButton","react_pdf_browser_es","minHeight","fixed","companyLogo","contactInfo","OrderTitle","OrderInfo1","OrderInfo2","getIndexElement","toUpperCase","PurchaseOrder","purchaseOrderHeader","Vendor","Carrier","dateOrder","creationDate","State","totals","finalquantityTotal","finalTotalCost","disableHeader","modalPurchase","oldPurchaseOrderHeader","onTarget","ident","PurchaseOrder_regeneratorRuntime","unitPrice","calculateTotals","onTargerHeader","varChange","getPurchaseOrderHeader","createNewPurchaseOrder","disableTransactions","noOrder","orderNumber","enableTransactions","header","tot","_callee7","_context7","clearDashBoardPurchaseOrder","cost","totalquant","_ref5","totalcost","PurchaseOrder_createForOfIteratorHelper","temporal2","print","cancelPurchaseOrder","colorStateText","stateInWords","product","removeProduct","createPurchaseOrder","OrderPDF_OrderPDF","OrderDate","Comment","TotalQuantity","TotalCost","Status","App","CompanyDashBoard_CompanyDashBoard","Menu_Menu","Lobby_Lobby","CycleInvetory_CycleInvetory","CycleInventoryGraph_CycleInvetoryGraph","KPI_KPI","Inventory_Inventory","PurchaseOrder_PurchaseOrder","PikingSystem_PikingSystem","Login","loginStorage","onChangeById","idState","onKeyDown","Login_regeneratorRuntime","btn","btn_logo","innerHTML","md5","datos2","token","surname","App_App","ReactDOM","render","StrictMode","Login_Login"],"mappings":"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","file":"static/js/main.2e1097fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/footer-style.css\"\r\n\r\nexport default class Footer extends Component {\r\n\r\n    ActualYear() {\r\n        const time = new Date()\r\n        var year = time.getFullYear()\r\n        return year.toString()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='GenFooter'>\r\n                    <div className='container-fluid justify-content-center text-center bg-dark text-white pt-4 GenFooter'>\r\n\r\n                        <div className='logoFooter pt-2 pb-2'>\r\n                            <img src='/assets/logoM.png' alt='MayalandSolutions' />\r\n\r\n                            <p>Copyright &#169; {this.ActualYear()} Mayaland Solutions.<br /> All Rights Reserved.</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","const server={\r\n  //url:\"http://localhost:4203\"\r\n  url: \"http://134.209.119.149:4203\"\r\n}\r\n\r\nexport default server","import Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nexport const automaticCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const confirmCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: true, \r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: true,\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default  {automaticCloseAlert,confirmCloseAlert}","import Cookies from \"universal-cookie\";\r\n\r\n\r\nconst cookies=new Cookies();\r\n\r\n\r\nexport const setNewCookie=async(identification,value,timeExpiration)=>{\r\n    var tiempo=60*timeExpiration;\r\n    var expires = (new Date(Date.now()+ tiempo*1000));\r\n    cookies.set(identification, value, { path: \"*\",expires:expires,httpOnly:false});\r\n}\r\n\r\nexport const getValueCookie=(identification)=>{\r\n   return cookies.get(identification)\r\n}\r\n\r\nexport const removeCookie=(identification)=>{\r\n    cookies.remove(identification)\r\n}\r\n\r\n\r\n\r\nexport default {setNewCookie,getValueCookie,removeCookie}","import axios from \"axios\";\r\nimport server from \"../Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../../functions/alerts\"\r\nimport { Navigate} from \"react-router-dom\";\r\nimport React from \"react\"\r\nimport { getValueCookie } from \"../cookieService\";\r\nconst baseURLAuth=server.url+\"/auth\"\r\n\r\n\r\nexport const selectWithDataService=async (object,route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack\r\n    await axios.post(URL,{data:object}).then(\r\n\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\nexport const ProtectedRoute=({children})=>{\r\n    const temp=getValueCookie('sessionAuthToken')\r\n    \r\n    if(!temp){\r\n        return <Navigate to=\"/login\" />\r\n    }\r\n        return children\r\n    \r\n}\r\n\r\n\r\n\r\nexport default {selectWithDataService,ProtectedRoute}","\r\nexport function closeAllPages() {\r\n  let coleccion = document.getElementsByClassName('page');\r\n  for (let objetc of coleccion) {\r\n    objetc.style.display = 'none';\r\n  }\r\n}\r\n\r\nexport function openPage(id) {\r\n  let page = document.getElementById(id);\r\n  if (page) {\r\n    page.style.display = '';\r\n  }\r\n}\r\n\r\nexport default { closeAllPages, openPage }","import { closeAllPages,openPage } from \"./changeVisibility\";\r\nimport { removeCookie } from \"../services/cookieService\";\r\n\r\n\r\nexport function CloseAllPages() {\r\n    closeAllPages();\r\n}\r\n\r\nexport async function OpenCompanyDashBoard() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('catalogueOfCompanyActioner')\r\n    await boton.click()\r\n    openPage( \"App\");\r\n    openPage( \"CompanyDashBoard\");\r\n}\r\n\r\nexport function OpenLobby() {\r\n    CloseAllPages();\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"Lobby\")\r\n    //OpenPikingSystem()\r\n}\r\n\r\nexport async function OpenCycleInventory() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('actionatorCycleInventory')\r\n    await boton.click()\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"CycleInventory\")\r\n}\r\nexport function OpenCycleInventoryGraph(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"CycleInventoryGraph\")\r\n}\r\n\r\nexport async function OpenKPIGraph(){\r\n    CloseAllPages()\r\n    var boton=document.getElementById('actionatorKPI')\r\n    await boton.click()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"KPIGraph\")\r\n}\r\n\r\nexport function OpenLogin() {\r\n    CloseAllPages();\r\n    openPage( \"login\")\r\n}\r\n\r\nexport  function OpenInventory(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"Inventory\")\r\n}\r\n\r\nexport function OpenPikingSystem(){\r\n    CloseAllPages()\r\n    openPage(\"App\");\r\n    openPage(\"GeneralPages\");\r\n    openPage(\"PikingSystem\");\r\n}\r\nexport function OpenPurchaseOrder(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"PurchaseOrder\")\r\n}\r\n\r\nexport function CloseCompanySession(){\r\n    removeCookie('Company')\r\n    OpenCompanyDashBoard()\r\n\r\n}\r\n\r\nexport default{OpenLogin,CloseAllPages,OpenCycleInventory,OpenLobby,OpenCompanyDashBoard,OpenCycleInventoryGraph,CloseCompanySession}","\r\nimport { removeCookie } from \"../services/cookieService\"\r\nimport { OpenLogin } from \"./pagesFunction\"\r\n\r\nexport const closeSession=async ()=>{\r\n    await removeCookie('userName')\r\n    await  removeCookie('name')\r\n    await removeCookie('surname')\r\n    await removeCookie('sessionAuthToken')\r\n    await removeCookie('Company')\r\n    window.location.reload()\r\n    await OpenLogin()\r\n}\r\n\r\nexport default {closeSession}","import React, { Component } from 'react'\r\nimport \"../css/menuCompany-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport {OpenCompanyDashBoard} from \"../functions/pagesFunction\"\r\n\r\nexport class MenuCompany extends Component {\r\n\r\n\r\n \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='menuCompany'>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                               \r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={()=>OpenCompanyDashBoard()}>\r\n                                    <img src='/assets/logoM.png' alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' />Hi {getValueCookie('name')} {getValueCookie('surname')}<AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                       \r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","export const status = {\r\n\r\n    Fail:{code:-1,Description:\"Operation fail\"},\r\n    Undefined:{code:0,Description:\"Operation Undefined\"},\r\n    Success:{code:1,Description:\"operation successful\"},\r\n    ServerFail:{code:504,Description:'Server is not responding please contact the system administrators'}\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport server from \"../services/Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../functions/alerts\"\r\nimport { status } from \"../components/Status\";\r\nimport { getValueCookie } from \"./cookieService\";\r\nconst baseURLAuth=server.url\r\n\r\n\r\nexport const getInformationNoData=async (route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    await axios.get(URL).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n       \r\n        responseBack={status:status.ServerFail,response:[]};\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n       // confirmCloseAlert('incorrect','Error in the Server Response: '+status.ServerFail.Description)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const getInformationWithData=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const create_Delete_Update_Information=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\n\r\n\r\nexport default {getInformationNoData,create_Delete_Update_Information,getInformationWithData}","import React, { Component } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport { MenuCompany } from \"../components/MenuCompanySelect\";\r\nimport \"../css/companyDash-style.css\"\r\nimport { getInformationWithData } from \"../services/CABE\";\r\n//import { OpenLobby } from '../functions/pagesFunction';\r\nimport { getValueCookie, setNewCookie } from \"../services/cookieService\";\r\nexport default class CompanyDashBoard extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            CompanysofUser: []\r\n        }\r\n    }\r\n\r\n    async getCompanysAssigned() {\r\n        const data = {\r\n            userName: getValueCookie('userName')\r\n        }\r\n        const info = await getInformationWithData('/company/CatalogueofCompanies', data)\r\n        if (info.status.code === 1) {\r\n            const temporal = this.state.General\r\n            temporal.CompanysofUser = info.data\r\n            this.setState({ General: temporal })\r\n            console.log(info)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async SelectCompany(company) {\r\n            setNewCookie('Company', company.name , 50)\r\n            setNewCookie('CompanyId',company.idCompany,50)\r\n            setNewCookie('CompanyLogo',company.directoryLogo,50)\r\n            setNewCookie('TypeUser',company.idTypeofUser,50)\r\n            window.location.reload()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"companydash\">\r\n                <button hidden id=\"catalogueOfCompanyActioner\" onClick={() => this.getCompanysAssigned()}></button>\r\n                <MenuCompany />\r\n                <div className=\"container-fluid generalContainer contPrincipal\" id=\"actualPage\">\r\n                    <div className=\"title\">\r\n                        <p className=\"text-center display-3\">Hello, please select a Company: </p>\r\n                    </div>\r\n                    <div className=\"container-fluid decoratorBar\"></div>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {\r\n                                    this.state.General.CompanysofUser.map((company, i) => (\r\n                                        <div key={i} className=\"contCompany\" onClick={() => this.SelectCompany(company)}>\r\n                                            <div className=\"titecompany text-center\">\r\n                                                <img src={company.directoryLogo} alt=\"logo\" />\r\n                                                <p>{company.name}<br /> <br /><br /><br /></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport \"../css/menu-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineReconciliation, AiOutlineClockCircle, AiOutlineHome, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle, AiOutlineAreaChart, AiTwotoneSnippets,AiFillDropboxSquare } from \"react-icons/ai\";\r\nimport { BiCartAlt } from \"react-icons/bi\";\r\nimport { TbBuildingWarehouse } from \"react-icons/tb\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { CloseCompanySession, OpenCycleInventory, OpenCycleInventoryGraph, OpenInventory,OpenPikingSystem, OpenKPIGraph, OpenLobby,OpenPurchaseOrder } from '../functions/pagesFunction';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport { BiExit } from \"react-icons/bi\";\r\nimport {BsBoxSeam} from \"react-icons/bs\"\r\nimport { getInformationWithData } from '../services/CABE';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            directoryLogo: getValueCookie('CompanyLogo'),\r\n            companyId: getValueCookie('CompanyId'),\r\n            typeUser: getValueCookie('TypeUser'),\r\n            enableModles:[],\r\n            needModlesCharge:true\r\n        },\r\n        Modules:{\r\n            ProductInfo:true,\r\n            CycleInventory:true,\r\n            KPI:true,\r\n            ReportGraphs:true\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    async AssignModules() {\r\n        const data = {\r\n            typeUser: this.state.General.typeUser,\r\n            companyId: this.state.General.companyId\r\n        }\r\n        const response = await getInformationWithData('/company/Modules', data)\r\n        \r\n        if (response.status.code === 1) {\r\n            const temporal=this.state.General\r\n            temporal.enableModles=response.data\r\n            this.setState({General:temporal})\r\n        }\r\n\r\n    }\r\n\r\n    async AssignStatesModules(){\r\n        if(this.state.General.needModlesCharge){\r\n            const temporal=this.state.General\r\n            temporal.needModlesCharge=false\r\n            const modules=this.state.Modules\r\n            await this.AssignModules()\r\n            \r\n            for (const element of this.state.General.enableModles) {\r\n                \r\n                switch(element.name){\r\n                    case 'Cycle Inventory':\r\n                        modules.CycleInventory=false\r\n                        break;\r\n                    case 'KPI':\r\n                        modules.KPI=false;\r\n                        break\r\n                    case 'Reports Graphs':\r\n                        modules.ReportGraphs=false;\r\n                        break\r\n                    case 'Product Information':\r\n                        modules.ProductInfo=false;\r\n                        break\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({General:temporal,Modules:modules})\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                                <button onClick={()=>this.AssignStatesModules()} className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\" aria-controls=\"offcanvasNavbar\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={() => OpenLobby()}>\r\n                                    <img src={this.state.General.directoryLogo} alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' /> Hi {getValueCookie('name')} {getValueCookie('surname')} <AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => OpenLobby()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"offcanvas offcanvas-start\" tabIndex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Menu Options</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => OpenLobby()}>Home <AiOutlineHome /></a>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Inventory management <AiOutlineReconciliation /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Products Information <BiCartAlt /></a></li>\r\n                                            <li hidden={this.state.Modules.CycleInventory} onClick={() => OpenCycleInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cyclical Inventory <AiOutlineClockCircle /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Warehouse management <TbBuildingWarehouse /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li  onClick={() => OpenPikingSystem()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Piking System<FaClipboardList /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Purchase Order <AiFillDropboxSquare /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenPurchaseOrder()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Purchase Order <BsBoxSeam /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n\r\n                                    <li hidden={(this.state.Modules.ReportGraphs&&this.state.Modules.KPI)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Reports <AiOutlineAreaChart /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ReportGraphs}  onClick={() => OpenCycleInventoryGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cyclical Inventory <AiOutlineClockCircle /></a></li>\r\n                                            <li hidden={this.state.Modules.KPI} onClick={() => OpenKPIGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">KPI (Key Performance Indicators) <AiTwotoneSnippets /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => CloseCompanySession()}>Close Company Session <BiExit /></a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => OpenLobby()}><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => closeSession()}><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default  class ProgressBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.progressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        min:0, \r\n        max:100,\r\n        value:0,\r\n        size:50\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setValue(95);\r\n    }\r\n\r\n    \r\n    configBar(min,max,size = 25){\r\n        this.setState({min:min});\r\n        this.setState({max:max});\r\n        this.setState({value:min});\r\n        this.setState({size:size});\r\n    }\r\n\r\n    setValue(valor){\r\n        if(valor>=this.state.min && valor <= this.state.max){ \r\n            this.setState({value:valor});\r\n        }else{\r\n            console.error('ERROR: La cantidad en la progress bar no esta dentro de los limites establecidos, revise el codigo de configuración');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"progress\" style={{height: this.state.size+\"px\"}} ref={this.progressBarRef}>\r\n                <div\r\n                    className=\"progress-bar progress-bar-striped progress-bar-animated bg-primary \"\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={this.state.value}\r\n                    aria-valuemin={this.state.min}\r\n                    aria-valuemax={this.state.max}\r\n                    style={{ width: this.state.value+\"%\" }}>\r\n                    {this.state.value}%\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Modal} from 'react-bootstrap'\r\nimport '../css/table-responsive.css'\r\nconst ModalOrders = (props) => {\r\n    return (\r\n      <>\r\n      \r\n        <Modal title={props.title} show={props.show} fullscreen={true} onHide={props.close}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className='container'>\r\n              {props.children}\r\n              </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n \r\nexport default ModalOrders;","export function formatInputDate(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('-')\r\n    if(arrayDate.length===3){\r\n    return arrayDate[1]+\"/\"+arrayDate[2]+\"/\"+arrayDate[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function formatInputDateQuery(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('T')\r\n    if(arrayDate.length===2){\r\n    const date2=arrayDate[0].split('-')\r\n    if(date2.length===3){\r\n        return date2[1]+\"/\"+date2[2]+\"/\"+date2[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function OrderArrayByDate(array){\r\n    for(let a=0;a<array.length;a++){\r\n        for(let b=0;b<(array.length-a-1);b++){\r\n            const date1=array[b].Date.split('/')\r\n            const date2=array[b+1].Date.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n            \r\n            if(date3>date4){\r\n                var temp=Object.assign({},array[b])\r\n                array[b]=Object.assign({},array[b+1])\r\n                array[b+1]=Object.assign({},temp)\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\nexport function CompareDates(datesta,dateend){\r\n    \r\n            const date1=datesta.split('/')\r\n            const date2=dateend.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n           \r\n            if(date3<=date4){\r\n                return true\r\n            }\r\n\r\n            return false\r\n        }\r\n  \r\n\r\n    }\r\n\r\nexport function FormatQueryReturnDate(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        var div2=div[0].split('-')\r\n        if(div2.length===3){\r\n            return div2[1]+\"/\"+div2[2]+\"/\"+div2[0]\r\n        }else{\r\n            return \"\"\r\n        }\r\n\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function FormatQueryReturnDateWithDash(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        return div[0].split('-')\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function getDateFromReports(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"-\"+datenow.getDate()+\"-\"+datenow.getFullYear()\r\n}\r\n\r\nexport function getDateYearMonthDayDash(){\r\n    const datenow=new Date()\r\n    return datenow.getFullYear()+'-'+(datenow.getMonth()+1)+\"-\"+datenow.getDate()\r\n}\r\n\r\nexport function ActualDate(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"/\"+datenow.getDate()+\"/\"+datenow.getFullYear()\r\n}\r\nexport function getActualDateUTC(){\r\n    const datenow=new Date()\r\n    return datenow.toISOString()\r\n}\r\n\r\n\r\nexport default {formatInputDate,OrderArrayByDate,FormatQueryReturnDate,ActualDate,getActualDateUTC,formatInputDateQuery,FormatQueryReturnDateWithDash,\r\n    getDateYearMonthDayDash,CompareDates}","export function getDataSet(info, headers,keys) {\r\n    var dataset = [{\r\n        columns: [],\r\n        data: []\r\n    }]\r\n   \r\n    for (const column of headers) {\r\n        const data = {\r\n            title: column, width: { wch: 10 },\r\n            style: {\r\n                fill: {\r\n                    patternType: \"solid\",\r\n                    fgColor: { rgb: \"000000\" },\r\n                    bgColor: { rgb: \"FFFFFF\" }\r\n                },\r\n                font:{\r\n                    color:{rgb:\"FFFFFF\"}\r\n                }\r\n            }\r\n        }\r\n\r\n        dataset[0].columns.push(data)\r\n    }\r\n\r\n    for(const data of info){\r\n        var temp=[]\r\n        for (const key of keys) {\r\n            const col= {\r\n                value: String(data[key]),\r\n                style: {\r\n                    font: {sz: \"10\"},\r\n                    alignment:{horizontal:\"left\"}\r\n                }\r\n            }\r\n            temp.push(col)\r\n        }\r\n    dataset[0].data.push(temp)\r\n\r\n    }\r\n\r\n    return dataset\r\n}\r\n\r\nexport default {getDataSet}","import ReactExport from 'react-data-export';\r\nimport React from 'react';\r\nimport {AiFillFileExcel } from \"react-icons/ai\"\r\nconst ExcelFile = ReactExport.ExcelFile\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet\r\n\r\nconst ExcelDocument=(props)=>{\r\n    return(\r\n        <>\r\n        \r\n        <ExcelFile  element={<button type=\"button\" hidden={props.hidden} className=\"btn btn-success btn-lg w-100 h-100\">Download Report In XLSX <AiFillFileExcel/></button>} filename={props.archname}>\r\n            <ExcelSheet dataSet={props.data} name={props.sheetname}/>\r\n        </ExcelFile>\r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExcelDocument","import React, { Component } from 'react'\r\nimport ProgressBar from '../components/ProgressBar'\r\nimport { AiOutlineSearch, AiFillCalendar } from \"react-icons/ai\"\r\nimport '../css/table-responsive.css'\r\nimport '../css/general-style.css'\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { automaticCloseAlert } from '../functions/alerts'\r\nimport { CompareDates, formatInputDate, formatInputDateQuery, FormatQueryReturnDate, FormatQueryReturnDateWithDash, getActualDateUTC, getDateFromReports, getDateYearMonthDayDash, OrderArrayByDate } from '../functions/dateFormat'\r\nimport { getDataSet } from '../functions/generateDataSetExcel'\r\nimport ExcelDocument from '../components/ExcelDocument'\r\n\r\n\r\n\r\nexport default class CycleInvetory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ProgrressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        dataset: [{\r\n            columns: [],\r\n            data: []\r\n        }],\r\n        porcetaje: 0,\r\n        General: {\r\n            showModal1: false,\r\n            showModal2: false,\r\n            showModal3: false,\r\n            showModal4: false,\r\n            habilitar: false,\r\n            chekvalue: '0',\r\n            checkHistory: '0',\r\n            selectedItem: '',\r\n            selectedCycleInventory: null,\r\n            secureTransaction: false,\r\n            generalHistory: [],\r\n            outBounds: [],\r\n            purchaseOrders: [],\r\n            generalHistoryFilter: [],\r\n            oldCycleInventory: [],\r\n            detailOldCycleSelected: [],\r\n            detailOldCycleSelectedFilter: []\r\n        },\r\n\r\n        cycleInventoryStorage: {\r\n            Header: {\r\n                closeBy: null,\r\n                createBy: '',\r\n                days: 0,\r\n                finishDate: '',\r\n                id: 0,\r\n                lastUpadeDate: '',\r\n                realFinishDate: '',\r\n                startDate: '',\r\n                status: 0,\r\n                updateBy: '',\r\n                QuantityItems:0,\r\n                FilterQuantity:0\r\n            },\r\n            Detail: [],\r\n            DetailFilter: [],\r\n            CheckedItems: []\r\n        }\r\n\r\n    }\r\n    valueSearchBar = async e => {\r\n        let search = e.target.value\r\n        this.getBySearchBar(search)\r\n    }\r\n\r\n    valueRadioButton = async e => {\r\n        document.getElementById('searchCycleInv1').value = \"\"\r\n        let stat = e.target.value\r\n        const temporal = this.state.General\r\n        temporal.chekvalue = stat\r\n        this.setState({ General: temporal })\r\n        this.getByStat(stat)\r\n    }\r\n\r\n\r\n\r\n    searchOlderCycleInventoryDetail = e => {\r\n        let search = e.target.value\r\n\r\n\r\n        var DetailFilter = this.state.General.detailOldCycleSelected.filter((item) => {\r\n            if (item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.status.toString().toLowerCase().includes(search.toLowerCase())) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        \r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelectedFilter = DetailFilter\r\n        \r\n        this.setState({ General: temporal})\r\n    }\r\n\r\n\r\n\r\n    getBySearchBar(search) {\r\n        console.log(search)\r\n        if (search !== \"\" && this.state.General.chekvalue !== '-1') {\r\n            if (this.state.General.chekvalue==='0'||this.state.General.chekvalue==='1'){\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(this.state.General.chekvalue)) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            \r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter\r\n            temporal.Header.FilterQuantity=DetailFilter.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }else if(this.state.General.chekvalue==='2'){\r\n            var DetailFilter4 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(\"1\")&&item.difference!==0) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            \r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter4\r\n            temporal.Header.FilterQuantity=DetailFilter4.length\r\n            this.setState({ cycleInventoryStorage: temporal }) \r\n        }\r\n        } else if (search !== \"\") {\r\n            \r\n            var DetailFilter2 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase()))) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter2\r\n            temporal.Header.FilterQuantity=DetailFilter2.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n\r\n        } else {\r\n            this.getByStat(this.state.General.chekvalue)\r\n        }\r\n\r\n    }\r\n\r\n    getByStat(stat) {\r\n        if (stat !== \"-1\") {\r\n            if(stat===\"0\"||stat===\"1\"){\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.status.toString().toLowerCase().includes(stat.toLowerCase())) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            const temporal = this.state.cycleInventoryStorage\r\n\r\n            temporal.DetailFilter = DetailFilter\r\n            temporal.Header.FilterQuantity=DetailFilter.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }else if (stat===\"2\"){\r\n           \r\n            var DetailFilter3 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.difference!==0) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            const temporal = this.state.cycleInventoryStorage\r\n\r\n            temporal.DetailFilter = DetailFilter3\r\n            temporal.Header.FilterQuantity=DetailFilter3.length\r\n            this.setState({ cycleInventoryStorage: temporal }) \r\n        \r\n        }\r\n\r\n            \r\n        } else {\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = temporal.Detail\r\n            temporal.Header.FilterQuantity=temporal.Detail.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCategory(stat) {\r\n        var busqueda = \"\"\r\n        switch (stat) {\r\n            case \"0\":\r\n                busqueda = \"purchase\"\r\n                break;\r\n            case \"1\":\r\n                busqueda = \"transferencia\"\r\n                break;\r\n            case \"2\":\r\n                busqueda = \"ajuste\"\r\n                break;\r\n            case \"3\":\r\n                busqueda = \"outbound\"\r\n                break;\r\n            default:\r\n                busqueda = \"\"\r\n                break;\r\n        }\r\n        return busqueda;\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        this.ProgrressBarRef.current.setValue(0);\r\n\r\n    }\r\n\r\n    async getLastCycleInventory() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const route = '/inventory/lastCycle/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header = datos.data[0]\r\n\r\n                if (temporal.Header.status === 0) {\r\n                    \r\n                    await this.getDetailCycleInventory(temporal.Header.id, \"actual\")\r\n                } else {\r\n                    temporal.Detail = []\r\n                    temporal.DetailFilter = []\r\n                    await this.setState({ cycleInventoryStorage: temporal })\r\n                }\r\n            } else {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header.status = 1\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async getOldCycleInventory() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const route = '/invertory/oldCycleInventorys/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = datos.data\r\n                await this.setState({ General: temporal })\r\n\r\n            } else {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = []\r\n                await this.setState({ General: temporal })\r\n            }\r\n        }\r\n    }\r\n\r\n    mergeDataCheck(arrayChecked, allArray) {\r\n\r\n        for (let a = 0; a < arrayChecked.length; a++) {\r\n            for (let b = 0; b < allArray.length; b++) {\r\n                if (arrayChecked[a].ItemCode === allArray[b].ItemCode && arrayChecked[a].BIN === allArray[b].BIN && arrayChecked[a].status === 1) {\r\n                    allArray[b] = arrayChecked[a]\r\n                    break\r\n                }\r\n            }\r\n\r\n        }\r\n        return allArray\r\n    }\r\n\r\n\r\n    async getDetailCycleInventory(id, type) {\r\n        const data = {\r\n            id: id,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (type === \"actual\") {\r\n            const route2 = '/inventory/allProductsCycle/post';\r\n            const allinformation = await getInformationWithData(route2, data)\r\n\r\n            if (datos.status.code === 1 && allinformation.status.code === 1) {\r\n                const realData = this.mergeDataCheck(datos.data, allinformation.data)\r\n                \r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Detail = realData\r\n                temporal.DetailFilter = realData\r\n                temporal.Header.QuantityItems=realData.length\r\n                temporal.Header.FilterQuantity=realData.length\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                const tempo = this.state.cycleInventoryStorage\r\n                tempo.CheckedItems = await this.getCheckedItems()\r\n                await this.setState({ cycleInventoryStorage: tempo })\r\n                await this.getByStat('0')\r\n                await this.completePercentage()\r\n            }\r\n        } else if (type === \"old\") {\r\n            const temporal = this.state.General\r\n            temporal.detailOldCycleSelected = datos.data\r\n            temporal.detailOldCycleSelectedFilter = datos.data\r\n            await this.setState({ General: temporal })\r\n        }\r\n\r\n    }\r\n    getOldDetailCycleInventory(item) {\r\n        const temporal = this.state.General\r\n        temporal.selectedCycleInventory = item\r\n        this.setState({ General: temporal })\r\n        this.getDetailCycleInventory(item.id, \"old\")\r\n    }\r\n\r\n\r\n    enableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    async disableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = true\r\n        await this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async startNewCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            days: 0,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            userName: getValueCookie('userName'),\r\n            realDays:0\r\n        }\r\n        await Swal.fire({\r\n            title: 'Number of Days of Cyclical Inventory',\r\n            input: 'number',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Confirm',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async (days) => {\r\n                data.days = days\r\n                var actualDate = new Date();\r\n                var finishDate = new Date(actualDate.getTime() + Number(Number(days) * 86400000))\r\n                var habilDays=0\r\n                while (actualDate<=finishDate){\r\n                    if(actualDate.getDay()===0||actualDate.getDay()===6){\r\n                        habilDays++\r\n                    }\r\n                    actualDate=new Date(actualDate.getTime()+86400000)\r\n                }\r\n                \r\n                data.realDays=Number(data.days)+Number(habilDays)\r\n                return await create_Delete_Update_Information('/invertory/newCycle/post', data)\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n\r\n            if (result.isConfirmed) {\r\n                await this.getLastCycleInventory()\r\n                await Swal.fire({\r\n                    title: `The Cyclical Inventory was created!`,\r\n                })\r\n\r\n            }\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    async endCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            userName: getValueCookie('userName')\r\n        }\r\n        await Swal.fire({\r\n            title: 'Do you want to end the actual Cyclical Inventory?',\r\n            showDenyButton: true,\r\n            backdrop:true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    const res = await create_Delete_Update_Information('/invertory/closeCycle/post', data)\r\n                    if (res.status.code === 1) {\r\n                        await this.getLastCycleInventory()\r\n                        Swal.fire('Cyclical inventory are closed!', '', 'success')\r\n                        this.setState({ porcetaje: 0 })\r\n                        this.ProgrressBarRef.current.setValue(0);\r\n\r\n                    } else {\r\n                        Swal.fire('Cyclical inventory could not be closed', '', 'error')\r\n                    }\r\n\r\n                } else if (result.isDenied) {\r\n                    Swal.fire('Changes are not saved', '', 'info')\r\n                }\r\n            }\r\n\r\n        })\r\n        this.enableTransaction()\r\n    }\r\n\r\n    async setCycleInventoryDetailInfo(item, idQuant) {\r\n        this.disableTransaction()\r\n        const data={\r\n            ItemCode:item.ItemCode,\r\n            BIN:item.BIN,\r\n            company:getValueCookie('Company')\r\n        }\r\n\r\n        const resultquant= await getInformationWithData('/invertory/getQuantity/post',data)\r\n        if(resultquant.status.code===1){\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        var flag = true\r\n        if (index !== -1) {\r\n\r\n            if (temporal.Detail[index].idcycleInventoryHeader !== 0) {\r\n                flag = false\r\n            }\r\n\r\n            temporal.Detail[index].idcycleInventoryHeader = this.state.cycleInventoryStorage.Header.id\r\n            \r\n            temporal.Detail[index].countBy = getValueCookie('userName')\r\n            temporal.Detail[index].date = getActualDateUTC()\r\n            temporal.Detail[index].systemQuantity=resultquant.data[0].Quantity\r\n            temporal.Detail[index].difference = temporal.Detail[index].realQuantity - resultquant.data[0].Quantity\r\n            temporal.Detail[index].status = 1\r\n            var response\r\n            if (flag) {\r\n                response = await create_Delete_Update_Information('/invertory/insertDetailCycle/post', temporal.Detail[index])\r\n            } else {\r\n                response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n            }\r\n            if (response.status.code === 1) {\r\n\r\n                automaticCloseAlert('correct', 'The item was check!')\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                await this.completePercentage()\r\n            } else {\r\n                automaticCloseAlert('incorrect', 'The item was not checked')\r\n            }\r\n        }\r\n        const tempo = this.state.cycleInventoryStorage\r\n        tempo.CheckedItems = await this.getCheckedItems()\r\n        await this.setState({ cycleInventoryStorage: tempo })\r\n        await this.enableTransaction()\r\n        }\r\n\r\n    }\r\n\r\n    async updateCycleInventoryDetail(item) {\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        if (index !== -1) {\r\n            temporal.Detail[index].countBy = null\r\n            temporal.Detail[index].status = 0\r\n            await this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n    completePercentage() {\r\n        this.setState({ porcetaje: 0 })\r\n        var count = 0;\r\n        var total = this.state.cycleInventoryStorage.Detail.length\r\n\r\n        for (const item of this.state.cycleInventoryStorage.Detail) {\r\n            if (item.status === 1)\r\n                count++\r\n        }\r\n\r\n        for (let a = 0; a < ((count * 100) / total); a++) {\r\n            this.addValue()\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    textStatus(value) {\r\n        if (value === 0) {\r\n            return \"Not checked\"\r\n        }\r\n        return \"Checked\"\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    addValue() {\r\n        let cantidad = this.state.porcetaje;\r\n        cantidad++;\r\n        this.setState({ porcetaje: cantidad });\r\n        this.ProgrressBarRef.current.setValue(cantidad);\r\n    }\r\n\r\n    handleModalOpen = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = true\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    handleModalClose = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async openOlCycleInventory() {\r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelected = []\r\n        temporal.detailOldCycleSelectedFilter = []\r\n        temporal.selectedCycleInventory = null\r\n        this.setState({ General: temporal })\r\n        this.getOldCycleInventory()\r\n        await this.handleModalOpen(\"showModal2\")\r\n    }\r\n\r\n    async getInfoProduct() {\r\n        var date1 = formatInputDate(document.getElementById('searchHistoryCycleInvDate1').value)\r\n        var date2 = formatInputDate(document.getElementById('searchHistoryCycleInvDate2').value)\r\n        const data = {\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            Start: date1,\r\n            End: date2,\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId')\r\n        }\r\n        const data2={\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            date:date1\r\n        }\r\n        const data3={\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            date:date2\r\n        }\r\n\r\n        //AQUI COLOCAR LAS LLAMADAS A LOS DATOS\r\n        //const route = '/invertory/getGeneralHistory/post';\r\n        const generalHistoryData = await getInformationWithData('/invertory/getGeneralHistory/post', data)\r\n        const pickList = await getInformationWithData('/pickList/history/getByItemCode', data)\r\n        \r\n        const transfer = await getInformationWithData('/transfer/history/getByItemCode', data)\r\n        const purchase = await getInformationWithData('/purchase/history/getByItemCode', data)\r\n        const adjust = await getInformationWithData('/adjustment/history/getByItemCode', data)\r\n        const InventStart=await getInformationWithData('/Items/getQuantityHistory',data2)\r\n        const InventEnd=await getInformationWithData('/Items/getQuantityHistory',data3)\r\n        \r\n        if (InventStart.status.code===1&&InventEnd.status.code===1&&generalHistoryData.status.code === 1 && pickList.status.code === 1 && transfer.status.code === 1 && purchase.status.code === 1 && adjust.status.code === 1) {\r\n            const Inv2Start=await this.DeleteRepeatBins(data2,InventStart.data)\r\n            const Inv2End=await this.DeleteRepeatBins(data3,InventEnd.data)\r\n            const InvStart=this.getDataMayorInventory(Inv2Start,'Start')\r\n            const InvEnd=this.getDataMayorInventory(Inv2End,'End')\r\n            \r\n            await this.consolidateTable(pickList.data, purchase.data, transfer.data, adjust.data, generalHistoryData.data,InvStart,InvEnd)\r\n        }\r\n    }\r\n\r\n   async DeleteRepeatBins(data,information){\r\n    const result=await getInformationWithData('/inventory/getDeletedBins/post',data)\r\n    if(result.status.code===1){\r\n        \r\n        for(let it of result.data) {\r\n            for (let a = information.length-1; a >= 0; a--) {\r\n                if(information[a].BIN===it.BIN&&CompareDates(formatInputDateQuery(information[a].fech),formatInputDateQuery(it.date))){\r\n                    information.splice(a,1)\r\n                }\r\n            }\r\n        }\r\n        \r\n        return information\r\n    }else{\r\n        return []\r\n    }\r\n   }\r\n    getDataMayorInventory(data,type){\r\n       var information=[]\r\n       for (const it of data) {\r\n            const index=information.findIndex(element=>{\r\n                return String(element.BIN).toLowerCase()===it.BIN.toLowerCase()\r\n            })\r\n            if(index===-1){\r\n                if(type==='Start'){\r\n                it.Type='Inventory Start'\r\n                }else{\r\n                it.Type='Inventory End'\r\n                }\r\n                information.push(it)\r\n            }\r\n       } \r\n\r\n\r\n       return information\r\n    }\r\n\r\n\r\n\r\n    async consolidateTable(outbounds, purchase, transfers, adjusts, generalHistory,InvStart,InvEnd) {\r\n\r\n\r\n        var InfoArray = []\r\n\r\n        for (const row of generalHistory) {\r\n            if (row.Categoria !== \"General\") {\r\n                const structure = {\r\n                    Type: '',\r\n                    NoOrder: '',\r\n                    Description:'',\r\n                    BIN: '',\r\n                    BIN2: '',\r\n                    QuantityOrder: '',\r\n                    QuantityShipped: '',\r\n                    User: '',\r\n                    Date: ''\r\n                }\r\n                structure.Type = row.Categoria\r\n                structure.NoOrder = row.OrderNumber\r\n                structure.Description=row.description\r\n                structure.BIN = row.BIN\r\n                structure.BIN2 = row.BIN2\r\n                structure.QuantityOrder = row.OldQuantity\r\n                structure.QuantityShipped = row.NewQuantity\r\n                structure.User = row.username\r\n                structure.Date = row.Date2\r\n                InfoArray.push(structure)\r\n            }\r\n\r\n        }\r\n\r\n        for (const row of outbounds) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: '',\r\n                CustomerName:'',\r\n                CustomerNo:''\r\n            }\r\n            console.log(row)\r\n            structure.CustomerName=row.Cliente \r\n            structure.CustomerNo=row.NoCliente\r\n            structure.Type = row.Type\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.Description=row.description\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.QuantityOrder\r\n            structure.QuantityShipped = row.QuantityShipped\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n            \r\n        }\r\n\r\n        for (const row of transfers) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.Description=row.description\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BINSalida\r\n            structure.BIN2 = row.BINEntrada\r\n            structure.QuantityOrder = row.Quantity\r\n            structure.QuantityShipped = null\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of purchase) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: '',\r\n                CustomerName:'',\r\n                CustomerNo:''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.CustomerNo=row.VendorNo\r\n            structure.CustomerName=row.VendorName\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.BIN = row.BIN\r\n            structure.Description=row.description\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.Quantity\r\n            structure.QuantityShipped = null\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of adjusts) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.OldQuantity\r\n            structure.QuantityShipped = row.NewQuantity\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n\r\n\r\n        var n = await OrderArrayByDate(InfoArray)\r\n        for (const item of InvStart) {\r\n            n.unshift(item)\r\n        }\r\n        for (const item of InvEnd) {\r\n            n.push(item)\r\n        }\r\n\r\n        const temporal = this.state.General\r\n        temporal.generalHistory = n\r\n        temporal.generalHistoryFilter = n\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async getGeneralHistory(itemCode) {\r\n        const temporal = this.state.General\r\n        temporal.selectedItem = itemCode\r\n        temporal.generalHistory = []\r\n        temporal.generalHistoryFilter = []\r\n        const data = {\r\n            ItemCode: itemCode.ItemCode,\r\n            company:getValueCookie('Company'),\r\n            Date: FormatQueryReturnDate(this.state.cycleInventoryStorage.Header.startDate)\r\n        }\r\n\r\n        const val = await getInformationWithData('/pickList/history/getOutBound', data)\r\n        //const val2 = await getInformationWithData('/purchase/history/getFutureByItemCode', data)\r\n        if (val.status.code === 1) {\r\n            temporal.outBounds = val.data\r\n\r\n        }\r\n\r\n       /* if (val2.status.code === 1) {\r\n            temporal.purchaseOrders = val2.data\r\n\r\n        }\r\n        */\r\n\r\n        this.setState({ General: temporal })\r\n        await this.handleModalOpen(\"showModal3\")\r\n    }\r\n\r\n    async updateSystemQuantity(item) {\r\n\r\n        this.setState({ secureTransaction: true })\r\n        Swal.fire({\r\n            title: 'For this Action you need a User and  Password Admin. Please enter it to continue:',\r\n            html: `<input type=\"text\" id=\"loginChangeQuantity\" class=\"swal2-input\" placeholder=\"Username\">\r\n  <input type=\"password\" id=\"passwordChangeQuantity\" class=\"swal2-input\" placeholder=\"Password\">`,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Continue',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const login = Swal.getPopup().querySelector('#loginChangeQuantity').value\r\n                const password = Swal.getPopup().querySelector('#passwordChangeQuantity').value\r\n                if (!login || !password) {\r\n                    Swal.showValidationMessage(`Please enter login and password`)\r\n                } else if (login === \"diego.perez\" && password === \"Diego1560\") {\r\n                    automaticCloseAlert('correct', 'The Quantity has been updated!')\r\n                } else {\r\n                    automaticCloseAlert('incorrect', 'Username or password are invalid!')\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        this.setState({ secureTransaction: false })\r\n    }\r\n\r\n    async getCheckedItems() {\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        return datos.data\r\n    }\r\n\r\n    generateInfo() {\r\n\r\n        let proccessInfo = JSON.parse(JSON.stringify(this.state.cycleInventoryStorage.CheckedItems))\r\n        const headerKeys = ['ItemCode', 'productLine', 'Description', 'realQuantity', 'BIN', 'systemQuantity', 'difference', 'countBy', 'date', 'status', 'comentary']\r\n        for (const item of proccessInfo) {\r\n            for (const head of headerKeys) {\r\n                if (head !== \"status\") {\r\n                    if (item[head] === null || item[head] === \"null\") {\r\n                        item[head] = \"\"\r\n                    } else if (head === \"date\") {\r\n                        item[head] = FormatQueryReturnDate(item[head])\r\n                    }\r\n                } else {\r\n                    if (item[head] === 0) {\r\n                        item[head] = \"Not checked\"\r\n                    } else {\r\n                        item[head] = \"Checked\"\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        var info = getDataSet(proccessInfo,\r\n            ['Item Code', 'Product Line', 'Description', 'Quantity', 'BIN', 'System Quantity', 'Difference', 'Counted By', 'Date', 'Status', 'Comments'],\r\n            headerKeys)\r\n        //this.setState({dataset:info})\r\n        return info\r\n    }\r\n\r\n    async addComentary(item) {\r\n        this.disableTransaction()\r\n        var comm = \"\"\r\n        if (item.comentary) {\r\n            comm = item.comentary\r\n        }\r\n\r\n\r\n        Swal.fire({\r\n            title: 'Product: ' + item.ItemCode + ' \\nBIN: ' + item.BIN,\r\n            html: `<div class='textAreaGeneral textAreaComment'>\r\n                    <textarea id='comentOfCycleInventoryDifference' rows=\"10\" cols=\"50\">${comm}</textarea>\r\n                   </div>\r\n            `,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Save Commentary',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const coment = Swal.getPopup().querySelector('#comentOfCycleInventoryDifference').value\r\n                const temporal = this.state.cycleInventoryStorage\r\n                const index = temporal.Detail.indexOf(item)\r\n                if (index !== -1) {\r\n                    temporal.Detail[index].comentary = coment\r\n                    const response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n                    if (response.status.code === 1) {\r\n                        automaticCloseAlert('correct', 'The comment was save!')\r\n                        await this.setState({ cycleInventoryStorage: temporal })\r\n                    } else {\r\n                        automaticCloseAlert('incorrect', 'The comment was not save')\r\n                    }\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    onChangeQuantity=(item,e)=>{\r\n        const temp=this.state.cycleInventoryStorage\r\n        const index=temp.Detail.indexOf(item)\r\n        if(index!==-1){\r\n            temp.Detail[index].realQuantity = Number(e.target.value)\r\n        }\r\n    }\r\n\r\n    addDifferenceSymbol(diff){\r\n        if(diff<0){\r\n            return \"\"\r\n        }else{\r\n            return \"+\"\r\n        }\r\n    }\r\n    RemainingDays(date){\r\n        var actual=getDateYearMonthDayDash()\r\n        var start=FormatQueryReturnDateWithDash(date)\r\n        var date3=new Date(start)\r\n        var date4=new Date(actual)\r\n        var difference= Math.abs(date4-date3);\r\n        var preliminarDays=difference/(1000 * 3600 * 24)\r\n        var inhDays=0\r\n        while(date4<=date3){\r\n            if(date4.getDay()===0||date4.getDay()===6){\r\n                inhDays++\r\n            }\r\n            date4=new Date(date4.getTime()+86400000)\r\n        }\r\n       \r\n        return preliminarDays-inhDays+1\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='inventoryCycle'>\r\n                <button hidden id='actionatorCycleInventory' onClick={() => this.getLastCycleInventory()}></button>\r\n                <p className='text-center display-1 pb-2' >Cyclical Inventory</p>\r\n                <div>\r\n\r\n                    <div className='row pb-2'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-5'>\r\n                                    <button className='btn btn-primary btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 0} onClick={() => this.startNewCycleInventory()}> Start Cyclical Inventory</button>\r\n                                    <button className='btn btn-danger btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 1} onClick={() => this.endCycleInventory()}> End Cyclical Inventory</button>\r\n                                </div>\r\n\r\n                                <div className='col-5'><button className='btn btn-success btn-lg w-100' onClick={() => this.openOlCycleInventory()} > Open Olds Cyclical Inventory</button></div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div hidden={this.state.cycleInventoryStorage.Header.status !== 0} className='row pb-2 pt-3'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5'><p className='display-6'>Start Date: {formatInputDateQuery(this.state.cycleInventoryStorage.Header.startDate)}</p></div>\r\n                            <div className='col-5'><p className='display-6'>Proposed end date: {formatInputDateQuery(this.state.cycleInventoryStorage.Header.finishDate)}</p></div>\r\n                            <div className='col-1'></div>\r\n                            </div>\r\n                            <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5'><p className='display-6'>Estimated number of days: {this.state.cycleInventoryStorage.Header.days}</p></div>\r\n                            <div className='col-5'><p className='display-6'>Remaining days: {isNaN(this.RemainingDays(this.state.cycleInventoryStorage.Header.finishDate))?'-':this.RemainingDays(this.state.cycleInventoryStorage.Header.finishDate)}</p></div>\r\n                            \r\n                            <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='row pb-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Inventory complete:</p>\r\n                            <ProgressBar ref={this.ProgrressBarRef} />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" autoComplete='off' className=\"form-control\" placeholder='Search by ItemCode, BIN, Description, Category, UPC ...' id='searchCycleInv1' onChange={this.valueSearchBar} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n                            <div className='row fw-bold'>\r\n                                <div className='col-4'></div>\r\n                                <div className='col-4'>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"-1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"-1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            All items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"0\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"0\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            No Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"2\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"2\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Differences\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-4'></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n\r\n                            <ExcelDocument hidden={this.state.cycleInventoryStorage.Header.status === 1} data={this.generateInfo()} sheetname={\"CycleInventoryDetail\"} archname={\"CYCLICAL INVENTORY NO \" + this.state.cycleInventoryStorage.Header.id + \" COMPANY \" + getValueCookie('Company') + \" DATE \" + getDateFromReports()} ></ExcelDocument>\r\n\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Items</p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pt-2 pb-2'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <div className='row'>\r\n                                <div className='col-6'><p className='display-5'>Total items: {this.state.cycleInventoryStorage.Header.QuantityItems}</p></div>\r\n                                <div className='col-6'><p className='display-5'>Total search result: {this.state.cycleInventoryStorage.Header.FilterQuantity}</p></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Product Line</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.cycleInventoryStorage.DetailFilter.map((item, i) => (\r\n                                        <tr key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.productLine}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td><input disabled={item.status === 1} type=\"number\" key={item.realQuantity} defaultValue={item.realQuantity} id={\"realQuantityCycleInv_\" + item.id} className=\"form-control text-end\" onChange={(e)=>this.onChangeQuantity(item,e)} /></td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td><button type=\"button\" className=\"btn btn-secondary btn-lg\" onClick={() => this.addComentary(item)} disabled={this.state.General.secureTransaction || item.status === 0}>Add Comments</button></td>\r\n                                            <td className='text-center'>\r\n                                                <button type=\"button\" className=\"btn btn-success btn-lg\" disabled={this.state.General.secureTransaction} onClick={() => this.setCycleInventoryDetailInfo(item, \"realQuantityCycleInv_\" + item.id,)} hidden={item.status === 1}>Check</button>\r\n                                                <button type=\"button\" className=\"btn btn-danger btn-lg\" disabled={this.state.General.secureTransaction} onClick={() => this.updateCycleInventoryDetail(item)} hidden={item.status === 0}>Change</button>\r\n                                            </td>\r\n                                            <td className='text-center'><button onClick={() => this.getGeneralHistory(item)} type=\"button\" className=\"btn btn-info btn-lg\">Detail</button></td>\r\n                                            <td className='text-center'><button disabled={this.state.General.secureTransaction} onClick={() => this.updateSystemQuantity(item)} type=\"button\" className=\"btn btn-warning btn-lg\" hidden={item.status === 0}>Update Inventory</button></td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <ModalOrders title={'Old Cyclical Inventory'} show={this.state.General.showModal2} close={(modal = \"showModal2\") => this.handleModalClose(modal)}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12 display-5 pb-3'>\r\n                            <p >Select an old Cyclical Inventory to see they detail:</p>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='bg-dark text-light'>\r\n                                        <th className='text-center bg-dark'>Id</th>\r\n                                        <th className='text-center bg-dark'>Start Date</th>\r\n                                        <th className='text-center bg-dark'>Estimated Date to finish</th>\r\n                                        <th className='text-center bg-dark'>Real Finish Date</th>\r\n                                        <th className='text-center bg-dark'>Days</th>\r\n                                        <th className='text-center bg-dark'>Create By</th>\r\n                                        <th className='text-center bg-dark'>Close By</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {\r\n                                        this.state.General.oldCycleInventory.map((item, i) => (\r\n                                            <tr className={this.state.General.selectedCycleInventory === item ? 'bg-warning text-center' : 'text-center'} onClick={() => this.getOldDetailCycleInventory(item)} key={i}>\r\n                                                <td>{item.id}</td>\r\n                                                <td>{item.startDate2}</td>\r\n                                                <td>{item.finishDate2}</td>\r\n                                                <td>{item.realFinishDate2}</td>\r\n                                                <td>{item.realQuantityDays}</td>\r\n                                                <td>{item.createBy}</td>\r\n                                                <td>{item.closeBy}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                        <div className='col-12 display-5 '>\r\n                            <p >Detail:</p>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" className=\"form-control\" placeholder='Search by BIN, Description, Date...' id='searchOldCycleInv' onChange={this.searchOlderCycleInventoryDetail} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3 text-center'>\r\n                            <div className='row h4'>\r\n                                <div className='col correctCount2'>Exact difference</div>\r\n                                <div className='col negativeCount2'>Negative difference</div>\r\n                                <div className='col positiveCount2'>Positive difference</div>\r\n                                <div className='col notcounted2'>Item not counted</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12'>{/*Here we need specific information*/}</div>\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Comments</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.detailOldCycleSelectedFilter.map((item, i) => (\r\n                                        <tr className={item.status === 0 ? 'notcounted' : item.difference < 0 ? 'negativeCount' : item.difference === 0 ? 'correctCount' : 'positiveCount'} key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.realQuantity}</td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td>{item.comentary === 'null' ? '-' : item.comentary}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n                <ModalOrders title={'Detail of Product'} show={this.state.General.showModal3} close={(modal = \"showModal3\") => this.handleModalClose(modal)}>\r\n                    \r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Item Code:</p>\r\n                                </div>\r\n                                <div className='col-12 text-start'>\r\n                                    <p className='fw-bold'>{this.state.General.selectedItem.ItemCode}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12 justifyText'>\r\n                                    <p>{this.state.General.selectedItem.Description}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-center'>\r\n                            <img className=' pt-4 detailIMG' src='/assets/notavailable.png' alt='Company' />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n\r\n                    <div className='row text-start pt-5'>\r\n                        <div className='col-12 fs-5'>\r\n                            <p className='text-danger fw-bold'>Current Orders who maybe affect the current physical inventory</p>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>No Order</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order</th>\r\n                                        <th className='bg-dark'>Quantity Shipped</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.outBounds.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.OrderNo}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.QuantityOrdered}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n                                    {/*this.state.General.purchaseOrders.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.OrdenNo}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.Quantity}</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                    ))\r\n                                        */\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate1' />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate2' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-5'></div>\r\n                        <div className='col-2'>\r\n                            <button className='btn btn-danger btn-lg' onClick={() => this.getInfoProduct()}>Search</button>\r\n                        </div>\r\n                        <div className='col-5'></div>\r\n                    </div>\r\n                    <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Search Result:</p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                    <div className='row'>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>No Order</th>\r\n                                        <th hidden={getValueCookie('CompanyId')==='2'} className='bg-dark'>Customer No</th>\r\n                                        <th hidden={getValueCookie('CompanyId')==='2'}  className='bg-dark'>Customer Name</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>New BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order/<br />Old Quantity</th>\r\n                                        <th className='bg-dark'>Quantity Shipped/<br/>New Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Username</th>\r\n                                        <th className='bg-dark'>Date</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.generalHistoryFilter.map((item, i) => (\r\n                                        <tr className={'text-center '+((item.Type==='Inventory Start'||item.Type==='Inventory End')?(item.Type==='Inventory Start'?'correctCount':'positiveCount'):'')} key={i}>\r\n                                            <td className='text-start'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.NoOrder}</td>\r\n                                            <td hidden={getValueCookie('CompanyId')==='2'} className='text-start'>{item.CustomerNo}</td>\r\n                                            <td hidden={getValueCookie('CompanyId')==='2'} className='text-start'>{item.CustomerName}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.BIN2}</td>\r\n                                            <td>{item.QuantityOrder}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                            <td className='text-center'>{(item.Type===\"Transferencia\"||item.Type===\"Ajuste\")?this.addDifferenceSymbol(Number(item.QuantityShipped)-Number(item.QuantityOrder))+(Number(item.QuantityShipped)-Number(item.QuantityOrder)):((item.Type==='Outbound'||item.Type==='Purchase')?(item.Type==='Outbound'?\"-\"+item.QuantityShipped:\"+\"+item.QuantityOrder):'-')}</td>\r\n                                            <td className='text-start'>{item.Description}</td>\r\n                                            <td>{item.User}</td>\r\n                                            <td>{item.Date}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Pie,Doughnut, Bar,Line } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend,CategoryScale,LinearScale,BarElement,Title,PointElement,LineElement,Filler } from 'chart.js';\r\nimport { faker } from '@faker-js/faker';\r\nexport default class CycleInvetoryGraph extends Component {\r\n    state = {\r\n\r\n    }\r\n    constructor(){\r\n        super()\r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            \r\n            Filler,\r\n            );\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    datapie={\r\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n    }\r\n\r\n    optionsbar = {\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart - Stacked',\r\n          },\r\n        },\r\n        responsive: true,\r\n        interaction: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n        scales: {\r\n          x: {\r\n            stacked: true,\r\n          },\r\n          y: {\r\n            stacked: true,\r\n          },\r\n        },\r\n      };\r\n      \r\n    labels=['January', 'February', 'March', 'April', 'May', 'June', 'July']\r\n      \r\n       databar = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(75, 192, 192)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 3',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(53, 162, 235)',\r\n            stack: 'Stack 1',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsarea = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      dataarea = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            fill: true,\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            borderColor: 'rgb(53, 162, 235)',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsLine2 = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      databars = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n    render() {\r\n        return (\r\n            <div className='CycleInventoryReport'>\r\n                <p className='text-center display-1 pb-2' >Cycle Inventory Graphs</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10'>\r\n                        <select className=\"form-select form-select-lg mb-3\" aria-label=\"select option\">\r\n                            <option>Select an old Cycle Inventory to see they graphs</option>\r\n                            <option value=\"1\">Cycle Invetory No. 1 06/20/2022-06/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 2 06/29/2022-07/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 3 08/15/2022-08/30/2022</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Pie Graph</p>\r\n                        <Pie data={this.datapie}></Pie>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Doughnut Graph</p>\r\n                        <Doughnut data={this.datapie}></Doughnut>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Bar Graph</p>\r\n                        <Bar options={this.optionsbar} data={this.databar}></Bar>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Line Graph</p>\r\n                        <Line options={this.optionsarea} data={this.dataarea}></Line>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Another Line Graph</p>\r\n                        <Line options={this.optionsLine2} data={this.databar}></Line>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Bars Graph</p>\r\n                        <Bar options={this.optionsLine2} data={this.databars}></Bar>\r\n                    </div>            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class BarGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n            plugins: {\r\n              legend: {\r\n                position: 'top',\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: '',\r\n              },\r\n            },\r\n          }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Bar options={this.state.options} data={this.state.data}></Bar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../css/table-responsive.css'\r\nimport {getInformationWithData } from '../services/CABE'\r\nimport BarGraph from '../components/BarGraph'\r\nimport { getValueCookie } from '../services/cookieService'\r\nexport default class KPI extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.BarGraph1 = React.createRef()\r\n\r\n    }\r\n\r\n\r\n    state = {\r\n        General: {\r\n            KPIInfo: [],\r\n            KPIInfoFilter: []\r\n        },\r\n        GraphData: {\r\n\r\n        }\r\n    }\r\n\r\n     componentDidMount() {\r\n         \r\n         \r\n    }\r\n\r\n\r\n    async getKPIInfo(){\r\n        const data1={\r\n            company:getValueCookie('Company')\r\n        }\r\n        const temporal=this.state.General\r\n        const data=await getInformationWithData('/reports/getKPI',data1)\r\n        if(data.status.code===1){\r\n        temporal.KPIInfo=data.data\r\n        temporal.KPIInfoFilter=data.data\r\n        await this.setState({General:temporal})\r\n        await this.generateGraphDays(data.data)\r\n        }\r\n    }\r\n\r\n    async generateGraphDays(data) {\r\n        this.BarGraph1.current.setTitle('Inventory Cycle Days')\r\n\r\n        let labels = []\r\n        let completeInfo = []\r\n\r\n        for (const element of data) {\r\n            labels.push('Cycle ' + String(element.id))\r\n            completeInfo.push(String(element.realQuantityDays))\r\n        }\r\n\r\n        var info = {\r\n            label: 'Days',\r\n            data: completeInfo,\r\n            backgroundColor: 'rgb(17,131,29)',\r\n\r\n        }\r\n        await this.BarGraph1.current.setLabels(labels)\r\n        await this.BarGraph1.current.setData([info])\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='KPI'>\r\n                <button hidden id='actionatorKPI' onClick={()=>this.getKPIInfo()}></button>\r\n                <p className='text-center display-1 pb-3' >Inventories of {getValueCookie('Company')}</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10 tableFixHead tb-5'>\r\n                        <table className='table'>\r\n                            <thead>\r\n                                <tr className='text-light text-center'>\r\n                                    <th className='bg-dark'>Type of Inventory</th>\r\n                                    <th className='bg-dark'>Cycle</th>\r\n                                    <th className='bg-dark'>Full cycle count days</th>\r\n                                    <th className='bg-dark'>Closing date</th>\r\n                                    <th className='bg-dark'>Counted items</th>\r\n                                    <th className='bg-dark'>Average binary accuracy</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>Adjustments</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>KPI result</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.General.KPIInfoFilter.map((element, i) => (\r\n                                    <tr className='text-center' key={i}>\r\n                                        <td>Cycle</td>\r\n                                        <td>{element.id}</td>\r\n                                        <td>{element.realQuantityDays}</td>\r\n                                        <td>{element.realFinishDate2}</td>\r\n                                        <td>{element.ItemsContados}</td>\r\n                                        <td>{element.ExBinaria}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            <tfoot className='tfoot'>\r\n\r\n                                <tr className='bg-secondary text-light'>\r\n\r\n                                </tr>\r\n                            </tfoot>\r\n\r\n                        </table>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <BarGraph ref={this.BarGraph1} />\r\n                    </div>\r\n                    <div className='col-5'>\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport '../css/CartaProducto.css'\r\n\r\n\r\nexport default class CartaProducto extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conteiner cartaHover\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 imgC \">\r\n                        <img src={\"./assets/notavailable.png\"} alt=\"Card  cap\" className='imgC'/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row text-start pt-5\">\r\n                            <h5 className=\"card-title\">{this.props.ItemCode}</h5>\r\n                        </div>\r\n                        <div className=\"row text-start\">\r\n                            <p className=\"card-text fs-6\">{this.props.Description}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-6\"><i>UPC:</i> {this.props.UPC}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-5\"><b>OnHand:</b> {this.props.OnHand}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport CartaProducto from './CartaProducto'\r\nimport { getInformationNoData } from '../services/CABE.js'\r\n\r\n\r\nexport default class Catalogue extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.retornarProducto = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        Catalogo: [],\r\n        ProductosMostrados: []\r\n    }\r\n\r\n    async obtenerProductos() {\r\n        const buscador = document.getElementById('catalogo_busqueda');\r\n        const Enpoint = '/Items/get'\r\n        const respuesta = await getInformationNoData(Enpoint);\r\n        \r\n        if (respuesta.status.code === 1) {\r\n            this.setState({ Catalogo: respuesta.data });\r\n            this.setState({ ProductosMostrados: respuesta.data });\r\n        }\r\n        buscador.value='';\r\n        setTimeout( ()=>{buscador.focus();}, 300);\r\n    }\r\n\r\n    buscarProductos = e => {\r\n  \r\n            let busqueda = e.target.value;\r\n            let Productos = this.state.Catalogo.filter((producto) => {\r\n                if (((\r\n                        this.contiene(producto.itemCode,busqueda)\r\n                    ||  this.contiene(producto.abbreviatedDesc,busqueda)\r\n                    ||  this.contiene(producto.upc,busqueda))\r\n                    )\r\n                ) {\r\n                    return producto\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n            this.setState({ ProductosMostrados: Productos });\r\n    }\r\n\r\n    contiene(parametro,busqueda){\r\n        return parametro.toString().toLowerCase().includes(busqueda.toLocaleLowerCase())\r\n    }\r\n\r\n    getProducto(producto){\r\n        //Aqui asignamos el producto al estado del padre\r\n        const Padre = this.props.Padre\r\n        const Products = Padre.state.products;\r\n        producto.BIN=\"\";\r\n        producto.quantity=0;\r\n        producto.totalCost=0;\r\n        Products.push(producto);\r\n        Padre.setState({products:Products});\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button type=\"button\" disabled={this.props.disabled} className=\"btn catalogueOpen btn-lg w-100\" data-bs-toggle=\"modal\" data-bs-target={\"#Catalogo\" + this.props.nombrePadre} onClick={() => this.obtenerProductos()}>Open Catalogue </button>\r\n                <div className=\"modal fade\" id={\"Catalogo\" + this.props.nombrePadre} tabIndex=\"-1\" aria-labelledby=\"catalogoModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-fullscreen\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"catalogoModalLabel\">Catalogue</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body \">\r\n                                <div className='row form-group pt-4'>\r\n                                    <input className='form-control' placeholder='Search by ItemCode,BIN,Description...' id='catalogo_busqueda' onKeyUp={this.buscarProductos} />\r\n                                </div>\r\n                                <div className='row'>\r\n                                    {\r\n                                        this.state.ProductosMostrados.map((producto, i) => (\r\n                                            <div key={i} className='col-6 ' data-bs-dismiss=\"modal\" onClick={()=>this.getProducto(producto)}>\r\n                                                <CartaProducto ItemCode={producto.itemCode} Description={producto.abbreviatedDesc} OnHand={producto.OnHand} UPC={producto.upc} />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class LineAreaGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[\r\n                {\r\n                    fill: true,\r\n                    label: 'Quantity',\r\n                    data: [],\r\n                    borderColor: 'rgb(53, 162, 235)',\r\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                  }\r\n            ]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: '',\r\n          },\r\n        },\r\n        }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets[0].data=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Line options={this.state.options} data={this.state.data}></Line>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/inventory-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport Catalogue from '../components/Catalogue.js'\r\nimport { AiOutlineSearch, AiFillPrinter, AiFillBook, AiFillDollarCircle, AiFillCheckSquare, AiFillCreditCard, AiFillTag, AiOutlineBarcode } from \"react-icons/ai\"\r\nimport LineAreaGraph from '../components/LineAreaGraph'\r\nexport default class Inventory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.LineAreaGraph1 = React.createRef()\r\n    }\r\n\r\n    state={\r\n        producto:{\r\n            itemCode:\"Item Code\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LineAreaGraph1.current.setTitle('Quantity sold per month year 2022')\r\n        this.LineAreaGraph1.current.setLabels(['January', 'February', 'March', 'April', 'May', 'June'])\r\n        this.LineAreaGraph1.current.setData(['123', '100', '12', '156', '145', '110'])\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='InventoryInfo lobbyContainer'>\r\n                <div className='row searchPart'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5 pb-5'>\r\n                        <p className='text-start pt-4 pb-2' >Search specific Product:</p>\r\n                        <div className=\"input-group input-group-lg pb-4\">\r\n                            <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Search by ItemCode' />\r\n                        </div>\r\n                        {\r\n                            /* \r\n                            \r\n                            <div className='text-center'>\r\n                            <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Search <AiOutlineFileSearch /></button>\r\n                        </div>\r\n                            */\r\n                        }\r\n\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        <p className='text-start pt-4 pb-2' >See all Catalogue:</p>\r\n                        <div className='text-center'>\r\n                            <Catalogue nombrePadre={'InventoryBin'} Padre={this}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='ItemInfo' hidden={false}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='text-start display-4 pb-2' >Item information: </p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n                    <div className='row pt-3'>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber'>\r\n                                <p className='text-center display-3' >{this.state.producto.itemCode}</p>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center'>\r\n                                <img className='pb-5 pt-5' src='/assets/notavailable.png' alt='Company' />\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Print labels <AiFillPrinter /></button>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 historyProd\">View history <AiFillBook /></button>\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='row pt-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >General information: <AiOutlineBarcode /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>UPC:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4 textAreaGeneral\">\r\n                                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>U/M:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Categories to which it belongs:</p>\r\n                                </div>\r\n                                <div className='col-12 tableFixHead'>\r\n                                    <table className='table'>\r\n                                        <thead>\r\n                                            <tr className='text-light text-center'>\r\n                                                <th className='bg-dark'>Categories</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className='text-center'>BOOTS</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>FIBER ADAPTER</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>KEYSTONE JACKS</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tfoot className='tfoot'>\r\n                                        </tfoot>\r\n\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Quantity Available: <AiFillCheckSquare /> </p>\r\n                                    <div className='row'>\r\n                                        <div className='col-12 titleTotal text-center'>\r\n                                            <p>General Total: 1563</p>\r\n                                        </div>\r\n                                        <div className='col-12 titleDistribution'>\r\n                                            <p>Distribution:</p>\r\n                                        </div>\r\n                                        <div className='col-12 tableFixHead'>\r\n                                            <table className='table'>\r\n                                                <thead>\r\n                                                    <tr className='text-light text-center'>\r\n                                                        <th className='bg-dark'>BIN</th>\r\n                                                        <th className='bg-dark'>Quantity</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A001</td>\r\n                                                        <td className='text-end'>1500</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>B002</td>\r\n                                                        <td className='text-end'>60</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A003</td>\r\n                                                        <td className='text-end'>3</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tfoot className='tfoot'>\r\n\r\n                                                    <tr className='bg-secondary text-light'>\r\n                                                        <td className='text-center'>Total</td>\r\n                                                        <td className='text-end'>1563</td>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >Physical details: <AiFillTag /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Weight (lbs) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Length (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Height (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Width (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Financial information: <AiFillCreditCard /></p>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Purchase price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Sale price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <LineAreaGraph ref={this.LineAreaGraph1} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/general-style.css\"\r\n\r\n\r\nexport default class Lobby extends Component {\r\n\r\n    componentDidMount() {\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid generalContainer lobbyContainer display-1 text-center pt-5\">\r\n                <p>Welcome</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Catalogue from '../components/Catalogue'\r\n\r\nexport default class PikingSystem extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className='fs-1'>Piking System</p>\r\n                <div className='form-group '>\r\n                    <input className='form-control w-75 d-inline fs-3' disabled />\r\n                    <button className='btn btn-success d-inline fs-3 w-25'>Sales order mode</button>\r\n                </div>\r\n                <div>\r\n                    <label className='w-50'>\r\n                        Order name:\r\n                        <input className='form-control' disabled />\r\n                    </label>\r\n                    <label className='w-50'>\r\n                        Order by:\r\n                        <input className='form-control' disabled />\r\n                    </label>\r\n\r\n                </div>\r\n                <div>\r\n                    <p className='bg-primary text-white p-2 fs-3 text-center'>Piking list</p>\r\n                    <div className='pb-5 bg-light'>\r\n                        <label className='w-100 '>\r\n                            Search by UPC:\r\n                            <input className='form-control ' placeholder='Scanner...' />\r\n                        </label>\r\n                        <div className='w-100'>\r\n                            <Catalogue nombrePadre={'PickinSystem'} Padre={this} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <table className='table'>\r\n                        <thead className='thead bg-secondary text-white'>\r\n                            <tr>\r\n                                <th>Item Code</th>\r\n                                <th>Description</th>\r\n                                <th>Quantity Ordered</th>\r\n                                <th>Weight</th>\r\n                                <th>Total Weight</th>\r\n                                <th>BIN</th>\r\n                                <th>Comments</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='tbody'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot className='tfoot bg-dark text-white'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>Totals</td>\r\n                                <td>0</td>\r\n                                <td>0.00</td>\r\n                                <td>0.00</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                    <p className='bg-primary text-white p-2 fs-3 text-center'>Picked up list</p>\r\n                    <table className='table'>\r\n                        <thead className='thead bg-secondary text-white'>\r\n                            <tr>\r\n                                <th>Item Code</th>\r\n                                <th>Description</th>\r\n                                <th>Quantity Ordered</th>\r\n                                <th>Quantity Shipped</th>\r\n                                <th>Weight</th>\r\n                                <th>Total Weight</th>\r\n                                <th>BIN</th>\r\n                                <th>Comments</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='tbody'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot className='tfoot bg-dark text-white'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>Totals</td>\r\n                                <td>0</td>\r\n                                <td>0</td>\r\n                                <td>0.00</td>\r\n                                <td>0.00</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import  {StyleSheet } from '@react-pdf/renderer'\r\n\r\nconst pdfConfig=StyleSheet.create({\r\n\r\n    HeaderStyle:{\r\n        backgroundColor:\"rgb(20, 42, 77)\",\r\n        color:\"rgb(255, 255, 255)\",\r\n    },\r\n    HeaderMargin:{\r\n        top:\"45px\",\r\n        height:\"150px\"\r\n    },\r\n\r\n    BusinessLogo:{\r\n        width:\"150px\",\r\n        left:\"35px\",\r\n        top:\"10px\"\r\n    },\r\n    ContactInfo:{\r\n        textAlign:\"justify\",\r\n        fontSize:\"14px\",\r\n        top:\"-30px\",\r\n        left:\"220px\"\r\n    },\r\n//backgroundColor:\"rgb(69, 71, 74)\",\r\n    marginInfo:{\r\n        width:\"80%\",\r\n        marginLeft:\"10%\",\r\n        padding:\"20px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginBottom:\"8px\",\r\n        color:\"rgb(255, 255, 255)\"\r\n\r\n    },\r\n    OrderTitleStyle:{\r\n        color:\"rgb(255, 255, 255)\",\r\n        textAlign:\"center\",\r\n        fontSize:\"20px\",\r\n        marginTop:\"4px\"\r\n    },\r\n    OrderInformation:{\r\n        width:\"100%\",\r\n        backgroundColor:\"rgb(69, 71, 74)\",\r\n    },\r\n    TitleStyle:{\r\n        textAlign:\"left\",\r\n        fontSize:\"14px\",\r\n        width:\"50%\",\r\n    },\r\n\r\n    TextSeparator:{\r\n        marginBottom:\"4px\"\r\n    },\r\n    InfoEncabezadoStyle:{\r\n        width:\"30%\",\r\n        fontSize:\"12px\",\r\n    },\r\n    TextSeparator2:{\r\n        marginTop:\"1px\",\r\n        marginBottom:\"3.5px\"\r\n    },\r\n\r\n    Table:{\r\n        width:\"80%\",\r\n        marginLeft:\"10%\",\r\n        \r\n    },\r\n\r\n    CabeceraTabla:{\r\n        width:\"100%\",\r\n        backgroundColor:\"#000000\",\r\n        color:\"#F0FFFF\",\r\n        textAlign:\"center\",\r\n        padding:\"8px\",\r\n        fontSize:\"14px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n\r\n    ColumnaNormal:{\r\n        width:\"15%\",\r\n        textAlign:\"center\",\r\n        fontSize:\"14px\",\r\n    },\r\n\r\n    ColumnaGrande:{\r\n        width:\"54%\",\r\n        textAlign:\"center\",\r\n        fontSize:\"14px\",\r\n    },\r\n    CuerpoTabla:{\r\n        width:\"100%\",\r\n        textAlign:\"center\",\r\n        padding:\"8px\",\r\n        fontSize:\"11px\",\r\n        \r\n        \r\n    },\r\n    ColumnaGrandeCuerpo:{\r\n        width:\"54%\",\r\n        fontSize:\"9px\",\r\n        textAlign:\"justify\",\r\n        padding:\"8px\",\r\n    },\r\n    ColumnaNormalCuerpo:{\r\n        width:\"15%\",\r\n        textAlign:\"center\",\r\n        display:\"block\",\r\n        marginTop:\"1.2%\"\r\n    },\r\n\r\n   \r\n\r\n    Fila:{\r\n        width:\"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    }\r\n\r\n    \r\n   \r\n});\r\n\r\nexport default pdfConfig;","import React, { Component } from 'react'\r\nimport \"../css/general-style.css\"\r\nimport { AiFillPrinter } from \"react-icons/ai\"\r\nimport ModalOrders from './ModalComponent'\r\nimport pdfConfig from '../pdfConfig/pdfConfig'\r\nimport { Document, Image, PDFViewer, View, Page, Text } from '@react-pdf/renderer'\r\n\r\n\r\nexport class OrderPDF extends Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n    }\r\n\r\n    state = {\r\n        showModal: false\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState({ showModal: true })\r\n    }\r\n\r\n    handleModalClose = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                    <button disabled={this.props.disabled} type=\"button\" onClick={() => this.handleModalOpen()} className={\"btn \" + this.props.colorButton + \" btn-lg\"}>Print Order <AiFillPrinter /></button>\r\n                </div>\r\n                <ModalOrders title={this.props.title} show={this.state.showModal} close={() => this.handleModalClose()}>\r\n                    <PDFViewer className=\"w-100\" style={{ minHeight: \"90vh\" }}>\r\n                        <Document>\r\n                            <Page wrap>\r\n\r\n                                {/*THIS IS THE HEADER OF THE DOCUMENT*/}\r\n                                <View style={pdfConfig.HeaderStyle} fixed>\r\n                                    <View style={pdfConfig.HeaderMargin}>\r\n                                        <Image style={pdfConfig.BusinessLogo} src={this.props.companyLogo} />\r\n                                        <View style={pdfConfig.ContactInfo}>\r\n                                            {this.props.contactInfo.map((element, e) => (\r\n                                                <Text key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                                {/*ORDER INFO*/}\r\n                                <View fixed style={pdfConfig.OrderInformation}>\r\n                                    <View style={pdfConfig.OrderTitleStyle}>\r\n                                        <Text>{this.props.OrderTitle}</Text>\r\n                                    </View>\r\n                                    <View style={pdfConfig.marginInfo}>\r\n                                        <View style={pdfConfig.TitleStyle}>\r\n                                            {this.props.OrderInfo1.map((element, e) => (\r\n                                                <Text style={pdfConfig.TextSeparator} key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n\r\n                                        <View style={pdfConfig.TitleStyle}>\r\n                                            {this.props.OrderInfo2.map((element, e) => (\r\n                                                <Text style={pdfConfig.TextSeparator} key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n\r\n\r\n                            </Page>\r\n                        </Document>\r\n                    </PDFViewer>\r\n                </ModalOrders>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","export function getIndexElement(array, key, element){\r\n    const index = array.findIndex(code => {  \r\n        return String(code[key]).toUpperCase() === element.toUpperCase()\r\n    })\r\n\r\n    return index\r\n}\r\n\r\nexport default {getIndexElement}","import React, { Component } from 'react'\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport { BsCheckSquare, BsCartPlus } from \"react-icons/bs\";\r\nimport { AiTwotoneSave,AiOutlineCloseCircle,AiFillDelete } from \"react-icons/ai\"\r\nimport Catalogue from '../components/Catalogue';\r\nimport { OrderPDF } from '../components/OrderPDF';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport { getIndexElement } from '../functions/searchInObject';\r\nimport { confirmCloseAlert } from '../functions/alerts';\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { formatInputDateQuery } from '../functions/dateFormat';\r\nexport default class PurchaseOrder extends Component {\r\n\r\n    state = {\r\n\r\n        purchaseOrderHeader:{\r\n            NoOrder:'',\r\n            Vendor:{},\r\n            Carrier:'',\r\n            dateOrder:'',\r\n            creationDate:'',\r\n            State:''\r\n        },\r\n        products: [],\r\n        totals:{\r\n            finalquantityTotal:0,\r\n            finalTotalCost:0\r\n        },\r\n        disableHeader:true,\r\n        secureTransaction:false,\r\n        modalPurchase:false,\r\n        oldPurchaseOrderHeader:[]\r\n    }\r\n\r\n    print() {\r\n        console.log(this.state.products)\r\n    }\r\n\r\n    disableTransactions(){\r\n        this.setState({secureTransaction:true})\r\n    }\r\n\r\n    enableTransactions(){\r\n        this.setState({secureTransaction:false})\r\n    }\r\n\r\n\r\n    onTarget=async(e,item)=>{\r\n        const temporal=this.state.products\r\n        const ident=e.target.id.split('_')\r\n        const index=temporal.indexOf(item)\r\n        if(index!==-1){\r\n            if(ident[0]===\"BINPurchase\"){\r\n                temporal[index].BIN=e.target.value\r\n                this.setState({products:temporal})\r\n            }else if(ident[0]===\"quantityPurchase\"){\r\n                temporal[index].quantity=Number(e.target.value)\r\n                temporal[index].totalCost=Number(e.target.value)*temporal[index].unitPrice\r\n                this.setState({products:temporal})\r\n                this.calculateTotals()\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    onTargerHeader= async(e)=>{\r\n        const varChange=e.target.id\r\n        const temporal=this.state.purchaseOrderHeader\r\n        if(varChange===\"purchaseOrderNo\"){\r\n            await this.getPurchaseOrderHeader()\r\n            const index=getIndexElement(this.state.oldPurchaseOrderHeader,\"OrderNo\",e.target.value)\r\n            if(index===-1){\r\n                temporal.NoOrder=e.target.value\r\n                this.setState({purchaseOrderHeader:temporal})\r\n            }else{\r\n                confirmCloseAlert('incorrect',\"The order number is already registered, select a different number or use the autogenerated one\")\r\n                await this.createNewPurchaseOrder()\r\n            }\r\n        }else if(varChange===\"purchaseCarrier\"){\r\n            temporal.Carrier=e.target.value\r\n            this.setState({purchaseOrderHeader:temporal})\r\n        }else if(varChange===\"purchaseVendor\"){\r\n            temporal.Vendor=e.target.value\r\n            this.setState({purchaseOrderHeader:temporal})\r\n        }else if(varChange===\"purchaseDate\"){\r\n            temporal.dateOrder=e.target.value\r\n            this.setState({purchaseOrderHeader:temporal})\r\n        }\r\n\r\n       \r\n\r\n    }\r\n\r\n    async createNewPurchaseOrder(){\r\n        this.disableTransactions()\r\n        var data={\r\n            idcompany:getValueCookie('CompanyId')\r\n        }\r\n        const noOrder=await getInformationWithData('/purchase/create/newOrderNumber',data)\r\n\r\n        if(noOrder.status.code===1){\r\n            var orderNumber=\"PO\"\r\n            for (let a =noOrder.data[0].NoOrder.toString().length ; a < 4; a++) {\r\n                orderNumber+=\"0\"\r\n            }\r\n\r\n            orderNumber+=noOrder.data[0].NoOrder.toString()\r\n\r\n            const temporal=this.state.purchaseOrderHeader\r\n            temporal.NoOrder=orderNumber\r\n            this.setState({purchaseOrderHeader:temporal,disableHeader:false})\r\n            document.getElementById('purchaseOrderNo').value=this.state.purchaseOrderHeader.NoOrder\r\n        }\r\n\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    async getPurchaseOrderHeader(){\r\n        const data={\r\n            idcompany:getValueCookie('CompanyId')\r\n        }\r\n        const result=await getInformationWithData('/purchase/get/purchaseOrderHeader',data)\r\n        if(result.status.code===1){\r\n            this.setState({oldPurchaseOrderHeader:result.data})\r\n        }\r\n    }\r\n\r\n    async clearDashBoardPurchaseOrder(){\r\n        \r\n        var header={\r\n            NoOrder:'',\r\n            Vendor:{},\r\n            Carrier:'',\r\n            dateOrder:'',\r\n            creationDate:'',\r\n            State:''\r\n        }\r\n        var tot={\r\n            finalquantityTotal:0,\r\n            finalTotalCost:0\r\n        }        \r\n        this.setState({purchaseOrderHeader:header,products:[],totals:tot,disableHeader:true})\r\n\r\n\r\n                    document.getElementById('purchaseOrderNo').value=\"\"\r\n                    document.getElementById('purchaseCarrier').value=\"\"\r\n                    document.getElementById('purchaseVendor').value=\"\"\r\n                    document.getElementById('purchaseDate').value=\"\"\r\n\r\n\r\n                   \r\n                                 \r\n    }\r\n\r\n    cancelPurchaseOrder(){\r\n        this.disableTransactions()\r\n        Swal.fire({\r\n            title: 'Do you want to discard the actual Purchase Order?',\r\n            backdrop:true,\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    await this.clearDashBoardPurchaseOrder()                  \r\n                    Swal.fire('The Purchase Order was canceled!', '', 'info')\r\n                } \r\n            }\r\n\r\n        })\r\n    this.enableTransactions()\r\n    }\r\n    stateInWords(state){\r\n        \r\n        if(state===''){\r\n            return 'Creating order'\r\n        }else if(state==='1'){\r\n            return 'Order created'\r\n        }else if(state==='2'){\r\n            return 'Order received'\r\n        }else if(state==='3'){\r\n            return 'Order completed and loaded'\r\n        }\r\n\r\n    }\r\n    colorStateText(state){\r\n        \r\n        if(state===''){\r\n            return 'text-secondary'\r\n        }else if(state==='1'){\r\n            return 'text-primary'\r\n        }else if(state==='2'){\r\n            return 'text-warning'\r\n        }else if(state==='3'){\r\n            return 'text-success'\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    async createPurchaseOrder(){\r\n        this.disableTransactions()\r\n        const temporal=this.state.purchaseOrderHeader\r\n        temporal.State=\"1\"\r\n        this.setState({purchaseOrderHeader:temporal})\r\n        const data={\r\n            header:this.state.purchaseOrderHeader,\r\n            products:this.state.products,\r\n            idcompany:getValueCookie('CompanyId'),\r\n            username:getValueCookie('userName'),\r\n            cost:this.state.totals.finalTotalCost,\r\n            totalquant:this.state.totals.finalquantityTotal,\r\n            coment:''\r\n        }\r\n        const result=await create_Delete_Update_Information('/purchase/create/purchaseOrder',data)\r\n        if(result.status.code===1){\r\n            Swal.fire({\r\n                title: 'Do you want to print the actual Purchase Order?',\r\n                backdrop:true,\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Yes',\r\n                denyButtonText: `No`,\r\n                allowOutsideClick: () => !Swal.isLoading()\r\n            }).then(async (result) => {\r\n                if (result !== null && result !== undefined) {\r\n                    if (result.isConfirmed) {\r\n                       \r\n                    }else{\r\n                        this.clearDashBoardPurchaseOrder()\r\n                    } \r\n                }\r\n    \r\n            })\r\n        }\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    calculateTotals(){\r\n        var totalquant=0\r\n        var totalcost=0\r\n        const temporal=this.state.products\r\n        \r\n        for (const item of temporal) {\r\n           totalquant+=item.quantity\r\n           totalcost+=item.totalCost \r\n        }\r\n        const temporal2=this.state.totals\r\n        temporal2.finalquantityTotal=totalquant\r\n        temporal2.finalTotalCost=totalcost\r\n\r\n\r\n        this.setState({totals:temporal2})\r\n    }\r\n\r\n     handleModalOpen = async () => {\r\n        this.getPurchaseOrderHeader()\r\n        await this.setState({ modalPurchase:true })\r\n    }\r\n\r\n    handleModalClose = () => {\r\n       \r\n        this.setState({ modalPurchase:false })\r\n    }\r\n\r\n    removeProduct(item){\r\n        var temporal=this.state.products\r\n        const index=temporal.indexOf(item)\r\n\r\n        if(index!==-1){\r\n            temporal.splice(index,1)\r\n            console.log(temporal)\r\n            for(let a=0;a<temporal.length;a++){\r\n                document.getElementById(\"BINPurchase_\"+a).value=temporal[a].BIN\r\n                document.getElementById(\"quantityPurchase_\"+a).value=temporal[a].quantity\r\n            }\r\n\r\n\r\n            this.setState({products:temporal})\r\n            this.calculateTotals()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='purchaseOrderContainer'>\r\n                <button onClick={() => this.print()}>PRINT</button>\r\n                <p className='text-center display-1 pb-2' >Purchase Order</p>\r\n\r\n                <div>\r\n                    <div className='row pb-5 text-center'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button type=\"button\" className=\"btn greenButton btn-lg\" disabled={this.state.secureTransaction} hidden={!this.state.disableHeader} onClick={()=>this.createNewPurchaseOrder()}>New Purchase Order <BsCartPlus /></button>\r\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg\" disabled={this.state.secureTransaction} hidden={this.state.disableHeader} onClick={()=>this.cancelPurchaseOrder()}>Cancel Purchase Order <AiFillDelete /></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button type=\"button\" className=\"btn brownButton btn-lg\" disabled={this.state.secureTransaction||!this.state.disableHeader} onClick={()=>this.handleModalOpen()}>History <BsCheckSquare /></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-2 text-center'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <div className='row pb-2'>\r\n                                <div className='col-6'>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Order No:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseOrderNo' defaultValue={this.state.purchaseOrderHeader.NoOrder} disabled={this.state.disableHeader||this.state.secureTransaction} type=\"text\" onChange={this.onTargerHeader}/></div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Carrier:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseCarrier' defaultValue={this.state.purchaseOrderHeader.Carrier} disabled={this.state.disableHeader||this.state.secureTransaction} type=\"text\" onChange={this.onTargerHeader} /></div>\r\n                                    </div>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-4 text-start pText'><p>Order State:</p></div>\r\n                                        <div className='col-8 text-start pText'><p className={'fw-bold '+this.colorStateText(this.state.purchaseOrderHeader.State)} hidden={this.state.disableHeader}>{this.stateInWords(this.state.purchaseOrderHeader.State)}</p></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-12 text-start pText'><p>Vendor:</p></div>\r\n                                        <div className='col-12'>\r\n                                            <select disabled={this.state.disableHeader} id='purchaseVendor' className=\"form-select form-select-lg mb-3\" onChange={this.onTargerHeader}>\r\n                                                <option>Open this select menu</option>\r\n                                                <option>One</option>\r\n                                                <option>Two</option>\r\n                                                <option>Three</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Date:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseDate' disabled={this.state.disableHeader||this.state.secureTransaction} onChange={this.onTargerHeader} type=\"date\" /></div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Estimated arrival date:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseEstimatedDate' disabled={this.state.disableHeader||this.state.secureTransaction} onChange={this.onTargerHeader} type=\"date\" /></div>\r\n                                    </div>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-12'><Catalogue disabled={this.state.disableHeader||this.state.secureTransaction} nombrePadre={\"PurchaseOrder\"} Padre={this} /></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-2 pt-3 text-center'>\r\n                        <div className='col-12 pb-3 text-start display-6'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-10'>\r\n                                    Order Detail:\r\n                                </div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 tb-5'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>Standar Cost</th>\r\n                                        <th className='bg-dark'>Total Cost</th>\r\n                                        <th className='bg-dark'></th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {this.state.products.map((product, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-start'>{product.itemCode}</td>\r\n                                            <td className='text-start'>{product.abbreviatedDesc}</td>\r\n                                            <td>\r\n                                                <div className=\"input-group input-group-lg\">                     \r\n                                                    <input type=\"text\" id={'BINPurchase_'+i} defaultValue={product.BIN} className=\"form-control text-center\" onChange={(e)=>this.onTarget(e,product)}/>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                            <div className=\"input-group input-group-lg\">                              \r\n                                                    <input type=\"number\" id={'quantityPurchase_'+i} min={0} defaultValue={product.quantity} onChange={(e)=>this.onTarget(e,product)} className=\"form-control text-end\"/>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className='text-end'>$ {product.unitPrice}</td>\r\n                                            <td className='text-end'>$ {product.totalCost}</td>\r\n                                            <td><button onClick={()=>this.removeProduct(product)} className='btn btn-danger'><AiOutlineCloseCircle/></button></td>\r\n                                        </tr>\r\n\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>TOTAL:</td>\r\n                                        <td className='text-end'>{this.state.totals.finalquantityTotal}</td>\r\n                                        <td></td>\r\n                                        <td className='text-end'>$ {this.state.totals.finalTotalCost}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row  pb-4 text-center'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button type=\"button\" disabled={this.state.disableHeader||this.state.secureTransaction} className=\"btn yellowButton btn-lg\" onClick={()=>this.createPurchaseOrder()}>Save Order <AiTwotoneSave /></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        <OrderPDF disabled={this.state.disableHeader||this.state.secureTransaction} colorButton=\"orangeButton\" title=\"Purchase Order Print\"\r\n                            companyLogo={getValueCookie('CompanyLogo')}\r\n                            OrderTitle=\"Purchase Order\"\r\n                            contactInfo={[\"Hyperline Systems North East Inc.\", \"7055 Amwiler Industrial Drive Suite D, Atlanta, GA 30360\", \"Atlanta Georgia Warehouse\", \"www.hyperline.com\"]}\r\n                            OrderInfo1={[\"Order No: PO1563\", \"Vendor: HDMU HYUNDAI BANGKOK 0109E\", \"Carrier: Amazon UPS\", \"Date: 07/10/2022\"]}\r\n                            OrderInfo2={[\"Order State: In Proccess\", \"Order by: diego.perez\", \"Printed by: diego.perez\"]}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <ModalOrders title={'Purchase Orders'} show={this.state.modalPurchase} close={()=>this.handleModalClose()}>\r\n                    <div className='row pt-3'>\r\n                    <div className='col-12'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Order No</th>\r\n                                        <th className='bg-dark'>Order Date</th>\r\n                                        <th className='bg-dark'>Comment</th>\r\n                                        <th className='bg-dark'>Vendor</th>\r\n                                        <th className='bg-dark'>Carrier</th>\r\n                                        <th className='bg-dark'>Total Quantity</th>\r\n                                        <th className='bg-dark'>Total Cost</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Create by</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {this.state.oldPurchaseOrderHeader.map((item,i)=>(\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td>{item.OrderNo}</td>\r\n                                            <td>{formatInputDateQuery(item.OrderDate)}</td>\r\n                                            <td className='text-start'>{item.Comment}</td>\r\n                                            <td>{item.VendorName}</td>\r\n                                            <td>{item.Carrier}</td>\r\n                                            <td className='text-end'>{item.TotalQuantity}</td>\r\n                                            <td className='text-end'>$ {item.TotalCost}</td>\r\n                                            <td className={''+this.colorStateText(item.Status)}>{this.stateInWords(item.Status)}</td>\r\n                                            <td>{item.createBy}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                   \r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { Component } from \"react\"\r\nimport CompanyDashBoard from \"../pages/CompanyDashBoard\"\r\nimport {Menu} from \"../components/Menu\"\r\nimport Footer from \"../components/Footer\"\r\nimport CycleInventory from \"../pages/CycleInvetory\"\r\nimport CycleInvetoryGraph from \"../pages/CycleInventoryGraph\"\r\nimport KPI from \"../pages/KPI\"\r\nimport Inventory from \"../pages/Inventory\"\r\nimport Lobby from \"../pages/Lobby\"\r\nimport PikingSystem from \"../pages/PikingSystem\"\r\nimport PurchaseOrder from \"../pages/PurchaseOrder\"\r\nimport \"../css/general-style.css\"\r\n\r\nexport default class App extends Component {\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"page\" id=\"CompanyDashBoard\">\r\n                    <CompanyDashBoard />\r\n                </div>\r\n\r\n                <div id=\"GeneralPages\" className=\"page\">\r\n                    <Menu/>\r\n                    <div className=\"container-fluid generalContainer contPrincipal\" id=\"actualPage\">\r\n\r\n                        <div id=\"Lobby\" className=\"page\">\r\n                            <Lobby/>\r\n                        </div>\r\n\r\n                        <div id=\"CycleInventory\" className=\"page\">\r\n                            <CycleInventory />\r\n                        </div>\r\n                        <div id=\"CycleInventoryGraph\" className=\"page\">\r\n                            <CycleInvetoryGraph/>\r\n                        </div>\r\n\r\n                        <div id=\"KPIGraph\" className=\"page\">\r\n                            <KPI/>\r\n                        </div>\r\n\r\n                        <div id=\"Inventory\" className='page'>\r\n                            <Inventory/>\r\n                        </div>\r\n                        <div id=\"PurchaseOrder\" className='page'>\r\n                            <PurchaseOrder/>\r\n                        </div>\r\n\r\n                        <div id=\"PikingSystem\" className='page'>\r\n                            <PikingSystem/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/login-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport Footer from '../components/Footer'\r\nimport { AiOutlineUser, AiOutlineKey, AiOutlineLogin } from 'react-icons/ai';\r\nimport { selectWithDataService } from '../services/auth/authservices';\r\nimport { getValueCookie, setNewCookie } from '../services/cookieService';\r\nimport {automaticCloseAlert} from'../functions/alerts'\r\nimport md5 from 'md5'\r\nimport { closeSession } from \"../functions/closeSession\"\r\nimport App from '../components/App';\r\nimport { OpenCompanyDashBoard, OpenLobby, OpenLogin } from '../functions/pagesFunction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n  state = {\r\n    loginStorage: {\r\n      userName: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  onChangeById = e => {\r\n    var idState = e.target.id.split('_')\r\n    const temp = this.state.loginStorage\r\n    if (idState.length === 2) {\r\n      temp[idState[1]] = e.target.value\r\n    }\r\n\r\n    this.setState({ loginStorage: temp })\r\n  }\r\n\r\n  onKeyDown = async e => {\r\n    if (e.key === 'Enter') {\r\n      await this.Login()\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(getValueCookie('userName')){\r\n      if(getValueCookie('Company')){\r\n        OpenLobby()\r\n        //OpenPurchaseOrder()\r\n      }else{\r\n        OpenCompanyDashBoard()\r\n      }\r\n    }else{\r\n      OpenLogin()\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  async Login() {\r\n    const temp = this.state.loginStorage\r\n    const btn = document.getElementById('btn_signin');\r\n    const btn_logo = btn.innerHTML;\r\n    const datos = {\r\n      userName: temp.userName,\r\n      password: md5(temp.password),\r\n    }\r\n    btn.innerHTML = 'Loading...';\r\n    btn.disabled = true;\r\n    const datos2 = await selectWithDataService(datos, \"/login\")\r\n    if (datos2 != null) {\r\n      if (datos2.status.code === 1) {\r\n        if (datos2.token !== 'invalid') {\r\n          await automaticCloseAlert('correct', 'Welcome: ' + datos2.data.name + \" \" + datos2.data.surname)\r\n          setNewCookie('sessionAuthToken', datos2.token, 50)\r\n          setNewCookie('userName', datos2.data.userName, 50)\r\n          setNewCookie('name', datos2.data.name, 50)\r\n          setNewCookie('surname', datos2.data.surname, 50)\r\n          window.location.reload()\r\n          //await OpenCompanyDashBoard()\r\n        } else {\r\n          closeSession()\r\n          automaticCloseAlert('incorrect', 'Your  Username or Password are incorrect. Please try again')\r\n\r\n        }\r\n      }\r\n    }\r\n    btn.innerHTML = btn_logo;\r\n    btn.disabled = false;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id='login' className='page'>\r\n         \r\n          <div className='container-fluid pb-1 contPrincipal'>\r\n            <div className='container'>\r\n              <div className='row pt-5 pb-3 d-flex justify-content-center'>\r\n                <div className='col-9 contLogin'>\r\n                  <div className=\"border border-5 border-primary\"></div>\r\n                  <div className='row d-flex justify-content-center pt-5   '>\r\n                    <p className='display-2 '>Login</p>\r\n\r\n                    <div className='row d-flex justify-content-center pt-5 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineUser /></span>\r\n                          <input type=\"text\" id='Login_userName' onChange={this.onChangeById} onKeyDown={this.onKeyDown} className=\"form-control\" placeholder='Username' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineKey /></span>\r\n                          <input type=\"password\" id='Login_password' onKeyDown={this.onKeyDown} onChange={this.onChangeById} className=\"form-control\" placeholder='Password' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3 text-center'>\r\n                      <div className='col-7'>\r\n                        <button id='btn_signin' type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => this.Login()}>Sign in <AiOutlineLogin /></button>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        \r\n        <div id='App' className='page'>\r\n          <App />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport Login from './pages/Login';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Login/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}