{"version":3,"sources":["components/Footer.js","services/Connection/backEndLink.js","functions/alerts.js","services/cookieService.js","services/auth/authservices.js","functions/changeVisibility.js","functions/pagesFunction.js","functions/closeSession.js","components/MenuCompanySelect.js","components/Status.js","services/CABE.js","pages/CompanyDashBoard.js","components/Menu.js","components/ProgressBar.js","components/ModalComponent.js","functions/dateFormat.js","functions/generateDataSetExcel.js","components/ExcelDocument.js","functions/searchInObject.js","pages/CycleInvetory.js","pages/CycleInventoryGraph.js","components/BarGraph.js","pages/KPI.js","components/CartaProducto.js","components/Catalogue.js","components/LineAreaGraph.js","pages/Inventory.js","pages/Lobby.js","pages/PikingSystem.js","pdfConfig/pdfConfig.js","components/OrderPDF.js","pages/PurchaseOrder.js","components/App.js","pages/Login.js","index.js"],"names":["Footer","Date","getFullYear","toString","react_default","a","createElement","Fragment","className","src","alt","this","ActualYear","Component","server","url","automaticCloseAlert","type","message","Swal","fire","icon","title","showConfirmButton","timer","confirmCloseAlert","cookies","Cookies","setNewCookie","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","identification","value","timeExpiration","tiempo","expires","wrap","_context","prev","next","now","set","path","httpOnly","stop","_x","_x2","_x3","apply","arguments","getValueCookie","get","removeCookie","remove","baseURLAuth","selectWithDataService","authservices_regeneratorRuntime","object","route","URL","responseBack","axios","post","data","then","response","catch","error","abrupt","closeAllPages","_step","_iterator","_createForOfIteratorHelper","document","getElementsByClassName","s","n","done","style","display","err","e","f","openPage","id","page","getElementById","CloseAllPages","OpenCompanyDashBoard","_OpenCompanyDashBoard","boton","pagesFunction_regeneratorRuntime","click","OpenLobby","OpenCycleInventory","_OpenCycleInventory","_callee2","_context2","OpenCycleInventoryGraph","_callee3","_context3","OpenLogin","CloseCompanySession","closeSession","closeSession_regeneratorRuntime","window","location","reload","MenuCompany","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","href","onClick","role","data-bs-toggle","aria-expanded","index_esm","aria-labelledby","data-bs-target","aria-controls","tabIndex","data-bs-dismiss","aria-label","aria-current","status","Fail","code","Description","Undefined","Success","ServerFail","getInformationNoData","CABE_regeneratorRuntime","getInformationWithData","_ref2","create_Delete_Update_Information","_ref3","_x4","_x5","CompanyDashBoard","state","General","CompanysofUser","userName","info","temporal","setState","console","log","company","name","idCompany","directoryLogo","idTypeofUser","companyid","information","fullname","address","city","webSite","_this2","hidden","getCompanysAssigned","MenuCompanySelect_MenuCompany","map","i","SelectCompany","Footer_Footer","Menu","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","companyId","typeUser","enableModles","needModlesCharge","Modules","ProductInfo","CycleInventory","KPI","ReportGraphs","_AssignModules","Menu_regeneratorRuntime","sent","_AssignStatesModules","modules","element","AssignModules","Menu_createForOfIteratorHelper","t0","t1","finish","AssignStatesModules","bi_index_esm","tb_index_esm","fa_index_esm","bs_index_esm","_OpenKPIGraph","OpenKPIGraph","ProgressBar","props","min","max","size","progressBarRef","React","createRef","setValue","undefined","valor","height","ref","aria-valuenow","aria-valuemin","aria-valuemax","width","ModalOrders","Modal","show","fullscreen","onHide","close","Header","closeButton","Title","Body","children","formatInputDate","datevalue","arrayDate","split","formatInputDateQuery","date2","formatInputDateQuerytoInput","OrderArrayByDate","array","b","date1","temp","assign","CompareDates","datesta","dateend","DateFormatMAS90","date","arr","FormatQueryReturnDate","div","String","div2","FormatQueryReturnDateWithDash","getDateFromReports","datenow","getMonth","getDate","getDateYearMonthDayDash","getActualDateUTC","toISOString","getDataSet","headers","keys","dataset","columns","generateDataSetExcel_createForOfIteratorHelper","wch","fill","patternType","fgColor","rgb","bgColor","font","color","push","_step2","_iterator2","_step3","_iterator3","col","sz","alignment","horizontal","ExcelFile","ReactExport","ExcelSheet","ExcelDocument","filename","archname","dataSet","sheetname","getIndexElement","findIndex","toUpperCase","CycleInvetory","porcetaje","showModal1","showModal2","showModal3","showModal4","habilitar","chekvalue","checkHistory","selectedItem","selectedCycleInventory","secureTransaction","generalHistory","outBounds","purchaseOrders","generalHistoryFilter","oldCycleInventory","detailOldCycleSelected","detailOldCycleSelectedFilter","optionsSelect1","label","cycleInventoryStorage","closeBy","createBy","days","finishDate","lastUpadeDate","realFinishDate","startDate","updateBy","QuantityItems","FilterQuantity","Detail","DetailFilter","CheckedItems","secureTransaction1","valueSearchBar","CycleInvetory_regeneratorRuntime","search","target","getBySearchBar","valueRadioButton","stat","getByStat","searchOlderCycleInventoryDetail","filter","item","ItemCode","toLowerCase","includes","BIN","handleModalOpen","modal","handleModalClose","onChangeQuantity","index","indexOf","realQuantity","Number","onChangeFilterHistory","Type","ProgrressBarRef","productLine","DetailFilter4","difference","DetailFilter2","DetailFilter3","busqueda","current","idcompany","datos","getDetailCycleInventory","arrayChecked","allArray","allinformation","realData","mergeDataCheck","tempo","getCheckedItems","completePercentage","disableTransaction","realDays","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","_preConfirm","_callee8","actualDate","habilDays","_context8","getTime","getDay","allowOutsideClick","isLoading","_callee9","result","_context9","isConfirmed","_this3","getLastCycleInventory","_x6","enableTransaction","showDenyButton","backdrop","denyButtonText","_ref4","_callee11","_context11","_this4","isDenied","_x7","idQuant","resultquant","flag","idcycleInventoryHeader","countBy","systemQuantity","Quantity","count","total","CycleInvetory_createForOfIteratorHelper","addValue","cantidad","getOldCycleInventory","Start","End","data2","data3","generalHistoryData","pickList","transfer","purchase","adjust","InventStart","InventEnd","DeleteRepeatBins","Inv2Start","Inv2End","InvStart","getDataMayorInventory","InvEnd","categories","consolidateTable","it","fech","splice","_loop","outbounds","transfers","adjusts","InfoArray","_iterator4","_step4","row","Categoria","structure","NoOrder","BIN2","QuantityOrder","QuantityShipped","User","OrderNumber","description","OldQuantity","NewQuantity","username","Date2","_iterator5","_step5","CustomerName","CustomerNo","Cliente","NoCliente","OrdenNo","_iterator6","_step6","BINSalida","BINEntrada","_iterator7","_step7","VendorNo","VendorName","_iterator8","_step8","_iterator9","_step9","unshift","_iterator10","_step10","actualTypes","_iterator11","_step11","itemCode","val","html","_preConfirm2","_callee20","login","password","_context20","getPopup","querySelector","showValidationMessage","_step12","proccessInfo","JSON","parse","stringify","headerKeys","_iterator12","_step13","_iterator13","head","comm","comentary","_preConfirm3","_callee23","coment","_context23","_this5","diff","actual","start","date3","date4","date5","date6","preliminarDays","Math","abs","inhDays","_step14","copyOfHistory","_iterator14","addDifferenceSymbol","_step15","_iterator15","DetailFilter1","toFixed","_this6","disabled","startNewCycleInventory","endCycleInventory","openOlCycleInventory","isNaN","RemainingDays","ProgressBar_ProgressBar","autoComplete","placeholder","onChange","checked","htmlFor","components_ExcelDocument","generateInfo","getKPI","defaultValue","textStatus","addComentary","setCycleInventoryDetailInfo","updateCycleInventoryDetail","getGeneralHistory","updateSystemQuantity","ModalComponent","getOldDetailCycleInventory","startDate2","finishDate2","realFinishDate2","realQuantityDays","OrderNo","QuantityOrdered","getInfoProduct","react_select_esm","options","generateExcelDataForHistory","CycleInvetoryGraph","datapie","labels","datasets","backgroundColor","borderColor","borderWidth","optionsbar","plugins","text","responsive","interaction","mode","intersect","scales","x","stacked","y","databar","faker","datatype","number","stack","optionsarea","legend","position","dataarea","optionsLine2","databars","ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Filler","react_chartjs_2_dist","BarGraph","KPIInfo","KPIInfoFilter","GraphData","BarGraph1","data1","generateGraphDays","setTitle","completeInfo","setLabels","setData","getKPIInfo","ItemsContados","ExBinaria","BarGraph_BarGraph","CartaProducto","UPC","OnHand","Catalogue","Catalogo","ProductosMostrados","buscarProductos","Productos","producto","contiene","abbreviatedDesc","upc","retornarProducto","buscador","respuesta","setTimeout","focus","parametro","toLocaleLowerCase","Padre","Products","products","quantityOrdered","quantityReceived","totalCost","nombrePadre","obtenerProductos","aria-hidden","onKeyUp","getProducto","CartaProducto_CartaProducto","LineAreaGraph","Inventory","LineAreaGraph1","Catalogue_Catalogue","rows","LineAreaGraph_LineAreaGraph","Lobby","PikingSystem","pdfConfig","StyleSheet","create","HeaderStyle","HeaderMargin","top","BusinessLogo","left","ContactInfo","textAlign","fontSize","marginInfo","marginLeft","padding","flexDirection","marginBottom","OrderTitleStyle","marginTop","OrderInformation","TitleStyle","TextSeparator","InfoEncabezadoStyle","TextSeparator2","Table","CabeceraTabla","ColumnaNormal","ColumnaGrande","CuerpoTabla","ColumnaGrandeCuerpo","ColumnaNormalCuerpo","Fila","OrderPDF","showModal","colorButton","react_pdf_browser_es","minHeight","fixed","companyLogo","contactInfo","OrderTitle","OrderInfo1","OrderInfo2","tit","PurchaseOrder","purchaseOrderHeader","Vendor","Carrier","orderDate","completionDate","creationDate","vendorNo","vendorName","comment","State","companyPrintHeader","totals","finalquantityOrderedTotal","finalquantityOrderedReceived","finalTotalCost","disableHeader","modalPurchase","oldPurchaseOrderHeader","onTarget","ident","PurchaseOrder_regeneratorRuntime","quantity","unitPrice","calculateTotals","onTargerHeader","varChange","getPurchaseOrderHeader","createNewPurchaseOrder","getPrintHeaderCompany","disableTransactions","noOrder","orderNumber","enableTransactions","header","tot","defineHeader","_callee7","_context7","clearDashBoardPurchaseOrder","cost","totalquant","_ref5","totalquantOrdered","totalquantReceived","totalcost","PurchaseOrder_createForOfIteratorHelper","temporal2","order","OrderDate","CreationDate","Comment","Status","detailData","temporalproducts","prod","completeDesc","itemStatus","itemURLImage","lastUpdateDate","QuantityReceived","UnitCost","print","cancelPurchaseOrder","colorStateText","stateInWords","product","removeProduct","createPurchaseOrder","OrderPDF_OrderPDF","SelectOldPurchaseOrder","TotalQuantity","TotalCost","App","CompanyDashBoard_CompanyDashBoard","Menu_Menu","Lobby_Lobby","CycleInvetory_CycleInvetory","CycleInventoryGraph_CycleInvetoryGraph","KPI_KPI","Inventory_Inventory","PurchaseOrder_PurchaseOrder","PikingSystem_PikingSystem","Login","loginStorage","onChangeById","idState","onKeyDown","Login_regeneratorRuntime","btn","btn_logo","innerHTML","md5","datos2","token","surname","App_App","ReactDOM","render","StrictMode","Login_Login"],"mappings":"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","file":"static/js/main.ffc31e75.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/footer-style.css\"\r\n\r\nexport default class Footer extends Component {\r\n\r\n    ActualYear() {\r\n        const time = new Date()\r\n        var year = time.getFullYear()\r\n        return year.toString()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='GenFooter'>\r\n                    <div className='container-fluid justify-content-center text-center bg-dark text-white pt-4 GenFooter'>\r\n\r\n                        <div className='logoFooter pt-2 pb-2'>\r\n                            <img src='/assets/logoM.png' alt='MayalandSolutions' />\r\n\r\n                            <p>Copyright &#169; {this.ActualYear()} Mayaland Solutions.<br /> All Rights Reserved.</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","const server={\r\n  //url:\"http://localhost:4203\"\r\n  url: \"http://134.209.119.149:4203\"\r\n  //url:\"http://100.27.24.215:4200\"\r\n}\r\n\r\nexport default server","import Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nexport const automaticCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const confirmCloseAlert=(type,message)=>{\r\n    switch (type) {\r\n        case \"correct\":\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: message,\r\n                showConfirmButton: true, \r\n            })\r\n            break;\r\n\r\n        case \"incorrect\":\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: message,\r\n                showConfirmButton: true,\r\n            })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default  {automaticCloseAlert,confirmCloseAlert}","import Cookies from \"universal-cookie\";\r\n\r\n\r\nconst cookies=new Cookies();\r\n\r\n\r\nexport const setNewCookie=async(identification,value,timeExpiration)=>{\r\n    var tiempo=60*timeExpiration;\r\n    var expires = (new Date(Date.now()+ tiempo*1000));\r\n    cookies.set(identification, value, { path: \"*\",expires:expires,httpOnly:false});\r\n}\r\n\r\nexport const getValueCookie=(identification)=>{\r\n   return cookies.get(identification)\r\n}\r\n\r\nexport const removeCookie=(identification)=>{\r\n    cookies.remove(identification)\r\n}\r\n\r\n\r\n\r\nexport default {setNewCookie,getValueCookie,removeCookie}","import axios from \"axios\";\r\nimport server from \"../Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../../functions/alerts\"\r\nimport { Navigate} from \"react-router-dom\";\r\nimport React from \"react\"\r\nimport { getValueCookie } from \"../cookieService\";\r\nconst baseURLAuth=server.url+\"/auth\"\r\n\r\n\r\nexport const selectWithDataService=async (object,route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack\r\n    await axios.post(URL,{data:object}).then(\r\n\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\nexport const ProtectedRoute=({children})=>{\r\n    const temp=getValueCookie('sessionAuthToken')\r\n    \r\n    if(!temp){\r\n        return <Navigate to=\"/login\" />\r\n    }\r\n        return children\r\n    \r\n}\r\n\r\n\r\n\r\nexport default {selectWithDataService,ProtectedRoute}","\r\nexport function closeAllPages() {\r\n  let coleccion = document.getElementsByClassName('page');\r\n  for (let objetc of coleccion) {\r\n    objetc.style.display = 'none';\r\n  }\r\n}\r\n\r\nexport function openPage(id) {\r\n  let page = document.getElementById(id);\r\n  if (page) {\r\n    page.style.display = '';\r\n  }\r\n}\r\n\r\nexport default { closeAllPages, openPage }","import { closeAllPages,openPage } from \"./changeVisibility\";\r\nimport { removeCookie } from \"../services/cookieService\";\r\n\r\n\r\nexport function CloseAllPages() {\r\n    closeAllPages();\r\n}\r\n\r\nexport async function OpenCompanyDashBoard() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('catalogueOfCompanyActioner')\r\n    await boton.click()\r\n    openPage( \"App\");\r\n    openPage( \"CompanyDashBoard\");\r\n}\r\n\r\nexport function OpenLobby() {\r\n    CloseAllPages();\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"Lobby\")\r\n    //OpenPikingSystem()\r\n}\r\n\r\nexport async function OpenCycleInventory() {\r\n    CloseAllPages();\r\n    var boton=document.getElementById('actionatorCycleInventory')\r\n    await boton.click()\r\n    openPage( \"App\")\r\n    openPage( \"GeneralPages\")\r\n    openPage( \"CycleInventory\")\r\n}\r\nexport function OpenCycleInventoryGraph(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"CycleInventoryGraph\")\r\n}\r\n\r\nexport async function OpenKPIGraph(){\r\n    CloseAllPages()\r\n    var boton=document.getElementById('actionatorKPI')\r\n    await boton.click()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"KPIGraph\")\r\n}\r\n\r\nexport function OpenLogin() {\r\n    CloseAllPages();\r\n    openPage( \"login\")\r\n}\r\n\r\nexport  function OpenInventory(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"Inventory\")\r\n}\r\n\r\nexport function OpenPikingSystem(){\r\n    CloseAllPages()\r\n    openPage(\"App\");\r\n    openPage(\"GeneralPages\");\r\n    openPage(\"PikingSystem\");\r\n}\r\nexport function OpenPurchaseOrder(){\r\n    CloseAllPages()\r\n    openPage(\"App\")\r\n    openPage(\"GeneralPages\")\r\n    openPage(\"PurchaseOrder\")\r\n}\r\n\r\nexport function CloseCompanySession(){\r\n    removeCookie('Company')\r\n    OpenCompanyDashBoard()\r\n\r\n}\r\n\r\nexport default{OpenLogin,CloseAllPages,OpenCycleInventory,OpenLobby,OpenCompanyDashBoard,OpenCycleInventoryGraph,CloseCompanySession}","\r\nimport { removeCookie } from \"../services/cookieService\"\r\nimport { OpenLogin } from \"./pagesFunction\"\r\n\r\nexport const closeSession=async ()=>{\r\n    await removeCookie('userName')\r\n    await  removeCookie('name')\r\n    await removeCookie('surname')\r\n    await removeCookie('sessionAuthToken')\r\n    await removeCookie('Company')\r\n    window.location.reload()\r\n    await OpenLogin()\r\n}\r\n\r\nexport default {closeSession}","import React, { Component } from 'react'\r\nimport \"../css/menuCompany-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport {OpenCompanyDashBoard} from \"../functions/pagesFunction\"\r\n\r\nexport class MenuCompany extends Component {\r\n\r\n\r\n \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='menuCompany'>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                               \r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={()=>OpenCompanyDashBoard()}>\r\n                                    <img src='/assets/logoM.png' alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' />Hi {getValueCookie('name')} {getValueCookie('surname')}<AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                       \r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>OpenCompanyDashBoard()} href=\"/#\"><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" onClick={()=>closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","export const status = {\r\n\r\n    Fail:{code:-1,Description:\"Operation fail\"},\r\n    Undefined:{code:0,Description:\"Operation Undefined\"},\r\n    Success:{code:1,Description:\"operation successful\"},\r\n    ServerFail:{code:504,Description:'Server is not responding please contact the system administrators'}\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport server from \"../services/Connection/backEndLink\"\r\nimport {confirmCloseAlert} from \"../functions/alerts\"\r\nimport { status } from \"../components/Status\";\r\nimport { getValueCookie } from \"./cookieService\";\r\nconst baseURLAuth=server.url\r\n\r\n\r\nexport const getInformationNoData=async (route)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    await axios.get(URL).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n       \r\n        responseBack={status:status.ServerFail,response:[]};\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n       // confirmCloseAlert('incorrect','Error in the Server Response: '+status.ServerFail.Description)\r\n    })\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const getInformationWithData=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\nexport const create_Delete_Update_Information=async (route,data)=>{\r\n    const URL=baseURLAuth+route\r\n    var responseBack={\r\n        data:[],\r\n        status:status.Fail\r\n    }\r\n    if(getValueCookie('userName')){\r\n    await axios.post(URL,{data:data}).then(\r\n        response=>{\r\n            responseBack=response.data\r\n        }\r\n    ).catch(error=>{\r\n        confirmCloseAlert('incorrect','Error in the Server Response: '+error)\r\n    })\r\n}else{\r\n    window.location.reload()\r\n}\r\n\r\n\r\n    return responseBack\r\n}\r\n\r\n\r\n\r\n\r\nexport default {getInformationNoData,create_Delete_Update_Information,getInformationWithData}","import React, { Component } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport { MenuCompany } from \"../components/MenuCompanySelect\";\r\nimport \"../css/companyDash-style.css\"\r\nimport { getInformationWithData } from \"../services/CABE\";\r\n//import { OpenLobby } from '../functions/pagesFunction';\r\nimport { getValueCookie, setNewCookie } from \"../services/cookieService\";\r\nexport default class CompanyDashBoard extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            CompanysofUser: []\r\n        }\r\n    }\r\n\r\n    async getCompanysAssigned() {\r\n        const data = {\r\n            userName: getValueCookie('userName')\r\n        }\r\n        const info = await getInformationWithData('/company/CatalogueofCompanies', data)\r\n        if (info.status.code === 1) {\r\n            const temporal = this.state.General\r\n            temporal.CompanysofUser = info.data\r\n            this.setState({ General: temporal })\r\n            console.log(info)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async SelectCompany(company) {\r\n            setNewCookie('Company', company.name , 50)\r\n            setNewCookie('CompanyId',company.idCompany,50)\r\n            setNewCookie('CompanyLogo',company.directoryLogo,50)\r\n            setNewCookie('TypeUser',company.idTypeofUser,50)\r\n            const data={\r\n                companyid:company.idCompany\r\n            }\r\n            const information= await getInformationWithData('/company/information',data)\r\n    \r\n            if(information.status.code===1){\r\n                setNewCookie('fullName',information.data[0].fullname,50)\r\n                setNewCookie('address',information.data[0].address,50)\r\n                setNewCookie('warehouse',information.data[0].city+\" Warehouse\",50)\r\n                setNewCookie('website',information.data[0].webSite,50)\r\n            }\r\n            window.location.reload()  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"companydash\">\r\n                <button hidden id=\"catalogueOfCompanyActioner\" onClick={() => this.getCompanysAssigned()}></button>\r\n                <MenuCompany />\r\n                <div className=\"container-fluid generalContainer contPrincipal\" id=\"actualPage\">\r\n                    <div className=\"title\">\r\n                        <p className=\"text-center display-3\">Hello, please select a Company: </p>\r\n                    </div>\r\n                    <div className=\"container-fluid decoratorBar\"></div>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {\r\n                                    this.state.General.CompanysofUser.map((company, i) => (\r\n                                        <div key={i} className=\"contCompany\" onClick={() => this.SelectCompany(company)}>\r\n                                            <div className=\"titecompany text-center\">\r\n                                                <img src={company.directoryLogo} alt=\"logo\" />\r\n                                                <p>{company.name}<br /> <br /><br /><br /></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport \"../css/menu-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\nimport { AiFillCaretDown, AiOutlineReconciliation, AiOutlineClockCircle, AiOutlineHome, AiOutlineUser, AiOutlineLogout, AiFillCloseCircle, AiOutlineAreaChart, AiTwotoneSnippets,AiFillDropboxSquare } from \"react-icons/ai\";\r\nimport { BiCartAlt } from \"react-icons/bi\";\r\nimport { TbBuildingWarehouse } from \"react-icons/tb\";\r\nimport { FaClipboardList } from \"react-icons/fa\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { CloseCompanySession, OpenCycleInventory, OpenCycleInventoryGraph, OpenInventory,OpenPikingSystem, OpenKPIGraph, OpenLobby,OpenPurchaseOrder } from '../functions/pagesFunction';\r\nimport { closeSession } from '../functions/closeSession';\r\nimport { BiExit } from \"react-icons/bi\";\r\nimport {BsBoxSeam} from \"react-icons/bs\"\r\nimport { getInformationWithData } from '../services/CABE';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        General: {\r\n            directoryLogo: getValueCookie('CompanyLogo'),\r\n            companyId: getValueCookie('CompanyId'),\r\n            typeUser: getValueCookie('TypeUser'),\r\n            enableModles:[],\r\n            needModlesCharge:true\r\n        },\r\n        Modules:{\r\n            ProductInfo:true,\r\n            CycleInventory:true,\r\n            KPI:true,\r\n            ReportGraphs:true\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    async AssignModules() {\r\n        const data = {\r\n            typeUser: this.state.General.typeUser,\r\n            companyId: this.state.General.companyId\r\n        }\r\n        const response = await getInformationWithData('/company/Modules', data)\r\n        \r\n        if (response.status.code === 1) {\r\n            const temporal=this.state.General\r\n            temporal.enableModles=response.data\r\n            this.setState({General:temporal})\r\n        }\r\n\r\n    }\r\n\r\n    async AssignStatesModules(){\r\n        if(this.state.General.needModlesCharge){\r\n            const temporal=this.state.General\r\n            temporal.needModlesCharge=false\r\n            const modules=this.state.Modules\r\n            await this.AssignModules()\r\n            \r\n            for (const element of this.state.General.enableModles) {\r\n                \r\n                switch(element.name){\r\n                    case 'Cycle Inventory':\r\n                        modules.CycleInventory=false\r\n                        break;\r\n                    case 'KPI':\r\n                        modules.KPI=false;\r\n                        break\r\n                    case 'Reports Graphs':\r\n                        modules.ReportGraphs=false;\r\n                        break\r\n                    case 'Product Information':\r\n                        modules.ProductInfo=false;\r\n                        break\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            this.setState({General:temporal,Modules:modules})\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar justify-content-start navbar-dark text-light lateralMenu fixed-top p-5 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className='row align-items-start'>\r\n                            <div className='col'>\r\n                                <button onClick={()=>this.AssignStatesModules()} className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\" aria-controls=\"offcanvasNavbar\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className='col'>\r\n                                <a className=\"navbar-brand\" href='/#' onClick={() => OpenLobby()}>\r\n                                    <img src={this.state.General.directoryLogo} alt='Company' />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row text-light'>\r\n                            <div className='col'>\r\n                                <div className=\"nav-item dropdown dissapearObject\">\r\n                                    <a className=\"nav-link text-light\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <AiOutlineUser className='h3' /> Hi {getValueCookie('name')} {getValueCookie('surname')} <AiFillCaretDown />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => OpenLobby()} href=\"/#\"><AiOutlineSetting /> User Data</a></li>\r\n                                        <li><a className=\"dropdown-item text-light h5\" onClick={() => closeSession()} href=\"/#\"><AiOutlineLogout /> Logout</a></li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=''>\r\n                                    <a className=\"nav-link text-light appearMovileObject\" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasUser\" aria-controls=\"offcanvasNavbar\">\r\n                                        <AiOutlineUser className='h2' />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"offcanvas offcanvas-start\" tabIndex=\"-1\" id=\"offcanvasNavbar\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Menu Options</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => OpenLobby()}>Home <AiOutlineHome /></a>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Inventory management <AiOutlineReconciliation /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Products Information <BiCartAlt /></a></li>\r\n                                            <li hidden={this.state.Modules.CycleInventory} onClick={() => OpenCycleInventory()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cyclical Inventory <AiOutlineClockCircle /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Warehouse management <TbBuildingWarehouse /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li  onClick={() => OpenPikingSystem()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Picking System<FaClipboardList /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li hidden={(this.state.Modules.ProductInfo&&this.state.Modules.CycleInventory)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Purchase Order <AiFillDropboxSquare /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ProductInfo} onClick={() => OpenPurchaseOrder()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Purchase Order <BsBoxSeam /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n\r\n                                    <li hidden={(this.state.Modules.ReportGraphs&&this.state.Modules.KPI)?true:false} className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link \" href=\"/#\" id=\"offcanvasNavbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                            Reports <AiOutlineAreaChart /> <AiFillCaretDown />\r\n                                        </a>\r\n                                        <ul className=\"dropdown-menu dropDownMenu\" aria-labelledby=\"offcanvasNavbarDropdown\">\r\n                                            <li hidden={this.state.Modules.ReportGraphs}  onClick={() => OpenCycleInventoryGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">Cyclical Inventory <AiOutlineClockCircle /></a></li>\r\n                                            <li hidden={this.state.Modules.KPI} onClick={() => OpenKPIGraph()}><a className=\"dropdown-item text-light\" href=\"/#\" data-bs-dismiss=\"offcanvas\">KPI (Key Performance Indicators) <AiTwotoneSnippets /></a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" data-bs-dismiss=\"offcanvas\" onClick={() => CloseCompanySession()}>Close Company Session <BiExit /></a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"offcanvas offcanvas-end\" tabIndex=\"-1\" id=\"offcanvasUser\" aria-labelledby=\"offcanvasNavbarLabel\">\r\n                            <div className=\"offcanvas-header lateralMenu\">\r\n                                <h4 className=\"offcanvas-title\" id=\"offcanvasNavbarLabel\">Hi {getValueCookie('name')} {getValueCookie('surname')}</h4>\r\n                                <button type=\"button\" className=\"text-reset especialButtonClose\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"><AiFillCloseCircle /></button>\r\n                            </div>\r\n                            <div className=\"offcanvas-body lateralMenu\">\r\n                                <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => OpenLobby()}><AiOutlineSetting /> User Data</a>\r\n                                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\" onClick={() => closeSession()}><AiOutlineLogout /> Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div className='filling'></div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default  class ProgressBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.progressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        min:0, \r\n        max:100,\r\n        value:0,\r\n        size:50\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setValue(95);\r\n    }\r\n\r\n    \r\n    configBar(min,max,size = 25){\r\n        this.setState({min:min});\r\n        this.setState({max:max});\r\n        this.setState({value:min});\r\n        this.setState({size:size});\r\n    }\r\n\r\n    setValue(valor){\r\n        if(valor>=this.state.min && valor <= this.state.max){ \r\n            this.setState({value:valor});\r\n        }else{\r\n            console.error('ERROR: La cantidad en la progress bar no esta dentro de los limites establecidos, revise el codigo de configuración');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"progress\" style={{height: this.state.size+\"px\"}} ref={this.progressBarRef}>\r\n                <div\r\n                    className=\"progress-bar progress-bar-striped progress-bar-animated bg-primary \"\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={this.state.value}\r\n                    aria-valuemin={this.state.min}\r\n                    aria-valuemax={this.state.max}\r\n                    style={{ width: this.state.value+\"%\" }}>\r\n                    {this.state.value}%\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Modal} from 'react-bootstrap'\r\nimport '../css/table-responsive.css'\r\nconst ModalOrders = (props) => {\r\n    return (\r\n      <>\r\n      \r\n        <Modal title={props.title} show={props.show} fullscreen={true} onHide={props.close}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{props.title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className='container'>\r\n              {props.children}\r\n              </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n \r\nexport default ModalOrders;","export function formatInputDate(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('-')\r\n    if(arrayDate.length===3){\r\n    return arrayDate[1]+\"/\"+arrayDate[2]+\"/\"+arrayDate[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function formatInputDateQuery(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('T')\r\n    if(arrayDate.length===2){\r\n    const date2=arrayDate[0].split('-')\r\n    if(date2.length===3){\r\n        return date2[1]+\"/\"+date2[2]+\"/\"+date2[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function formatInputDateQuerytoInput(datevalue){\r\n    if(datevalue!==null&&datevalue!==undefined&&datevalue!==\"\"){\r\n    var arrayDate=datevalue.split('T')\r\n    if(arrayDate.length===2){\r\n    const date2=arrayDate[0].split('-')\r\n    if(date2.length===3){\r\n        return date2[0]+\"-\"+date2[1]+\"-\"+date2[2]\r\n    }else{\r\n        return \"\"\r\n    }\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nreturn \"\"\r\n}\r\n\r\nexport function OrderArrayByDate(array){\r\n    for(let a=0;a<array.length;a++){\r\n        for(let b=0;b<(array.length-a-1);b++){\r\n            const date1=array[b].Date.split('/')\r\n            const date2=array[b+1].Date.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n            \r\n            if(date3>date4){\r\n                var temp=Object.assign({},array[b])\r\n                array[b]=Object.assign({},array[b+1])\r\n                array[b+1]=Object.assign({},temp)\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\nexport function CompareDates(datesta,dateend){\r\n    \r\n            const date1=datesta.split('/')\r\n            const date2=dateend.split('/')\r\n            if(date1.length===3&&date2.length===3){\r\n            const date3=new Date(date1[2]+\"-\"+date1[0]+\"-\"+date1[1])\r\n            const date4=new Date(date2[2]+\"-\"+date2[0]+\"-\"+date2[1])\r\n           \r\n            if(date3<=date4){\r\n                return true\r\n            }\r\n\r\n            return false\r\n        }\r\n  \r\n\r\n    }\r\n\r\nexport function DateFormatMAS90(date){\r\n    var arr=date.split('-')\r\n    if(arr.length===3){\r\n        return arr[1]+\"/\"+arr[2]+\"/\"+arr[0]\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function FormatQueryReturnDate(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        var div2=div[0].split('-')\r\n        if(div2.length===3){\r\n            return div2[1]+\"/\"+div2[2]+\"/\"+div2[0]\r\n        }else{\r\n            return \"\"\r\n        }\r\n\r\n\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function FormatQueryReturnDateWithDash(date){\r\n    var div=String(date).split('T')\r\n    if(div.length===2){\r\n        return div[0].split('-')\r\n    }else{\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport function getDateFromReports(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"-\"+datenow.getDate()+\"-\"+datenow.getFullYear()\r\n}\r\n\r\nexport function getDateYearMonthDayDash(){\r\n    const datenow=new Date()\r\n    return datenow.getFullYear()+'-'+(datenow.getMonth()+1)+\"-\"+datenow.getDate()\r\n}\r\n\r\nexport function ActualDate(){\r\n    const datenow=new Date()\r\n    return (datenow.getMonth()+1)+\"/\"+datenow.getDate()+\"/\"+datenow.getFullYear()\r\n}\r\nexport function getActualDateUTC(){\r\n    const datenow=new Date()\r\n    return datenow.toISOString()\r\n}\r\n\r\n\r\nexport default {formatInputDate,OrderArrayByDate,FormatQueryReturnDate,ActualDate,getActualDateUTC,formatInputDateQuery,FormatQueryReturnDateWithDash,\r\n    getDateYearMonthDayDash,CompareDates,formatInputDateQuerytoInput,DateFormatMAS90}","export function getDataSet(info, headers,keys) {\r\n    var dataset = [{\r\n        columns: [],\r\n        data: []\r\n    }]\r\n   \r\n    for (const column of headers) {\r\n        const data = {\r\n            title: column, width: { wch: 10 },\r\n            style: {\r\n                fill: {\r\n                    patternType: \"solid\",\r\n                    fgColor: { rgb: \"000000\" },\r\n                    bgColor: { rgb: \"FFFFFF\" }\r\n                },\r\n                font:{\r\n                    color:{rgb:\"FFFFFF\"}\r\n                }\r\n            }\r\n        }\r\n\r\n        dataset[0].columns.push(data)\r\n    }\r\n\r\n    for(const data of info){\r\n        var temp=[]\r\n        for (const key of keys) {\r\n            const col= {\r\n                value: String(data[key]),\r\n                style: {\r\n                    font: {sz: \"10\"},\r\n                    alignment:{horizontal:\"left\"}\r\n                }\r\n            }\r\n            temp.push(col)\r\n        }\r\n    dataset[0].data.push(temp)\r\n\r\n    }\r\n\r\n    return dataset\r\n}\r\n\r\nexport default {getDataSet}","import ReactExport from 'react-data-export';\r\nimport React from 'react';\r\nimport {AiFillFileExcel } from \"react-icons/ai\"\r\nconst ExcelFile = ReactExport.ExcelFile\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet\r\n\r\nconst ExcelDocument=(props)=>{\r\n    return(\r\n        <>\r\n        \r\n        <ExcelFile  element={<button type=\"button\" hidden={props.hidden} className=\"btn btn-success btn-lg w-100 h-100\">Download Report In XLSX <AiFillFileExcel/></button>} filename={props.archname}>\r\n            <ExcelSheet dataSet={props.data} name={props.sheetname}/>\r\n        </ExcelFile>\r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExcelDocument","export function getIndexElement(array, key, element){\r\n    const index = array.findIndex(code => {  \r\n        return String(code[key]).toUpperCase() === element.toUpperCase()\r\n    })\r\n\r\n    return index\r\n}\r\n\r\nexport default {getIndexElement}","import React, { Component } from 'react'\r\nimport ProgressBar from '../components/ProgressBar'\r\nimport { AiOutlineSearch, AiFillCalendar } from \"react-icons/ai\"\r\nimport '../css/table-responsive.css'\r\nimport '../css/general-style.css'\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { automaticCloseAlert } from '../functions/alerts'\r\nimport { CompareDates, DateFormatMAS90, formatInputDate, formatInputDateQuery, FormatQueryReturnDate, FormatQueryReturnDateWithDash, getActualDateUTC, getDateFromReports, getDateYearMonthDayDash, OrderArrayByDate } from '../functions/dateFormat'\r\nimport { getDataSet } from '../functions/generateDataSetExcel'\r\nimport ExcelDocument from '../components/ExcelDocument'\r\nimport Select from 'react-select';\r\nimport { getIndexElement } from '../functions/searchInObject'\r\n\r\n\r\nexport default class CycleInvetory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.ProgrressBarRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        dataset: [{\r\n            columns: [],\r\n            data: []\r\n        }],\r\n        porcetaje: 0,\r\n        General: {\r\n            showModal1: false,\r\n            showModal2: false,\r\n            showModal3: false,\r\n            showModal4: false,\r\n            habilitar: false,\r\n            chekvalue: '0',\r\n            checkHistory: '0',\r\n            selectedItem: '',\r\n            selectedCycleInventory: null,\r\n            secureTransaction: false,\r\n            generalHistory: [],\r\n            outBounds: [],\r\n            purchaseOrders: [],\r\n            generalHistoryFilter: [],\r\n            oldCycleInventory: [],\r\n            detailOldCycleSelected: [],\r\n            detailOldCycleSelectedFilter: [],\r\n            optionsSelect1:[{value:'All', label:'All'}],\r\n            \r\n        },\r\n\r\n        cycleInventoryStorage: {\r\n            Header: {\r\n                closeBy: null,\r\n                createBy: '',\r\n                days: 0,\r\n                finishDate: '',\r\n                id: 0,\r\n                lastUpadeDate: '',\r\n                realFinishDate: '',\r\n                startDate: '',\r\n                status: 0,\r\n                updateBy: '',\r\n                QuantityItems:0,\r\n                FilterQuantity:0\r\n            },\r\n            Detail: [],\r\n            DetailFilter: [],\r\n            CheckedItems: []\r\n        },\r\n        secureTransaction1:false\r\n\r\n    }\r\n    valueSearchBar = async e => {\r\n        let search = e.target.value\r\n        this.getBySearchBar(search)\r\n    }\r\n\r\n    valueRadioButton = async e => {\r\n        document.getElementById('searchCycleInv1').value = \"\"\r\n        let stat = e.target.value\r\n        const temporal = this.state.General\r\n        temporal.chekvalue = stat\r\n        this.setState({ General: temporal })\r\n        this.getByStat(stat)\r\n    }\r\n\r\n\r\n\r\n    searchOlderCycleInventoryDetail = e => {\r\n        let search = e.target.value\r\n\r\n\r\n        var DetailFilter = this.state.General.detailOldCycleSelected.filter((item) => {\r\n            if (item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.status.toString().toLowerCase().includes(search.toLowerCase())) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        \r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelectedFilter = DetailFilter\r\n        \r\n        this.setState({ General: temporal})\r\n    }\r\n\r\n\r\n\r\n    getBySearchBar(search) {\r\n        \r\n        if (search !== \"\" && this.state.General.chekvalue !== '-1') {\r\n            if (this.state.General.chekvalue==='0'||this.state.General.chekvalue==='1'){\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(this.state.General.chekvalue)) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            \r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter\r\n            temporal.Header.FilterQuantity=DetailFilter.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }else if(this.state.General.chekvalue==='2'){\r\n            var DetailFilter4 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase())) && item.status.toString().toLowerCase().includes(\"1\")&&item.difference!==0) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            \r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter4\r\n            temporal.Header.FilterQuantity=DetailFilter4.length\r\n            this.setState({ cycleInventoryStorage: temporal }) \r\n        }\r\n        } else if (search !== \"\") {\r\n            \r\n            var DetailFilter2 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if ((item.ItemCode.toString().toLowerCase().includes(search.toLowerCase()) || item.BIN.toString().toLowerCase().includes(search.toLowerCase()) || item.productLine.toString().toLowerCase().includes(search.toLowerCase()) || item.Description.toString().toLowerCase().includes(search.toLowerCase()))) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = DetailFilter2\r\n            temporal.Header.FilterQuantity=DetailFilter2.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n\r\n        } else {\r\n            this.getByStat(this.state.General.chekvalue)\r\n        }\r\n\r\n    }\r\n\r\n    getByStat(stat) {\r\n        if (stat !== \"-1\") {\r\n            if(stat===\"0\"||stat===\"1\"){\r\n            var DetailFilter = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.status.toString().toLowerCase().includes(stat.toLowerCase())) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            const temporal = this.state.cycleInventoryStorage\r\n\r\n            temporal.DetailFilter = DetailFilter\r\n            temporal.Header.FilterQuantity=DetailFilter.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }else if (stat===\"2\"){\r\n           \r\n            var DetailFilter3 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n                if (item.difference!==0) {\r\n                    return item\r\n                } else {\r\n                    return null\r\n                }\r\n            })\r\n            const temporal = this.state.cycleInventoryStorage\r\n\r\n            temporal.DetailFilter = DetailFilter3\r\n            temporal.Header.FilterQuantity=DetailFilter3.length\r\n            this.setState({ cycleInventoryStorage: temporal }) \r\n        \r\n        }\r\n\r\n            \r\n        } else {\r\n            const temporal = this.state.cycleInventoryStorage\r\n            temporal.DetailFilter = temporal.Detail\r\n            temporal.Header.FilterQuantity=temporal.Detail.length\r\n            this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCategory(stat) {\r\n        var busqueda = \"\"\r\n        switch (stat) {\r\n            case \"0\":\r\n                busqueda = \"purchase\"\r\n                break;\r\n            case \"1\":\r\n                busqueda = \"transferencia\"\r\n                break;\r\n            case \"2\":\r\n                busqueda = \"ajuste\"\r\n                break;\r\n            case \"3\":\r\n                busqueda = \"outbound\"\r\n                break;\r\n            default:\r\n                busqueda = \"\"\r\n                break;\r\n        }\r\n        return busqueda;\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        this.ProgrressBarRef.current.setValue(0);\r\n\r\n    }\r\n\r\n    async getLastCycleInventory() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const route = '/inventory/lastCycle/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header = datos.data[0]\r\n\r\n                if (temporal.Header.status === 0) {\r\n                    \r\n                    await this.getDetailCycleInventory(temporal.Header.id, \"actual\")\r\n                } else {\r\n                    temporal.Detail = []\r\n                    temporal.DetailFilter = []\r\n                    await this.setState({ cycleInventoryStorage: temporal })\r\n                }\r\n            } else {\r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Header.status = 1\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async getOldCycleInventory() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const route = '/invertory/oldCycleInventorys/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        if (datos.status.code === 1) {\r\n            if (datos.data.length > 0) {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = datos.data\r\n                await this.setState({ General: temporal })\r\n\r\n            } else {\r\n                const temporal = this.state.General\r\n                temporal.oldCycleInventory = []\r\n                await this.setState({ General: temporal })\r\n            }\r\n        }\r\n    }\r\n\r\n    mergeDataCheck(arrayChecked, allArray) {\r\n\r\n        for (let a = 0; a < arrayChecked.length; a++) {\r\n            for (let b = 0; b < allArray.length; b++) {\r\n                if (arrayChecked[a].ItemCode === allArray[b].ItemCode && arrayChecked[a].BIN === allArray[b].BIN && arrayChecked[a].status === 1) {\r\n                    allArray[b] = arrayChecked[a]\r\n                    break\r\n                }\r\n            }\r\n\r\n        }\r\n        return allArray\r\n    }\r\n\r\n\r\n    async getDetailCycleInventory(id, type) {\r\n        const data = {\r\n            id: id,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n\r\n        if (type === \"actual\") {\r\n            const route2 = '/inventory/allProductsCycle/post';\r\n            const allinformation = await getInformationWithData(route2, data)\r\n\r\n            if (datos.status.code === 1 && allinformation.status.code === 1) {\r\n                const realData = this.mergeDataCheck(datos.data, allinformation.data)\r\n                \r\n                const temporal = this.state.cycleInventoryStorage\r\n                temporal.Detail = realData\r\n                temporal.DetailFilter = realData\r\n                temporal.Header.QuantityItems=realData.length\r\n                temporal.Header.FilterQuantity=realData.length\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                const tempo = this.state.cycleInventoryStorage\r\n                tempo.CheckedItems = await this.getCheckedItems()\r\n                await this.setState({ cycleInventoryStorage: tempo })\r\n                await this.getByStat('0')\r\n                await this.completePercentage()\r\n            }\r\n        } else if (type === \"old\") {\r\n            const temporal = this.state.General\r\n            temporal.detailOldCycleSelected = datos.data\r\n            temporal.detailOldCycleSelectedFilter = datos.data\r\n            await this.setState({ General: temporal })\r\n        }\r\n\r\n    }\r\n    getOldDetailCycleInventory(item) {\r\n        const temporal = this.state.General\r\n        temporal.selectedCycleInventory = item\r\n        this.setState({ General: temporal })\r\n        this.getDetailCycleInventory(item.id, \"old\")\r\n    }\r\n\r\n\r\n    enableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    async disableTransaction() {\r\n        const temporal = this.state.General\r\n        temporal.secureTransaction = true\r\n        await this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async startNewCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            days: 0,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            userName: getValueCookie('userName'),\r\n            realDays:0\r\n        }\r\n        await Swal.fire({\r\n            title: 'Number of Days of Cyclical Inventory',\r\n            input: 'number',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Confirm',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async (days) => {\r\n                data.days = days\r\n                var actualDate = new Date();\r\n                var finishDate = new Date(actualDate.getTime() + Number(Number(days) * 86400000))\r\n                var habilDays=0\r\n                while (actualDate<=finishDate){\r\n                    if(actualDate.getDay()===0||actualDate.getDay()===6){\r\n                        habilDays++\r\n                    }\r\n                    actualDate=new Date(actualDate.getTime()+86400000)\r\n                }\r\n                \r\n                data.realDays=Number(data.days)+Number(habilDays)\r\n                return await create_Delete_Update_Information('/invertory/newCycle/post', data)\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n\r\n            if (result.isConfirmed) {\r\n                await this.getLastCycleInventory()\r\n                await Swal.fire({\r\n                    title: `The Cyclical Inventory was created!`,\r\n                })\r\n\r\n            }\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    async endCycleInventory() {\r\n        this.disableTransaction()\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            userName: getValueCookie('userName')\r\n        }\r\n        await Swal.fire({\r\n            title: 'Do you want to end the actual Cyclical Inventory?',\r\n            showDenyButton: true,\r\n            backdrop:true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    const res = await create_Delete_Update_Information('/invertory/closeCycle/post', data)\r\n                    if (res.status.code === 1) {\r\n                        await this.getLastCycleInventory()\r\n                        Swal.fire('Cyclical inventory are closed!', '', 'success')\r\n                        this.setState({ porcetaje: 0 })\r\n                        this.ProgrressBarRef.current.setValue(0);\r\n\r\n                    } else {\r\n                        Swal.fire('Cyclical inventory could not be closed', '', 'error')\r\n                    }\r\n\r\n                } else if (result.isDenied) {\r\n                    Swal.fire('Changes are not saved', '', 'info')\r\n                }\r\n            }\r\n\r\n        })\r\n        this.enableTransaction()\r\n    }\r\n\r\n    async setCycleInventoryDetailInfo(item, idQuant) {\r\n        this.disableTransaction()\r\n        const data={\r\n            ItemCode:item.ItemCode,\r\n            BIN:item.BIN,\r\n            company:getValueCookie('Company')\r\n        }\r\n\r\n        const resultquant= await getInformationWithData('/invertory/getQuantity/post',data)\r\n        if(resultquant.status.code===1){\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        var flag = true\r\n        if (index !== -1) {\r\n\r\n            if (temporal.Detail[index].idcycleInventoryHeader !== 0) {\r\n                flag = false\r\n            }\r\n\r\n            temporal.Detail[index].idcycleInventoryHeader = this.state.cycleInventoryStorage.Header.id\r\n            \r\n            temporal.Detail[index].countBy = getValueCookie('userName')\r\n            temporal.Detail[index].date = getActualDateUTC()\r\n            temporal.Detail[index].systemQuantity=resultquant.data[0].Quantity\r\n            temporal.Detail[index].difference = temporal.Detail[index].realQuantity - resultquant.data[0].Quantity\r\n            temporal.Detail[index].status = 1\r\n            var response\r\n            if (flag) {\r\n                response = await create_Delete_Update_Information('/invertory/insertDetailCycle/post', temporal.Detail[index])\r\n            } else {\r\n                response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n            }\r\n            if (response.status.code === 1) {\r\n\r\n                automaticCloseAlert('correct', 'The item was check!')\r\n                await this.setState({ cycleInventoryStorage: temporal })\r\n                await this.completePercentage()\r\n            } else {\r\n                automaticCloseAlert('incorrect', 'The item was not checked')\r\n            }\r\n        }\r\n        const tempo = this.state.cycleInventoryStorage\r\n        tempo.CheckedItems = await this.getCheckedItems()\r\n        await this.setState({ cycleInventoryStorage: tempo })\r\n        await this.enableTransaction()\r\n        }\r\n\r\n    }\r\n\r\n    async updateCycleInventoryDetail(item) {\r\n        const temporal = this.state.cycleInventoryStorage\r\n        const index = temporal.Detail.indexOf(item)\r\n        if (index !== -1) {\r\n            temporal.Detail[index].countBy = null\r\n            temporal.Detail[index].status = 0\r\n            await this.setState({ cycleInventoryStorage: temporal })\r\n        }\r\n\r\n    }\r\n    completePercentage() {\r\n        this.setState({ porcetaje: 0 })\r\n        var count = 0;\r\n        var total = this.state.cycleInventoryStorage.Detail.length\r\n\r\n        for (const item of this.state.cycleInventoryStorage.Detail) {\r\n            if (item.status === 1)\r\n                count++\r\n        }\r\n\r\n        for (let a = 0; a < ((count * 100) / total); a++) {\r\n            this.addValue()\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    textStatus(value) {\r\n        if (value === 0) {\r\n            return \"Not checked\"\r\n        }\r\n        return \"Checked\"\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    addValue() {\r\n        let cantidad = this.state.porcetaje;\r\n        cantidad++;\r\n        this.setState({ porcetaje: cantidad });\r\n        this.ProgrressBarRef.current.setValue(cantidad);\r\n    }\r\n\r\n    handleModalOpen = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = true\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n    handleModalClose = (modal) => {\r\n        const temporal = this.state.General\r\n        temporal[modal] = false\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async openOlCycleInventory() {\r\n        const temporal = this.state.General\r\n        temporal.detailOldCycleSelected = []\r\n        temporal.detailOldCycleSelectedFilter = []\r\n        temporal.selectedCycleInventory = null\r\n        this.setState({ General: temporal })\r\n        this.getOldCycleInventory()\r\n        await this.handleModalOpen(\"showModal2\")\r\n    }\r\n\r\n    async getInfoProduct() {\r\n        this.setState({secureTransaction1:true})\r\n        var date1 = formatInputDate(document.getElementById('searchHistoryCycleInvDate1').value)\r\n        var date2 = formatInputDate(document.getElementById('searchHistoryCycleInvDate2').value)\r\n        const data = {\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            Start: date1,\r\n            End: date2,\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId')\r\n        }\r\n        const data2={\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId'),\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            date:date1\r\n        }\r\n        const data3={\r\n            company:getValueCookie('Company'),\r\n            idcompany:getValueCookie('CompanyId'),\r\n            ItemCode: this.state.General.selectedItem.ItemCode,\r\n            date:date2\r\n        }\r\n\r\n        //AQUI COLOCAR LAS LLAMADAS A LOS DATOS\r\n        //const route = '/invertory/getGeneralHistory/post';\r\n        const generalHistoryData = await getInformationWithData('/invertory/getGeneralHistory/post', data)\r\n        const pickList = await getInformationWithData('/pickList/history/getByItemCode', data)\r\n        const transfer = await getInformationWithData('/transfer/history/getByItemCode', data)\r\n        const purchase = await getInformationWithData('/purchase/history/getByItemCode', data)\r\n        const adjust = await getInformationWithData('/adjustment/history/getByItemCode', data)\r\n        const InventStart=await getInformationWithData('/Items/getQuantityHistory',data2)\r\n        const InventEnd=await getInformationWithData('/Items/getQuantityHistory',data3)\r\n        \r\n        if (InventStart.status.code===1&&InventEnd.status.code===1&&generalHistoryData.status.code === 1 && pickList.status.code === 1 && transfer.status.code === 1 && purchase.status.code === 1 && adjust.status.code === 1) {\r\n            const Inv2Start=await this.DeleteRepeatBins(data2,InventStart.data)\r\n            const Inv2End=await this.DeleteRepeatBins(data3,InventEnd.data)\r\n            const InvStart=this.getDataMayorInventory(Inv2Start,'Start')\r\n            const InvEnd=this.getDataMayorInventory(Inv2End,'End')\r\n            const categories=this.state.General\r\n            categories.optionsSelect1=[{ value: 'All', label: 'All'}]\r\n            this.setState({General:categories})\r\n            await this.consolidateTable(pickList.data, purchase.data, transfer.data, adjust.data, generalHistoryData.data,InvStart,InvEnd)\r\n        }\r\n        this.setState({secureTransaction1:false})\r\n    }\r\n\r\n   async DeleteRepeatBins(data,information){\r\n    const result=await getInformationWithData('/inventory/getDeletedBins/post',data)\r\n    if(result.status.code===1){\r\n        \r\n        for(let it of result.data) {\r\n            for (let a = information.length-1; a >= 0; a--) {\r\n                if(information[a].BIN===it.BIN&&CompareDates(formatInputDateQuery(information[a].fech),formatInputDateQuery(it.date))){\r\n                    information.splice(a,1)\r\n                }\r\n            }\r\n        }\r\n        \r\n        return information\r\n    }else{\r\n        return []\r\n    }\r\n   }\r\n    getDataMayorInventory(data,type){\r\n       var information=[]\r\n       for (const it of data) {\r\n            const index=information.findIndex(element=>{\r\n                return String(element.BIN).toLowerCase()===it.BIN.toLowerCase()\r\n            })\r\n            if(index===-1){\r\n                if(type==='Start'){\r\n                it.Type='Inventory Start'\r\n                }else{\r\n                it.Type='Inventory End'\r\n                }\r\n                information.push(it)\r\n            }\r\n       } \r\n\r\n\r\n       return information\r\n    }\r\n\r\n\r\n\r\n    async consolidateTable(outbounds, purchase, transfers, adjusts, generalHistory,InvStart,InvEnd) {\r\n        \r\n\r\n        var InfoArray = []\r\n\r\n        for (const row of generalHistory) {\r\n            if (row.Categoria !== \"General\") {\r\n                const structure = {\r\n                    Type: '',\r\n                    NoOrder: '',\r\n                    Description:'',\r\n                    BIN: '',\r\n                    BIN2: '',\r\n                    QuantityOrder: '',\r\n                    QuantityShipped: '',\r\n                    User: '',\r\n                    Date: ''\r\n                }\r\n                structure.Type = row.Categoria\r\n                structure.NoOrder = row.OrderNumber\r\n                structure.Description=row.description\r\n                structure.BIN = row.BIN\r\n                structure.BIN2 = row.BIN2\r\n                structure.QuantityOrder = row.OldQuantity\r\n                structure.QuantityShipped = row.NewQuantity\r\n                structure.User = row.username\r\n                structure.Date = row.Date2\r\n                InfoArray.push(structure)\r\n            }\r\n\r\n        }\r\n\r\n        for (const row of outbounds) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: '',\r\n                CustomerName:'',\r\n                CustomerNo:''\r\n            }\r\n            \r\n            structure.CustomerName=row.Cliente \r\n            structure.CustomerNo=row.NoCliente\r\n            structure.Type = row.Type\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.Description=row.description\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.QuantityOrder\r\n            structure.QuantityShipped = row.QuantityShipped\r\n            structure.User = row.username\r\n            \r\n            if(FormatQueryReturnDate(row.Date).split(\"/\").length===3){\r\n                structure.Date = FormatQueryReturnDate(row.Date)\r\n            }else{\r\n                structure.Date = DateFormatMAS90(row.Date)\r\n            }\r\n\r\n            \r\n            InfoArray.push(structure)\r\n            \r\n        }\r\n\r\n        for (const row of transfers) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.Description=row.description\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BINSalida\r\n            structure.BIN2 = row.BINEntrada\r\n            structure.QuantityOrder = 0\r\n            structure.QuantityShipped = row.Quantity\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of purchase) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                Description:'',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: '',\r\n                CustomerName:'',\r\n                CustomerNo:''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.CustomerNo=row.VendorNo\r\n            structure.CustomerName=row.VendorName\r\n            structure.NoOrder = row.OrdenNo\r\n            structure.BIN = row.BIN\r\n            structure.Description=row.description\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.Quantity\r\n            structure.QuantityShipped = null\r\n            structure.User = row.username\r\n\r\n            if(FormatQueryReturnDate(row.Date).split(\"/\").length===3){\r\n                structure.Date = FormatQueryReturnDate(row.Date)\r\n            }else{\r\n                structure.Date = DateFormatMAS90(row.Date)\r\n            }\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n        for (const row of adjusts) {\r\n            const structure = {\r\n                Type: '',\r\n                NoOrder: '',\r\n                BIN: '',\r\n                BIN2: '',\r\n                QuantityOrder: '',\r\n                QuantityShipped: '',\r\n                User: '',\r\n                Date: ''\r\n            }\r\n            structure.Type = row.Type\r\n            structure.NoOrder = null\r\n            structure.BIN = row.BIN\r\n            structure.BIN2 = null\r\n            structure.QuantityOrder = row.OldQuantity\r\n            structure.QuantityShipped = row.NewQuantity\r\n            structure.User = row.username\r\n            structure.Date = FormatQueryReturnDate(row.Date)\r\n            InfoArray.push(structure)\r\n\r\n        }\r\n\r\n\r\n\r\n        var n = await OrderArrayByDate(InfoArray)\r\n        for (const item of InvStart) {\r\n            n.unshift(item)\r\n        }\r\n        for (const item of InvEnd) {\r\n            n.push(item)\r\n        }\r\n        var actualTypes=this.state.General.optionsSelect1\r\n        for (const row of n) {\r\n            const ind=getIndexElement(actualTypes,\"value\",row.Type)\r\n            if(ind===-1){\r\n                const element={\r\n                    value:row.Type,\r\n                    label:row.Type\r\n                }\r\n                actualTypes.push(element)\r\n            }\r\n        }\r\n\r\n\r\n        const temporal = this.state.General\r\n        temporal.generalHistory = n\r\n        temporal.generalHistoryFilter = n\r\n        temporal.optionsSelect1=actualTypes\r\n        this.setState({ General: temporal })\r\n    }\r\n\r\n\r\n    async getGeneralHistory(itemCode) {\r\n        this.setState({secureTransaction1:true})\r\n        const temporal = this.state.General\r\n        temporal.selectedItem = itemCode\r\n        temporal.generalHistory = []\r\n        temporal.generalHistoryFilter = []\r\n        const data = {\r\n            ItemCode: itemCode.ItemCode,\r\n            company:getValueCookie('Company'),\r\n            Date: FormatQueryReturnDate(this.state.cycleInventoryStorage.Header.startDate)\r\n        }\r\n\r\n        const val = await getInformationWithData('/pickList/history/getOutBound', data)\r\n        //const val2 = await getInformationWithData('/purchase/history/getFutureByItemCode', data)\r\n        if (val.status.code === 1) {\r\n            temporal.outBounds = val.data\r\n\r\n        }\r\n\r\n       /* if (val2.status.code === 1) {\r\n            temporal.purchaseOrders = val2.data\r\n\r\n        }\r\n        */\r\n\r\n        this.setState({ General: temporal })\r\n        this.setState({secureTransaction1:false})\r\n        await this.handleModalOpen(\"showModal3\")\r\n    }\r\n\r\n    async updateSystemQuantity(item) {\r\n\r\n        this.setState({ secureTransaction: true })\r\n        Swal.fire({\r\n            title: 'For this Action you need a User and  Password Admin. Please enter it to continue:',\r\n            html: `<input type=\"text\" id=\"loginChangeQuantity\" class=\"swal2-input\" placeholder=\"Username\">\r\n  <input type=\"password\" id=\"passwordChangeQuantity\" class=\"swal2-input\" placeholder=\"Password\">`,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Continue',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const login = Swal.getPopup().querySelector('#loginChangeQuantity').value\r\n                const password = Swal.getPopup().querySelector('#passwordChangeQuantity').value\r\n                if (!login || !password) {\r\n                    Swal.showValidationMessage(`Please enter login and password`)\r\n                } else if (login === \"diego.perez\" && password === \"Diego1560\") {\r\n                    automaticCloseAlert('correct', 'The Quantity has been updated!')\r\n                } else {\r\n                    automaticCloseAlert('incorrect', 'Username or password are invalid!')\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        this.setState({ secureTransaction: false })\r\n    }\r\n\r\n    async getCheckedItems() {\r\n        const data = {\r\n            id: this.state.cycleInventoryStorage.Header.id,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            company: getValueCookie('Company')\r\n        }\r\n        const route = '/inventory/cycledetail/post';\r\n        const datos = await getInformationWithData(route, data)\r\n        return datos.data\r\n    }\r\n\r\n    generateInfo() {\r\n\r\n        let proccessInfo = JSON.parse(JSON.stringify(this.state.cycleInventoryStorage.CheckedItems))\r\n        const headerKeys = ['ItemCode', 'productLine', 'Description', 'realQuantity', 'BIN', 'systemQuantity', 'difference', 'countBy', 'date', 'status', 'comentary']\r\n        for (const item of proccessInfo) {\r\n            for (const head of headerKeys) {\r\n                if (head !== \"status\") {\r\n                    if (item[head] === null || item[head] === \"null\") {\r\n                        item[head] = \"\"\r\n                    } else if (head === \"date\") {\r\n                        item[head] = FormatQueryReturnDate(item[head])\r\n                    }\r\n                } else {\r\n                    if (item[head] === 0) {\r\n                        item[head] = \"Not checked\"\r\n                    } else {\r\n                        item[head] = \"Checked\"\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        var info = getDataSet(proccessInfo,\r\n            ['Item Code', 'Product Line', 'Description', 'Quantity', 'BIN', 'System Quantity', 'Difference', 'Counted By', 'Date', 'Status', 'Comments'],\r\n            headerKeys)\r\n        //this.setState({dataset:info})\r\n        return info\r\n    }\r\n\r\n    async addComentary(item) {\r\n        this.disableTransaction()\r\n        var comm = \"\"\r\n        if (item.comentary) {\r\n            comm = item.comentary\r\n        }\r\n\r\n\r\n        Swal.fire({\r\n            title: 'Product: ' + item.ItemCode + ' \\nBIN: ' + item.BIN,\r\n            html: `<div class='textAreaGeneral textAreaComment'>\r\n                    <textarea id='comentOfCycleInventoryDifference' rows=\"10\" cols=\"50\">${comm}</textarea>\r\n                   </div>\r\n            `,\r\n            backdrop: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Save Commentary',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async () => {\r\n                const coment = Swal.getPopup().querySelector('#comentOfCycleInventoryDifference').value\r\n                const temporal = this.state.cycleInventoryStorage\r\n                const index = temporal.Detail.indexOf(item)\r\n                if (index !== -1) {\r\n                    temporal.Detail[index].comentary = coment\r\n                    const response = await create_Delete_Update_Information('/invertory/updateDetailCycle/post', temporal.Detail[index])\r\n                    if (response.status.code === 1) {\r\n                        automaticCloseAlert('correct', 'The comment was save!')\r\n                        await this.setState({ cycleInventoryStorage: temporal })\r\n                    } else {\r\n                        automaticCloseAlert('incorrect', 'The comment was not save')\r\n                    }\r\n                }\r\n\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n        await this.enableTransaction()\r\n    }\r\n\r\n    onChangeQuantity=(item,e)=>{\r\n        const temp=this.state.cycleInventoryStorage\r\n        const index=temp.Detail.indexOf(item)\r\n        if(index!==-1){\r\n            temp.Detail[index].realQuantity = Number(e.target.value)\r\n        }\r\n    }\r\n\r\n    addDifferenceSymbol(diff){\r\n        if(diff<0){\r\n            return \"\"\r\n        }else{\r\n            return \"+\"\r\n        }\r\n    }\r\n    RemainingDays(date){\r\n        var actual=getDateYearMonthDayDash()\r\n        var start=FormatQueryReturnDateWithDash(date)\r\n        var date3=new Date(start)\r\n        var date4=new Date(actual)\r\n        var date5=new Date(start)\r\n        var date6=new Date(actual)\r\n        var difference= Math.abs(date4-date3);\r\n        \r\n        var preliminarDays=difference/(1000 * 3600 * 24)\r\n        var inhDays=0\r\n        while(date4<=date3){\r\n            if(date4.getDay()===0||date4.getDay()===6){\r\n                inhDays++\r\n            }\r\n            date4=new Date(date4.getTime()+86400000)\r\n        }\r\n       \r\n        if(date6>date5){\r\n            return (preliminarDays-inhDays+1)*-1\r\n        }else{\r\n           \r\n            return preliminarDays-inhDays+1\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    onChangeFilterHistory=(e)=>{\r\n        if(e.value!=='All'){\r\n        var DetailFilter = this.state.General.generalHistory.filter((item) => {\r\n            if (item.Type.toString().toLowerCase().includes(e.value.toLowerCase())) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        const temporal=this.state.General\r\n        temporal.generalHistoryFilter=DetailFilter\r\n        this.setState({General: temporal})\r\n    }else{\r\n        const temporal=this.state.General\r\n        temporal.generalHistoryFilter=temporal.generalHistory\r\n        this.setState({General: temporal})\r\n    }\r\n\r\n    }\r\n\r\n    generateExcelDataForHistory(){\r\n        const headers=[\"Type\",\"No Order\",\"Customer No\",\"Customer Name\",\"BIN\",\"New BIN\",\t`Quantity Order/Old Quantity`,`Quantity Shipped/New Quantity`,\"Difference\",\"Description\",\"Username\",\"Date\"]\r\n        const keys=[\"Type\",\"NoOrder\",\"CustomerNo\",\"CustomerName\",\"BIN\",\"BIN2\",\"QuantityOrder\",\"QuantityShipped\",\"difference\",\"Description\",\"User\",\"Date\"]\r\n        var copyOfHistory=this.state.General.generalHistoryFilter\r\n        for (const row of copyOfHistory) {\r\n            \r\n            if(row.Type===\"Purchase\"){\r\n                row.difference=\"+\"+row.QuantityOrder\r\n            }else if(row.Type===\"Ajuste\"||row.Type===\"Transferencia\"){\r\n                row.difference=this.addDifferenceSymbol(Number(row.QuantityShipped)-Number(row.QuantityOrder))+(Number(row.QuantityShipped)-Number(row.QuantityOrder))\r\n            }\r\n\r\n            for (const key of keys) {\r\n                if(row[key]===null||row[key]===undefined){\r\n                    row[key]='-'\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n        var info = getDataSet(copyOfHistory,headers,keys)\r\n        return info\r\n    }\r\n\r\n    getKPI(){\r\n        var DetailFilter1 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n            if (item.status===1) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n\r\n        var DetailFilter3 = this.state.cycleInventoryStorage.Detail.filter((item) => {\r\n            if (item.difference!==0) {\r\n                return item\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n        var total=100-(DetailFilter3.length/DetailFilter1.length)\r\n        return total.toFixed(2)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='inventoryCycle'>\r\n                <button hidden id='actionatorCycleInventory' onClick={() => this.getLastCycleInventory()}></button>\r\n                <p className='text-center display-1 pb-2' >Cyclical Inventory</p>\r\n                <div>\r\n\r\n                    <div className='row pb-2'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-5'>\r\n                                    <button className='btn btn-primary btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 0} onClick={() => this.startNewCycleInventory()}> Start Cyclical Inventory</button>\r\n                                    <button className='btn btn-danger btn-lg w-100' disabled={this.state.General.secureTransaction} hidden={this.state.cycleInventoryStorage.Header.status === 1} onClick={() => this.endCycleInventory()}> End Cyclical Inventory</button>\r\n                                </div>\r\n\r\n                                <div className='col-5'><button className='btn btn-success btn-lg w-100' onClick={() => this.openOlCycleInventory()} > Open Olds Cyclical Inventory</button></div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div hidden={this.state.cycleInventoryStorage.Header.status !== 0} className='row pb-2 pt-3'>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5'><p className='display-6'>Start Date: {formatInputDateQuery(this.state.cycleInventoryStorage.Header.startDate)}</p></div>\r\n                            <div className='col-5'><p className='display-6'>Proposed end date: {formatInputDateQuery(this.state.cycleInventoryStorage.Header.finishDate)}</p></div>\r\n                            <div className='col-1'></div>\r\n                            </div>\r\n                            <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5'><p className='display-6'>Estimated number of days: {this.state.cycleInventoryStorage.Header.days}</p></div>\r\n                            <div className='col-5'><p className='display-6'>Remaining days: {isNaN(this.RemainingDays(this.state.cycleInventoryStorage.Header.finishDate))?'-':this.RemainingDays(this.state.cycleInventoryStorage.Header.finishDate)}</p></div>\r\n                            \r\n                            <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='row pb-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Inventory complete:</p>\r\n                            <ProgressBar ref={this.ProgrressBarRef} />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" autoComplete='off' className=\"form-control\" placeholder='Search by ItemCode, BIN, Description, Category, UPC ...' id='searchCycleInv1' onChange={this.valueSearchBar} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n                            <div className='row fw-bold'>\r\n                                <div className='col-4'></div>\r\n                                <div className='col-4'>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"-1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"-1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            All items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"0\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"0\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            No Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"1\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"1\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Checked Items\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" value={\"2\"} onChange={this.valueRadioButton} checked={this.state.General.chekvalue === \"2\"} type=\"radio\" name=\"flexRadioDefault\" />\r\n                                        <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                            Differences\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-4'></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row pb-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5 text-center'>\r\n\r\n                            <ExcelDocument hidden={this.state.cycleInventoryStorage.Header.status === 1} data={this.generateInfo()} sheetname={\"CycleInventoryDetail\"} archname={\"CYCLICAL INVENTORY NO \" + this.state.cycleInventoryStorage.Header.id + \" COMPANY \" + getValueCookie('Company') + \" DATE \" + getDateFromReports()} ></ExcelDocument>\r\n\r\n                        </div>\r\n                        <div className='col-5 text-start'>\r\n\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='display-5'>Items</p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pt-2 pb-2'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <div className='row'>\r\n                                <div className='col-6'><p className='display-5'>Total items: {this.state.cycleInventoryStorage.Header.QuantityItems}</p></div>\r\n                                <div className='col-6'><p className='display-5'>Total search result: {this.state.cycleInventoryStorage.Header.FilterQuantity}</p></div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                <p className='display-5'>KPI: {isNaN(this.getKPI())?\"0%\":this.getKPI()+\"%\"}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Product Line</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                        <th className='bg-dark'></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.cycleInventoryStorage.DetailFilter.map((item, i) => (\r\n                                        <tr key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.productLine}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td><input disabled={item.status === 1} type=\"number\" key={item.realQuantity} defaultValue={item.realQuantity} id={\"realQuantityCycleInv_\" + item.id} className=\"form-control text-end\" onChange={(e)=>this.onChangeQuantity(item,e)} /></td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td><button type=\"button\" className=\"btn btn-secondary btn-lg\" onClick={() => this.addComentary(item)} disabled={this.state.General.secureTransaction || item.status === 0}>Add Comments</button></td>\r\n                                            <td className='text-center'>\r\n                                                <button type=\"button\" className=\"btn btn-success btn-lg\" disabled={this.state.General.secureTransaction} onClick={() => this.setCycleInventoryDetailInfo(item, \"realQuantityCycleInv_\" + item.id,)} hidden={item.status === 1}>Check</button>\r\n                                                <button type=\"button\" className=\"btn btn-danger btn-lg\" disabled={this.state.General.secureTransaction} onClick={() => this.updateCycleInventoryDetail(item)} hidden={item.status === 0}>Change</button>\r\n                                            </td>\r\n                                            <td className='text-center'><button disabled={this.state.secureTransaction1} onClick={() => this.getGeneralHistory(item)} type=\"button\" className=\"btn btn-info btn-lg\">Detail</button></td>\r\n                                            <td className='text-center'><button disabled={this.state.General.secureTransaction} onClick={() => this.updateSystemQuantity(item)} type=\"button\" className=\"btn btn-warning btn-lg\" hidden={item.status === 0}>Update Inventory</button></td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <ModalOrders title={'Old Cyclical Inventory'} show={this.state.General.showModal2} close={(modal = \"showModal2\") => this.handleModalClose(modal)}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12 display-5 pb-3'>\r\n                            <p >Select an old Cyclical Inventory to see they detail:</p>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='bg-dark text-light'>\r\n                                        <th className='text-center bg-dark'>Id</th>\r\n                                        <th className='text-center bg-dark'>Start Date</th>\r\n                                        <th className='text-center bg-dark'>Estimated Date to finish</th>\r\n                                        <th className='text-center bg-dark'>Real Finish Date</th>\r\n                                        <th className='text-center bg-dark'>Days</th>\r\n                                        <th className='text-center bg-dark'>Create By</th>\r\n                                        <th className='text-center bg-dark'>Close By</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {\r\n                                        this.state.General.oldCycleInventory.map((item, i) => (\r\n                                            <tr className={this.state.General.selectedCycleInventory === item ? 'bg-warning text-center' : 'text-center'} onClick={() => this.getOldDetailCycleInventory(item)} key={i}>\r\n                                                <td>{item.id}</td>\r\n                                                <td>{item.startDate2}</td>\r\n                                                <td>{item.finishDate2}</td>\r\n                                                <td>{item.realFinishDate2}</td>\r\n                                                <td>{item.realQuantityDays}</td>\r\n                                                <td>{item.createBy}</td>\r\n                                                <td>{item.closeBy}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                        <div className='col-12 display-5 '>\r\n                            <p >Detail:</p>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                                <input type=\"text\" className=\"form-control\" placeholder='Search by BIN, Description, Date...' id='searchOldCycleInv' onChange={this.searchOlderCycleInventoryDetail} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 pt-3 pb-3 text-center'>\r\n                            <div className='row h4'>\r\n                                <div className='col correctCount2'>Exact difference</div>\r\n                                <div className='col negativeCount2'>Negative difference</div>\r\n                                <div className='col positiveCount2'>Positive difference</div>\r\n                                <div className='col notcounted2'>Item not counted</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12'>{/*Here we need specific information*/}</div>\r\n                        <div className='col-12 tableFixHead tb-5'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Quantity</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>System Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Counted By</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Comments</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.detailOldCycleSelectedFilter.map((item, i) => (\r\n                                        <tr className={item.status === 0 ? 'notcounted' : item.difference < 0 ? 'negativeCount' : item.difference === 0 ? 'correctCount' : 'positiveCount'} key={i}>\r\n\r\n                                            <td>{item.ItemCode}</td>\r\n                                            <td>{item.Description}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.realQuantity}</td>\r\n                                            <td className='text-center'>{item.BIN}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.systemQuantity}</td>\r\n                                            <td className='text-center'>{item.status === 0 ? \"-\" : item.difference}</td>\r\n                                            <td className='text-center'>{item.countBy === null ? \"-\" : item.countBy}</td>\r\n                                            <td className='text-center'>{this.textStatus(item.status)}</td>\r\n                                            <td>{item.comentary === 'null' ? '-' : item.comentary}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n                <ModalOrders title={'Detail of Product'} show={this.state.General.showModal3} close={(modal = \"showModal3\") => this.handleModalClose(modal)}>\r\n                    \r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Item Code:</p>\r\n                                </div>\r\n                                <div className='col-12 text-start'>\r\n                                    <p className='fw-bold'>{this.state.General.selectedItem.ItemCode}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12 justifyText'>\r\n                                    <p>{this.state.General.selectedItem.Description}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5 text-center'>\r\n                            <img className=' pt-4 detailIMG' src='/assets/notavailable.png' alt='Company' />\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n\r\n                    <div className='row text-start pt-5'>\r\n                        <div className='col-12 fs-5'>\r\n                            <p className='text-danger fw-bold'>Current Orders who maybe affect the current physical inventory</p>\r\n                        </div>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>No Order</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order</th>\r\n                                        <th className='bg-dark'>Quantity Shipped</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.outBounds.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.OrderNo}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.QuantityOrdered}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n                                    {/*this.state.General.purchaseOrders.map((item, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-center'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.OrdenNo}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.Quantity}</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                    ))\r\n                                        */\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate1' />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"input-group input-group-lg\">\r\n                                <span className=\"input-group-text\"><AiFillCalendar /></span>\r\n                                <input type=\"date\" className=\"form-control\" id='searchHistoryCycleInvDate2' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row text-center pt-3'>\r\n                        <div className='col-5'></div>\r\n                        <div className='col-2'>\r\n                            <button disabled={this.state.secureTransaction1} className='btn btn-danger btn-lg' onClick={() => this.getInfoProduct()}>Search</button>\r\n                        </div>\r\n                        <div className='col-5'></div>\r\n                    </div>\r\n                    <div className='row fs-3'>\r\n                                <div className='col-12 text-start'>\r\n                                    <p>Search Result:</p>\r\n                                </div>\r\n                                \r\n                    </div>\r\n                    <div className='row fs-4 pb-3'>\r\n                                <div className='col-6 text-start'>\r\n                                    <Select defaultValue={this.state.General.optionsSelect1[0]} options={this.state.General.optionsSelect1} onChange={this.onChangeFilterHistory} />\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                <ExcelDocument hidden={this.state.General.generalHistoryFilter.length===0} data={this.generateExcelDataForHistory()} sheetname={\"History ITEM \"+this.state.General.selectedItem.ItemCode} archname={\"Hystory Product \"+this.state.General.selectedItem.ItemCode+\" COMPANY \" + getValueCookie('Company') + \" DATE \" + getDateFromReports()} ></ExcelDocument>\r\n\r\n                                </div>\r\n                                \r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-12 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead>\r\n                                    <tr className='bg-dark text-light text-center'>\r\n                                        <th className='bg-dark'>Type</th>\r\n                                        <th className='bg-dark'>No Order</th>\r\n                                        <th hidden={getValueCookie('CompanyId')==='2'} className='bg-dark'>Customer No</th>\r\n                                        <th hidden={getValueCookie('CompanyId')==='2'}  className='bg-dark'>Customer Name</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>New BIN</th>\r\n                                        <th className='bg-dark'>Quantity Order/<br />Old Quantity</th>\r\n                                        <th className='bg-dark'>Quantity Shipped/<br/>New Quantity</th>\r\n                                        <th className='bg-dark'>Difference</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>Username</th>\r\n                                        <th className='bg-dark'>Date</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.General.generalHistoryFilter.map((item, i) => (\r\n                                        <tr className={'text-center '+((item.Type==='Inventory Start'||item.Type==='Inventory End')?(item.Type==='Inventory Start'?'correctCount':'positiveCount'):'')} key={i}>\r\n                                            <td className='text-start'>{item.Type}</td>\r\n                                            <td className='text-start'>{item.NoOrder}</td>\r\n                                            <td hidden={getValueCookie('CompanyId')==='2'} className='text-start'>{item.CustomerNo}</td>\r\n                                            <td hidden={getValueCookie('CompanyId')==='2'} className='text-start'>{item.CustomerName}</td>\r\n                                            <td>{item.BIN}</td>\r\n                                            <td>{item.BIN2}</td>\r\n                                            <td>{item.QuantityOrder}</td>\r\n                                            <td>{item.QuantityShipped}</td>\r\n                                            <td className='text-center'>{(item.Type===\"Transferencia\"||item.Type===\"Ajuste\")?this.addDifferenceSymbol(Number(item.QuantityShipped)-Number(item.QuantityOrder))+(Number(item.QuantityShipped)-Number(item.QuantityOrder)):((item.Type==='Outbound'||item.Type==='Purchase')?(item.Type==='Outbound'?\"-\"+item.QuantityShipped:\"+\"+item.QuantityOrder):'-')}</td>\r\n                                            <td className='text-start'>{item.Description}</td>\r\n                                            <td>{item.User}</td>\r\n                                            <td>{item.Date}</td>\r\n                                        </tr>\r\n                                    ))\r\n\r\n                                    }\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n                                    <tr className='bg-secondary text-light'>\r\n\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Pie,Doughnut, Bar,Line } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend,CategoryScale,LinearScale,BarElement,Title,PointElement,LineElement,Filler } from 'chart.js';\r\nimport { faker } from '@faker-js/faker';\r\nexport default class CycleInvetoryGraph extends Component {\r\n    state = {\r\n\r\n    }\r\n    constructor(){\r\n        super()\r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            \r\n            Filler,\r\n            );\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    datapie={\r\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n    }\r\n\r\n    optionsbar = {\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart - Stacked',\r\n          },\r\n        },\r\n        responsive: true,\r\n        interaction: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n        scales: {\r\n          x: {\r\n            stacked: true,\r\n          },\r\n          y: {\r\n            stacked: true,\r\n          },\r\n        },\r\n      };\r\n      \r\n    labels=['January', 'February', 'March', 'April', 'May', 'June', 'July']\r\n      \r\n       databar = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(75, 192, 192)',\r\n            stack: 'Stack 0',\r\n          },\r\n          {\r\n            label: 'Dataset 3',\r\n            data: this.labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n            backgroundColor: 'rgb(53, 162, 235)',\r\n            stack: 'Stack 1',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsarea = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      dataarea = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            fill: true,\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            borderColor: 'rgb(53, 162, 235)',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n\r\n      optionsLine2 = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n      databars = {\r\n        labels:this.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n          {\r\n            label: 'Dataset 2',\r\n            data: this.labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          },\r\n        ],\r\n      };\r\n    render() {\r\n        return (\r\n            <div className='CycleInventoryReport'>\r\n                <p className='text-center display-1 pb-2' >Cycle Inventory Graphs</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10'>\r\n                        <select className=\"form-select form-select-lg mb-3\" aria-label=\"select option\">\r\n                            <option>Select an old Cycle Inventory to see they graphs</option>\r\n                            <option value=\"1\">Cycle Invetory No. 1 06/20/2022-06/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 2 06/29/2022-07/27/2022</option>\r\n                            <option value=\"1\">Cycle Invetory No. 3 08/15/2022-08/30/2022</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Pie Graph</p>\r\n                        <Pie data={this.datapie}></Pie>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Doughnut Graph</p>\r\n                        <Doughnut data={this.datapie}></Doughnut>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Bar Graph</p>\r\n                        <Bar options={this.optionsbar} data={this.databar}></Bar>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Line Graph</p>\r\n                        <Line options={this.optionsarea} data={this.dataarea}></Line>\r\n                    </div>            \r\n                </div>\r\n                <div className='row pb-4'>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3' >Example Another Line Graph</p>\r\n                        <Line options={this.optionsLine2} data={this.databar}></Line>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <p className='text-center display-4 pb-3'>Example Bars Graph</p>\r\n                        <Bar options={this.optionsLine2} data={this.databars}></Bar>\r\n                    </div>            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class BarGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n            plugins: {\r\n              legend: {\r\n                position: 'top',\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: '',\r\n              },\r\n            },\r\n          }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Bar options={this.state.options} data={this.state.data}></Bar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../css/table-responsive.css'\r\nimport {getInformationWithData } from '../services/CABE'\r\nimport BarGraph from '../components/BarGraph'\r\nimport { getValueCookie } from '../services/cookieService'\r\nexport default class KPI extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.BarGraph1 = React.createRef()\r\n\r\n    }\r\n\r\n\r\n    state = {\r\n        General: {\r\n            KPIInfo: [],\r\n            KPIInfoFilter: []\r\n        },\r\n        GraphData: {\r\n\r\n        }\r\n    }\r\n\r\n     componentDidMount() {\r\n         \r\n         \r\n    }\r\n\r\n\r\n    async getKPIInfo(){\r\n        const data1={\r\n            company:getValueCookie('Company')\r\n        }\r\n        const temporal=this.state.General\r\n        const data=await getInformationWithData('/reports/getKPI',data1)\r\n        if(data.status.code===1){\r\n        temporal.KPIInfo=data.data\r\n        temporal.KPIInfoFilter=data.data\r\n        await this.setState({General:temporal})\r\n        await this.generateGraphDays(data.data)\r\n        }\r\n    }\r\n\r\n    async generateGraphDays(data) {\r\n        this.BarGraph1.current.setTitle('Inventory Cycle Days')\r\n\r\n        let labels = []\r\n        let completeInfo = []\r\n\r\n        for (const element of data) {\r\n            labels.push('Cycle ' + String(element.id))\r\n            completeInfo.push(String(element.realQuantityDays))\r\n        }\r\n\r\n        var info = {\r\n            label: 'Days',\r\n            data: completeInfo,\r\n            backgroundColor: 'rgb(17,131,29)',\r\n\r\n        }\r\n        await this.BarGraph1.current.setLabels(labels)\r\n        await this.BarGraph1.current.setData([info])\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='KPI'>\r\n                <button hidden id='actionatorKPI' onClick={()=>this.getKPIInfo()}></button>\r\n                <p className='text-center display-1 pb-3' >Inventories of {getValueCookie('Company')}</p>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-10 tableFixHead tb-5'>\r\n                        <table className='table'>\r\n                            <thead>\r\n                                <tr className='text-light text-center'>\r\n                                    <th className='bg-dark'>Type of Inventory</th>\r\n                                    <th className='bg-dark'>Cycle</th>\r\n                                    <th className='bg-dark'>Full cycle count days</th>\r\n                                    <th className='bg-dark'>Closing date</th>\r\n                                    <th className='bg-dark'>Counted items</th>\r\n                                    <th className='bg-dark'>Average binary accuracy</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>Adjustments</th>\r\n                                    <th className='bg-dark'>Accuracy valued</th>\r\n                                    <th className='bg-dark'>KPI result</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.General.KPIInfoFilter.map((element, i) => (\r\n                                    <tr className='text-center' key={i}>\r\n                                        <td>Cycle</td>\r\n                                        <td>{element.id}</td>\r\n                                        <td>{element.realQuantityDays}</td>\r\n                                        <td>{element.realFinishDate2}</td>\r\n                                        <td>{element.ItemsContados}</td>\r\n                                        <td>{element.ExBinaria}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            <tfoot className='tfoot'>\r\n\r\n                                <tr className='bg-secondary text-light'>\r\n\r\n                                </tr>\r\n                            </tfoot>\r\n\r\n                        </table>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <BarGraph ref={this.BarGraph1} />\r\n                    </div>\r\n                    <div className='col-5'>\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport '../css/CartaProducto.css'\r\n\r\n\r\nexport default class CartaProducto extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conteiner cartaHover\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 imgC \">\r\n                        <img src={\"./assets/notavailable.png\"} alt=\"Card  cap\" className='imgC'/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row text-start pt-5\">\r\n                            <h5 className=\"card-title\">{this.props.ItemCode}</h5>\r\n                        </div>\r\n                        <div className=\"row text-start\">\r\n                            <p className=\"card-text fs-6\">{this.props.Description}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-6\"><i>UPC:</i> {this.props.UPC}</p>\r\n                        </div>\r\n                        <div className=\"row text-start\" >\r\n                            <p className=\"card-text fs-5\"><b>OnHand:</b> {this.props.OnHand}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport CartaProducto from './CartaProducto'\r\nimport { getInformationNoData } from '../services/CABE.js'\r\n\r\n\r\nexport default class Catalogue extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.retornarProducto = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        Catalogo: [],\r\n        ProductosMostrados: []\r\n    }\r\n\r\n    async obtenerProductos() {\r\n        const buscador = document.getElementById('catalogo_busqueda');\r\n        const Enpoint = '/Items/get'\r\n        const respuesta = await getInformationNoData(Enpoint);\r\n        \r\n        if (respuesta.status.code === 1) {\r\n            this.setState({ Catalogo: respuesta.data });\r\n            this.setState({ ProductosMostrados: respuesta.data });\r\n        }\r\n        buscador.value='';\r\n        setTimeout( ()=>{buscador.focus();}, 300);\r\n    }\r\n\r\n    buscarProductos = e => {\r\n  \r\n            let busqueda = e.target.value;\r\n            let Productos = this.state.Catalogo.filter((producto) => {\r\n                if (((\r\n                        this.contiene(producto.itemCode,busqueda)\r\n                    ||  this.contiene(producto.abbreviatedDesc,busqueda)\r\n                    ||  this.contiene(producto.upc,busqueda))\r\n                    )\r\n                ) {\r\n                    return producto\r\n                } else {\r\n                    return null\r\n                }\r\n            });\r\n            this.setState({ ProductosMostrados: Productos });\r\n    }\r\n\r\n    contiene(parametro,busqueda){\r\n        return parametro.toString().toLowerCase().includes(busqueda.toLocaleLowerCase())\r\n    }\r\n\r\n    getProducto(producto){\r\n        //Aqui asignamos el producto al estado del padre\r\n        const Padre = this.props.Padre\r\n        const Products = Padre.state.products;\r\n        producto.BIN=\"\";\r\n        producto.quantityOrdered=0;\r\n        producto.quantityReceived=0;\r\n        producto.totalCost=0;\r\n        Products.push(producto);\r\n        Padre.setState({products:Products});\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button type=\"button\" disabled={this.props.disabled} className=\"btn catalogueOpen btn-lg w-100\" data-bs-toggle=\"modal\" data-bs-target={\"#Catalogo\" + this.props.nombrePadre} onClick={() => this.obtenerProductos()}>Open Catalogue </button>\r\n                <div className=\"modal fade\" id={\"Catalogo\" + this.props.nombrePadre} tabIndex=\"-1\" aria-labelledby=\"catalogoModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-fullscreen\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"catalogoModalLabel\">Catalogue</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body \">\r\n                                <div className='row form-group pt-4'>\r\n                                    <input className='form-control' placeholder='Search by ItemCode,BIN,Description...' id='catalogo_busqueda' onKeyUp={this.buscarProductos} />\r\n                                </div>\r\n                                <div className='row'>\r\n                                    {\r\n                                        this.state.ProductosMostrados.map((producto, i) => (\r\n                                            <div key={i} className='col-6 ' data-bs-dismiss=\"modal\" onClick={()=>this.getProducto(producto)}>\r\n                                                <CartaProducto ItemCode={producto.itemCode} Description={producto.abbreviatedDesc} OnHand={producto.OnHand} UPC={producto.upc} />\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title, PointElement, LineElement, Filler } from 'chart.js';\r\n\r\n\r\n\r\nexport default class LineAreaGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale,\r\n            LinearScale,\r\n            BarElement,\r\n            Title, CategoryScale,\r\n            LinearScale,\r\n            PointElement,\r\n            LineElement,\r\n            Filler,\r\n        );\r\n    }\r\n\r\n    state={\r\n       \r\n        data:{\r\n            labels:[],\r\n            datasets:[\r\n                {\r\n                    fill: true,\r\n                    label: 'Quantity',\r\n                    data: [],\r\n                    borderColor: 'rgb(53, 162, 235)',\r\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                  }\r\n            ]\r\n        },\r\n        options :{\r\n            responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: '',\r\n          },\r\n        },\r\n        }\r\n    }\r\n\r\n\r\n   \r\n\r\n      async setTitle(text){\r\n       const temporal=this.state.options\r\n       temporal.plugins.title.text=text\r\n       this.setState({options:temporal})\r\n      }\r\n\r\n      setLabels(labels){\r\n        const temporal=this.state.data\r\n        temporal.labels=labels\r\n        this.setState({data:temporal})\r\n      }\r\n      setData (data){\r\n        const temporal=this.state.data\r\n        temporal.datasets[0].data=data\r\n        this.setState({data:temporal})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Line options={this.state.options} data={this.state.data}></Line>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/inventory-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport Catalogue from '../components/Catalogue.js'\r\nimport { AiOutlineSearch, AiFillPrinter, AiFillBook, AiFillDollarCircle, AiFillCheckSquare, AiFillCreditCard, AiFillTag, AiOutlineBarcode } from \"react-icons/ai\"\r\nimport LineAreaGraph from '../components/LineAreaGraph'\r\nexport default class Inventory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.LineAreaGraph1 = React.createRef()\r\n    }\r\n\r\n    state={\r\n        producto:{\r\n            itemCode:\"Item Code\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LineAreaGraph1.current.setTitle('Quantity sold per month year 2022')\r\n        this.LineAreaGraph1.current.setLabels(['January', 'February', 'March', 'April', 'May', 'June'])\r\n        this.LineAreaGraph1.current.setData(['123', '100', '12', '156', '145', '110'])\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='InventoryInfo lobbyContainer'>\r\n                <div className='row searchPart'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5 pb-5'>\r\n                        <p className='text-start pt-4 pb-2' >Search specific Product:</p>\r\n                        <div className=\"input-group input-group-lg pb-4\">\r\n                            <span className=\"input-group-text\"><AiOutlineSearch /></span>\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Search by ItemCode' />\r\n                        </div>\r\n                        {\r\n                            /* \r\n                            \r\n                            <div className='text-center'>\r\n                            <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Search <AiOutlineFileSearch /></button>\r\n                        </div>\r\n                            */\r\n                        }\r\n\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        <p className='text-start pt-4 pb-2' >See all Catalogue:</p>\r\n                        <div className='text-center'>\r\n                            <Catalogue nombrePadre={'InventoryBin'} Padre={this}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <div className='ItemInfo' hidden={false}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <p className='text-start display-4 pb-2' >Item information: </p>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n\r\n                    <div className='row pt-3'>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber'>\r\n                                <p className='text-center display-3' >{this.state.producto.itemCode}</p>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center'>\r\n                                <img className='pb-5 pt-5' src='/assets/notavailable.png' alt='Company' />\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-1'></div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 searchProd\">Print labels <AiFillPrinter /></button>\r\n                            </div>\r\n                            <div className='col-5 ItemCodeNumber text-center pb-5'>\r\n                                <button type=\"button\" className=\"btn  btn-lg w-50 historyProd\">View history <AiFillBook /></button>\r\n                            </div>\r\n                            <div className='col-1'></div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='row pt-5'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >General information: <AiOutlineBarcode /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>UPC:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Description:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4 textAreaGeneral\">\r\n                                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>U/M:</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Categories to which it belongs:</p>\r\n                                </div>\r\n                                <div className='col-12 tableFixHead'>\r\n                                    <table className='table'>\r\n                                        <thead>\r\n                                            <tr className='text-light text-center'>\r\n                                                <th className='bg-dark'>Categories</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className='text-center'>BOOTS</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>FIBER ADAPTER</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className='text-center'>KEYSTONE JACKS</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tfoot className='tfoot'>\r\n                                        </tfoot>\r\n\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Quantity Available: <AiFillCheckSquare /> </p>\r\n                                    <div className='row'>\r\n                                        <div className='col-12 titleTotal text-center'>\r\n                                            <p>General Total: 1563</p>\r\n                                        </div>\r\n                                        <div className='col-12 titleDistribution'>\r\n                                            <p>Distribution:</p>\r\n                                        </div>\r\n                                        <div className='col-12 tableFixHead'>\r\n                                            <table className='table'>\r\n                                                <thead>\r\n                                                    <tr className='text-light text-center'>\r\n                                                        <th className='bg-dark'>BIN</th>\r\n                                                        <th className='bg-dark'>Quantity</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A001</td>\r\n                                                        <td className='text-end'>1500</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>B002</td>\r\n                                                        <td className='text-end'>60</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className='text-center'>A003</td>\r\n                                                        <td className='text-end'>3</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tfoot className='tfoot'>\r\n\r\n                                                    <tr className='bg-secondary text-light'>\r\n                                                        <td className='text-center'>Total</td>\r\n                                                        <td className='text-end'>1563</td>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <p className='text-start display-5 pb-2' >Physical details: <AiFillTag /></p>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Weight (lbs) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Length (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Height (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row productInfoText'>\r\n                                <div className='col-12'>\r\n                                    <p>Width (in) :</p>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className=\"input-group input-group-lg pb-4\">\r\n                                        <input type=\"text\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <p className='text-start display-5 pb-2' >Financial information: <AiFillCreditCard /></p>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Purchase price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <p><AiFillDollarCircle /> Sale price:</p>\r\n                                        </div>\r\n                                        <div className='col-12'>\r\n                                            <div className=\"input-group input-group-lg pb-4\">\r\n                                                <input type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row productInfoText'>\r\n                                        <div className='col-12'>\r\n                                            <LineAreaGraph ref={this.LineAreaGraph1} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/general-style.css\"\r\n\r\n\r\nexport default class Lobby extends Component {\r\n\r\n    componentDidMount() {\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid generalContainer lobbyContainer display-1 text-center pt-5\">\r\n                <p>Welcome</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Catalogue from '../components/Catalogue'\r\n\r\nexport default class PikingSystem extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className='fs-1'>Picking System</p>\r\n                <div className='form-group '>\r\n                    <input className='form-control w-75 d-inline fs-3' disabled />\r\n                    <button className='btn btn-success d-inline fs-3 w-25'>Sales order mode</button>\r\n                </div>\r\n                <div>\r\n                    <label className='w-50'>\r\n                        Order name:\r\n                        <input className='form-control' disabled />\r\n                    </label>\r\n                    <label className='w-50'>\r\n                        Order by:\r\n                        <input className='form-control' disabled />\r\n                    </label>\r\n\r\n                </div>\r\n                <div>\r\n                    <p className='bg-primary text-white p-2 fs-3 text-center'>Picking list</p>\r\n                    <div className='pb-5 bg-light'>\r\n                        <label className='w-100 '>\r\n                            Search by UPC:\r\n                            <input className='form-control ' placeholder='Scanner...' />\r\n                        </label>\r\n                        <div className='w-100'>\r\n                            <Catalogue nombrePadre={'PickinSystem'} Padre={this} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <table className='table'>\r\n                        <thead className='thead bg-secondary text-white'>\r\n                            <tr>\r\n                                <th>Item Code</th>\r\n                                <th>Description</th>\r\n                                <th>Quantity Ordered</th>\r\n                                <th>Weight</th>\r\n                                <th>Total Weight</th>\r\n                                <th>BIN</th>\r\n                                <th>Comments</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='tbody'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot className='tfoot bg-dark text-white'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>Totals</td>\r\n                                <td>0</td>\r\n                                <td>0.00</td>\r\n                                <td>0.00</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                    <p className='bg-primary text-white p-2 fs-3 text-center'>Picked up list</p>\r\n                    <table className='table'>\r\n                        <thead className='thead bg-secondary text-white'>\r\n                            <tr>\r\n                                <th>Item Code</th>\r\n                                <th>Description</th>\r\n                                <th>Quantity Ordered</th>\r\n                                <th>Quantity Shipped</th>\r\n                                <th>Weight</th>\r\n                                <th>Total Weight</th>\r\n                                <th>BIN</th>\r\n                                <th>Comments</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='tbody'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot className='tfoot bg-dark text-white'>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>Totals</td>\r\n                                <td>0</td>\r\n                                <td>0</td>\r\n                                <td>0.00</td>\r\n                                <td>0.00</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import  {StyleSheet } from '@react-pdf/renderer'\r\n\r\nconst pdfConfig=StyleSheet.create({\r\n\r\n    HeaderStyle:{\r\n        backgroundColor:\"rgb(20, 42, 77)\",\r\n        color:\"rgb(255, 255, 255)\",\r\n    },\r\n    HeaderMargin:{\r\n        top:\"45px\",\r\n        height:\"150px\"\r\n    },\r\n\r\n    BusinessLogo:{\r\n        width:\"150px\",\r\n        left:\"35px\",\r\n        top:\"10px\"\r\n    },\r\n    ContactInfo:{\r\n        textAlign:\"justify\",\r\n        fontSize:\"14px\",\r\n        top:\"-30px\",\r\n        left:\"220px\"\r\n    },\r\n//backgroundColor:\"rgb(69, 71, 74)\",\r\n    marginInfo:{\r\n        width:\"80%\",\r\n        marginLeft:\"10%\",\r\n        padding:\"20px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginBottom:\"8px\",\r\n        color:\"rgb(255, 255, 255)\"\r\n\r\n    },\r\n    OrderTitleStyle:{\r\n        color:\"rgb(0, 0, 0)\",\r\n        textAlign:\"center\",\r\n        fontSize:\"20px\",\r\n        marginTop:\"4px\"\r\n    },\r\n    OrderInformation:{\r\n        width:\"100%\",\r\n        backgroundColor:\"rgb(255, 255, 255)\",\r\n    },\r\n    TitleStyle:{\r\n        textAlign:\"left\",\r\n        fontSize:\"14px\",\r\n        width:\"50%\",\r\n        color:\"rgb(0, 0, 0)\",\r\n    },\r\n\r\n    TextSeparator:{\r\n        marginBottom:\"4px\"\r\n    },\r\n    InfoEncabezadoStyle:{\r\n        width:\"30%\",\r\n        fontSize:\"12px\",\r\n    },\r\n    TextSeparator2:{\r\n        marginTop:\"1px\",\r\n        marginBottom:\"3.5px\"\r\n    },\r\n\r\n    Table:{\r\n        width:\"80%\",\r\n        marginLeft:\"10%\",\r\n        \r\n    },\r\n\r\n    CabeceraTabla:{\r\n        width:\"100%\",\r\n        backgroundColor:\"#000000\",\r\n        color:\"#F0FFFF\",\r\n        textAlign:\"center\",\r\n        padding:\"8px\",\r\n        \r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n\r\n    ColumnaNormal:{\r\n        width:\"15%\",\r\n        textAlign:\"center\",\r\n        fontSize:\"8px\",\r\n    },\r\n\r\n    ColumnaGrande:{\r\n        width:\"54%\",\r\n        textAlign:\"center\",\r\n        fontSize:\"8px\",\r\n    },\r\n    CuerpoTabla:{\r\n        width:\"100%\",\r\n        textAlign:\"center\",\r\n        padding:\"8px\",\r\n        fontSize:\"11px\",\r\n        \r\n        \r\n    },\r\n    ColumnaGrandeCuerpo:{\r\n        width:\"54%\",\r\n        fontSize:\"9px\",\r\n        textAlign:\"justify\",\r\n        padding:\"8px\",\r\n    },\r\n    ColumnaNormalCuerpo:{\r\n        width:\"15%\",\r\n        textAlign:\"center\",\r\n        display:\"block\",\r\n        marginTop:\"1.2%\"\r\n    },\r\n\r\n   \r\n\r\n    Fila:{\r\n        width:\"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    }\r\n\r\n    \r\n   \r\n});\r\n\r\nexport default pdfConfig;","import React, { Component } from 'react'\r\nimport \"../css/general-style.css\"\r\nimport { AiFillPrinter } from \"react-icons/ai\"\r\nimport ModalOrders from './ModalComponent'\r\nimport pdfConfig from '../pdfConfig/pdfConfig'\r\nimport { Document, Image, PDFViewer, View, Page, Text } from '@react-pdf/renderer'\r\n\r\n\r\nexport class OrderPDF extends Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n    }\r\n\r\n    state = {\r\n        showModal: false\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState({ showModal: true })\r\n    }\r\n\r\n    handleModalClose = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                    <button disabled={this.props.disabled} type=\"button\" onClick={() => this.handleModalOpen()} className={\"btn \" + this.props.colorButton + \" btn-lg\"}>Print Order <AiFillPrinter /></button>\r\n                </div>\r\n                <ModalOrders title={this.props.title} show={this.state.showModal} close={() => this.handleModalClose()}>\r\n                    <PDFViewer className=\"w-100\" style={{ minHeight: \"90vh\" }}>\r\n                        <Document>\r\n                            <Page wrap>\r\n\r\n                                {/*THIS IS THE HEADER OF THE DOCUMENT*/}\r\n                                <View style={pdfConfig.HeaderStyle} fixed>\r\n                                    <View style={pdfConfig.HeaderMargin}>\r\n                                        <Image style={pdfConfig.BusinessLogo} src={this.props.companyLogo} />\r\n                                        <View style={pdfConfig.ContactInfo}>\r\n                                            {this.props.contactInfo.map((element, e) => (\r\n                                                <Text key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                                {/*ORDER INFO*/}\r\n                                <View fixed style={pdfConfig.OrderInformation}>\r\n                                    <View style={pdfConfig.OrderTitleStyle}>\r\n                                        <Text>{this.props.OrderTitle}</Text>\r\n                                    </View>\r\n                                    <View style={pdfConfig.marginInfo}>\r\n                                        <View style={pdfConfig.TitleStyle}>\r\n                                            {this.props.OrderInfo1.map((element, e) => (\r\n                                                <Text style={pdfConfig.TextSeparator} key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n\r\n                                        <View style={pdfConfig.TitleStyle}>\r\n                                            {this.props.OrderInfo2.map((element, e) => (\r\n                                                <Text style={pdfConfig.TextSeparator} key={e}>{element}</Text>\r\n                                            ))}\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n                                \r\n                                <View style={pdfConfig.Table}>\r\n                                                <View fixed style={pdfConfig.CabeceraTabla}>\r\n                                                    {['ItemCode', 'Description', 'BIN', 'Quantity Ordered','Quantity Received','Standar Cost','Total Cost'].map((tit, e) => (\r\n                                                        e !== 1 ? <Text style={pdfConfig.ColumnaNormal} key={e}>{tit}</Text> : <Text style={pdfConfig.ColumnaGrande} key={e}>{tit}</Text>\r\n                                                    ))}\r\n                                                </View>\r\n\r\n                                                {/*\r\n                                                    this.state.Impresion.Productos.map((elemento, e) => (\r\n                                                        e % 7 === 0 && e !== 0 ?\r\n                                                            <View break key={e} style={PurchaseOrderPrint.CuerpoTabla}>\r\n                                                                <View key={e} style={PurchaseOrderPrint.Fila}>{\r\n                                                                    this.EncabezadoInfo(['item', 'description', 'BIN', 'Quantity'], elemento).map((fila, e2) => (\r\n                                                                        e2 !== 1 ? <View style={PurchaseOrderPrint.ColumnaNormalCuerpo} key={e2}><Text  key={e2}>8{fila}</Text></View> : <View style={PurchaseOrderPrint.ColumnaGrandeCuerpo} key={e2}><Text key={e2}>{fila}</Text></View>\r\n                                                                    ))\r\n                                                                }</View>\r\n                                                            </View>\r\n                                                            :\r\n                                                            <View key={e} style={PurchaseOrderPrint.CuerpoTabla}>\r\n                                                                <View key={e} style={PurchaseOrderPrint.Fila}>{\r\n                                                                    this.EncabezadoInfo(['item', 'description', 'BIN', 'Quantity'], elemento).map((fila, e2) => (\r\n                                                                        e2 !== 1 ? <View style={PurchaseOrderPrint.ColumnaNormalCuerpo} key={e2}><Text  key={e2}>{fila}</Text></View> : <View style={PurchaseOrderPrint.ColumnaGrandeCuerpo} key={e2}><Text key={e2}>{fila}</Text></View>\r\n                                                                    ))\r\n                                                                }</View>\r\n                                                            </View>\r\n                                                    ))\r\n                                                */\r\n                                                }\r\n                                                \r\n                                                <View style={pdfConfig.CabeceraTabla}>\r\n                                                    \r\n                                                    {\r\n                                                    /*\r\n                                                    ['', 'Total', '', this.state.Impresion.Totales].map((tit, e) => (\r\n                                                        e !== 1 ? <Text style={pdfConfig.ColumnaNormal} key={e}>{tit}</Text> : <Text style={pdfConfig.ColumnaGrande} key={e}>{tit}</Text>\r\n                                                    ))\r\n                                                    */}\r\n                                                </View>\r\n                                            </View>\r\n\r\n\r\n                            </Page>\r\n                        </Document>\r\n                    </PDFViewer>\r\n                </ModalOrders>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/general-style.css\"\r\nimport '../css/table-responsive.css'\r\nimport { BsCheckSquare, BsCartPlus } from \"react-icons/bs\";\r\nimport { AiTwotoneSave, AiOutlineCloseCircle, AiFillDelete } from \"react-icons/ai\"\r\nimport Catalogue from '../components/Catalogue';\r\nimport { OrderPDF } from '../components/OrderPDF';\r\nimport Swal from \"sweetalert2\";\r\nimport { getValueCookie } from '../services/cookieService';\r\nimport { create_Delete_Update_Information, getInformationWithData } from '../services/CABE';\r\nimport { getIndexElement } from '../functions/searchInObject';\r\nimport { confirmCloseAlert } from '../functions/alerts';\r\nimport ModalOrders from '../components/ModalComponent';\r\nimport { formatInputDate, formatInputDateQuery, formatInputDateQuerytoInput } from '../functions/dateFormat';\r\nimport Select from 'react-select';\r\nexport default class PurchaseOrder extends Component {\r\n\r\n    state = {\r\n\r\n        purchaseOrderHeader: {\r\n            NoOrder: '',\r\n            Vendor: {},\r\n            Carrier: '',\r\n            orderDate: '',\r\n            completionDate: '',\r\n            creationDate: '',\r\n            vendorNo: 0,\r\n            vendorName: '',\r\n            comment: '',\r\n            createBy: '',\r\n            State: ''\r\n        },\r\n        companyPrintHeader: [],\r\n        products: [],\r\n        totals: {\r\n            finalquantityOrderedTotal: 0,\r\n            finalquantityOrderedReceived: 0,\r\n            finalTotalCost: 0\r\n        },\r\n        disableHeader: true,\r\n        secureTransaction: false,\r\n        modalPurchase: false,\r\n        oldPurchaseOrderHeader: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ companyPrintHeader: this.getPrintHeaderCompany() })\r\n    }\r\n\r\n    print() {\r\n        console.log(this.state.products)\r\n\r\n    }\r\n\r\n    disableTransactions() {\r\n        this.setState({ secureTransaction: true })\r\n    }\r\n\r\n    enableTransactions() {\r\n        this.setState({ secureTransaction: false })\r\n    }\r\n\r\n\r\n    onTarget = async (e, item) => {\r\n        const temporal = this.state.products\r\n        const ident = e.target.id.split('_')\r\n        const index = temporal.indexOf(item)\r\n        if (index !== -1) {\r\n            if (ident[0] === \"BINPurchase\") {\r\n                temporal[index].BIN = e.target.value\r\n                this.setState({ products: temporal })\r\n            } else if (ident[0] === \"quantityPurchase\") {\r\n                temporal[index].quantity = Number(e.target.value)\r\n                temporal[index].totalCost = Number(e.target.value) * temporal[index].unitPrice\r\n                this.setState({ products: temporal })\r\n                this.calculateTotals()\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    onTargerHeader = async (e) => {\r\n        const varChange = e.target.id\r\n        const temporal = this.state.purchaseOrderHeader\r\n        if (varChange === \"purchaseOrderNo\") {\r\n            await this.getPurchaseOrderHeader()\r\n            const index = getIndexElement(this.state.oldPurchaseOrderHeader, \"OrderNo\", e.target.value)\r\n            if (index === -1) {\r\n                temporal.NoOrder = e.target.value\r\n                this.setState({ purchaseOrderHeader: temporal })\r\n            } else {\r\n                confirmCloseAlert('incorrect', \"The order number is already registered, select a different number or use the autogenerated one\")\r\n                await this.createNewPurchaseOrder()\r\n            }\r\n        } else if (varChange === \"purchaseCarrier\") {\r\n            temporal.Carrier = e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        } else if (varChange === \"purchaseVendor\") {\r\n            temporal.Vendor = e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        } else if (varChange === \"purchaseDate\") {\r\n            temporal.orderDate = e.target.value\r\n            this.setState({ purchaseOrderHeader: temporal })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async createNewPurchaseOrder() {\r\n        this.disableTransactions()\r\n        var data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const noOrder = await getInformationWithData('/purchase/create/newOrderNumber', data)\r\n\r\n        if (noOrder.status.code === 1) {\r\n            var orderNumber = \"PO\"\r\n            for (let a = noOrder.data[0].NoOrder.toString().length; a < 4; a++) {\r\n                orderNumber += \"0\"\r\n            }\r\n\r\n            orderNumber += noOrder.data[0].NoOrder.toString()\r\n\r\n            const temporal = this.state.purchaseOrderHeader\r\n            temporal.NoOrder = orderNumber\r\n            this.setState({ purchaseOrderHeader: temporal, disableHeader: false })\r\n            document.getElementById('purchaseOrderNo').value = this.state.purchaseOrderHeader.NoOrder\r\n        }\r\n\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    async getPurchaseOrderHeader() {\r\n        const data = {\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n        const result = await getInformationWithData('/purchase/get/purchaseOrderHeader', data)\r\n        if (result.status.code === 1) {\r\n            this.setState({ oldPurchaseOrderHeader: result.data })\r\n        }\r\n    }\r\n\r\n    async clearDashBoardPurchaseOrder() {\r\n\r\n        var header = {\r\n            NoOrder: '',\r\n            Vendor: {},\r\n            Carrier: '',\r\n            orderDate: '',\r\n            completionDate: '',\r\n            creationDate: '',\r\n            vendorNo: 0,\r\n            vendorName: '',\r\n            comment: '',\r\n            createBy: '',\r\n            State: ''\r\n        }\r\n        var tot = {\r\n            finalquantityOrderedTotal: 0,\r\n            finalquantityOrderedReceived: 0,\r\n            finalTotalCost: 0\r\n        }\r\n        this.setState({ purchaseOrderHeader: header, products: [], totals: tot, disableHeader: true })\r\n        this.defineHeader()\r\n    }\r\n\r\n    cancelPurchaseOrder() {\r\n        this.disableTransactions()\r\n        Swal.fire({\r\n            title: 'Do you want to discard the actual Purchase Order?',\r\n            backdrop: true,\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Yes',\r\n            denyButtonText: `No`,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(async (result) => {\r\n            if (result !== null && result !== undefined) {\r\n                if (result.isConfirmed) {\r\n                    await this.clearDashBoardPurchaseOrder()\r\n                    Swal.fire('The Purchase Order was canceled!', '', 'info')\r\n                }\r\n            }\r\n\r\n        })\r\n        this.enableTransactions()\r\n    }\r\n    stateInWords(state) {\r\n\r\n        if (state === '') {\r\n            return 'Creating order'\r\n        } else if (state === '1') {\r\n            return 'Order created'\r\n        } else if (state === '2') {\r\n            return 'Order received'\r\n        } else if (state === '3') {\r\n            return 'Order completed and loaded'\r\n        }\r\n\r\n    }\r\n    colorStateText(state) {\r\n\r\n        if (state === '') {\r\n            return 'text-secondary'\r\n        } else if (state === '1') {\r\n            return 'text-primary'\r\n        } else if (state === '2') {\r\n            return 'text-warning'\r\n        } else if (state === '3') {\r\n            return 'text-success'\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    async createPurchaseOrder() {\r\n        this.disableTransactions()\r\n        const temporal = this.state.purchaseOrderHeader\r\n        temporal.State = \"1\"\r\n        this.setState({ purchaseOrderHeader: temporal })\r\n        const data = {\r\n            header: this.state.purchaseOrderHeader,\r\n            products: this.state.products,\r\n            idcompany: getValueCookie('CompanyId'),\r\n            username: getValueCookie('userName'),\r\n            cost: this.state.totals.finalTotalCost,\r\n            totalquant: this.state.totals.finalquantityOrderedReceived,\r\n            coment: ''\r\n        }\r\n        const result = await create_Delete_Update_Information('/purchase/create/purchaseOrder', data)\r\n        if (result.status.code === 1) {\r\n            Swal.fire({\r\n                title: 'Do you want to print the actual Purchase Order?',\r\n                backdrop: true,\r\n                showDenyButton: true,\r\n                confirmButtonText: 'Yes',\r\n                denyButtonText: `No`,\r\n                allowOutsideClick: () => !Swal.isLoading()\r\n            }).then(async (result) => {\r\n                if (result !== null && result !== undefined) {\r\n                    if (result.isConfirmed) {\r\n\r\n                    } else {\r\n                        this.clearDashBoardPurchaseOrder()\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        this.enableTransactions()\r\n    }\r\n\r\n    calculateTotals() {\r\n        var totalquantOrdered = 0\r\n        var totalquantReceived=0\r\n        var totalcost = 0\r\n        const temporal = this.state.products\r\n\r\n        for (const item of temporal) {\r\n            totalquantOrdered += Number(item.quantityOrdered)\r\n            totalquantReceived +=Number(item.quantityReceived)\r\n            totalcost += Number(item.totalCost)\r\n        }\r\n        const temporal2 = this.state.totals\r\n        temporal2.finalquantityOrderedTotal = totalquantOrdered\r\n        temporal2.finalquantityOrderedReceived=totalquantReceived\r\n        temporal2.finalTotalCost = totalcost.toFixed(2)\r\n\r\n\r\n        this.setState({ totals: temporal2 })\r\n    }\r\n\r\n    handleModalOpen = async () => {\r\n        this.getPurchaseOrderHeader()\r\n        await this.setState({ modalPurchase: true })\r\n    }\r\n\r\n    handleModalClose = () => {\r\n\r\n        this.setState({ modalPurchase: false })\r\n    }\r\n\r\n    removeProduct(item) {\r\n        var temporal = this.state.products\r\n        const index = temporal.indexOf(item)\r\n\r\n        if (index !== -1) {\r\n            temporal.splice(index, 1)\r\n            console.log(temporal)\r\n            for (let a = 0; a < temporal.length; a++) {\r\n                document.getElementById(\"BINPurchase_\" + a).value = temporal[a].BIN\r\n                document.getElementById(\"quantityPurchase_\" + a).value = temporal[a].quantity\r\n            }\r\n\r\n\r\n            this.setState({ products: temporal })\r\n            this.calculateTotals()\r\n        }\r\n\r\n    }\r\n\r\n    async SelectOldPurchaseOrder(order) {\r\n        this.handleModalClose()\r\n        console.log(order)\r\n        const data = {\r\n            NoOrder: order.OrderNo,\r\n            idcompany: getValueCookie('CompanyId')\r\n        }\r\n\r\n        const temporal = this.state.purchaseOrderHeader\r\n        temporal.Carrier = order.Carrier\r\n        temporal.NoOrder = order.OrderNo\r\n        temporal.completionDate = formatInputDateQuerytoInput(order.completionDate)\r\n        temporal.orderDate = formatInputDateQuerytoInput(order.OrderDate)\r\n        temporal.creationDate = formatInputDateQuerytoInput(order.CreationDate)\r\n        temporal.comment = order.Comment\r\n        temporal.State = order.Status\r\n        temporal.createBy = order.createBy\r\n        temporal.vendorNo = order.VendorNo\r\n        temporal.vendorName = order.VendorName\r\n        this.defineHeader()\r\n        const detailData = await getInformationWithData('/purchase/get/purchaseOrderDetail', data)\r\n        if (detailData.status.code === 1) {\r\n            this.setState({ purchaseOrderHeader: temporal, disableHeader: false })\r\n            var temporalproducts=[]\r\n            for (const item of detailData.data) {\r\n                const prod = {\r\n                    BIN: null,\r\n                    abbreviatedDesc: \"\",\r\n                    completeDesc: \"\",\r\n                    createBy: \"\",\r\n                    creationDate: \"\",\r\n                    height: \"0\",\r\n                    itemCode: item.ItemCode,\r\n                    itemStatus: 1,\r\n                    itemURLImage: \"\",\r\n                    lastUpdateDate: \"\",\r\n                    length: \"\",\r\n                    quantityOrdered: item.QuantityOrdered,\r\n                    quantityReceived: item.QuantityReceived,\r\n                    totalCost: (item.QuantityReceived*item.UnitCost).toFixed(2),\r\n                    unitPrice: item.UnitCost,\r\n                    upc: \"\",\r\n                    updateBy: \"\",\r\n                    width: \"\",\r\n                }\r\n                temporalproducts.push(prod)\r\n\r\n            }\r\n            this.setState({products:temporalproducts})\r\n            this.calculateTotals()\r\n        }\r\n\r\n\r\n\r\n    }\r\n    defineHeader() {\r\n        const temporal = this.state.purchaseOrderHeader\r\n        document.getElementById('purchaseOrderNo').value = temporal.NoOrder\r\n        document.getElementById('purchaseCarrier').value = temporal.Carrier\r\n        document.getElementById('purchaseVendor').value = temporal.vendorNo + \"|\" + temporal.vendorName\r\n        document.getElementById('purchaseOrderDate').value = temporal.orderDate\r\n        document.getElementById('purchaseCompletionDate').value = temporal.completionDate\r\n        document.getElementById('purchaseComment').value = temporal.comment\r\n    }\r\n\r\n    getPrintHeaderCompany() {\r\n        var header = []\r\n        header.push(getValueCookie('fullName'))\r\n        header.push(getValueCookie('address'))\r\n        header.push(getValueCookie('warehouse'))\r\n        header.push(getValueCookie('website'))\r\n        return header\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='purchaseOrderContainer'>\r\n                <button onClick={() => this.print()}>PRINT</button>\r\n                <p className='text-center display-1 pb-2' >Purchase Order</p>\r\n\r\n                <div>\r\n                    <div className='row pb-5 text-center'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-5'>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button type=\"button\" className=\"btn greenButton btn-lg\" disabled={this.state.secureTransaction} hidden={!this.state.disableHeader} onClick={() => this.createNewPurchaseOrder()}>New Purchase Order <BsCartPlus /></button>\r\n                                <button type=\"button\" className=\"btn btn-secondary btn-lg\" disabled={this.state.secureTransaction} hidden={this.state.disableHeader} onClick={() => this.cancelPurchaseOrder()}>Cancel Purchase Order <AiFillDelete /></button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='col-5'>\r\n                            <div className=\"d-grid gap-2\">\r\n                                <button type=\"button\" className=\"btn brownButton btn-lg\" disabled={this.state.secureTransaction || !this.state.disableHeader} onClick={() => this.handleModalOpen()}>History <BsCheckSquare /></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-2 text-center'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-10'>\r\n                            <div className='row pb-2'>\r\n                                <div className='col-6'>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Order No:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseOrderNo' type=\"text\" onChange={this.onTargerHeader} /></div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Carrier:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseCarrier' type=\"text\" onChange={this.onTargerHeader} /></div>\r\n                                    </div>\r\n                                    <div className='row pb-3'>\r\n                                        <div className='col-12 text-start pText'><p>Comment:</p></div>\r\n                                        <div className='col-12 textAreaGeneral'>\r\n                                            <textarea className=\"form-control\" id='purchaseComment' rows=\"4\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-4 text-start pText'><p>Order State:</p></div>\r\n                                        <div className='col-8 text-start pText'><p className={'fw-bold ' + this.colorStateText(this.state.purchaseOrderHeader.State)}>{this.stateInWords(this.state.purchaseOrderHeader.State)}</p></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-12 text-start pText'><p>Vendor:</p></div>\r\n                                        <div className='col-12'>\r\n                                            <Select className='fs-4 text-start' id='purchaseVendor' onChange={this.onTargerHeader} placeholder=\"Select Vendor\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Date:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseOrderDate' onChange={this.onTargerHeader} type=\"date\" /></div>\r\n                                    </div>\r\n                                    <div className='row pb-4'>\r\n                                        <div className='col-12 text-start pText'><p>Completion date:</p></div>\r\n                                        <div className='col-12'><input className=\"form-control form-control-lg\" id='purchaseCompletionDate' onChange={this.onTargerHeader} type=\"date\" /></div>\r\n                                    </div>\r\n                                    <div className='row pb-2'>\r\n                                        <div className='col-12'><Catalogue disabled={false} nombrePadre={\"PurchaseOrder\"} Padre={this} /></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-1'></div>\r\n                    </div>\r\n                    <div className='row pb-2 pt-3 text-center'>\r\n                        <div className='col-12 pb-3 text-start display-6'>\r\n                            <div className='row'>\r\n                                <div className='col-1'></div>\r\n                                <div className='col-10'>\r\n                                    Order Detail:\r\n                                </div>\r\n                                <div className='col-1'></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12 tb-5 tableFixHead'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Item Code</th>\r\n                                        <th className='bg-dark'>Description</th>\r\n                                        <th className='bg-dark'>BIN</th>\r\n                                        <th className='bg-dark'>{(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\") ? \"Quantity Ordered\" : \"Quantity\"}</th>\r\n                                        <th className='bg-dark' hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")}>Quantity Received</th>\r\n                                        <th className='bg-dark'>Standar Cost</th>\r\n                                        <th className='bg-dark'>Real Standar Cost</th>\r\n                                        <th className='bg-dark'>Total Cost</th>\r\n                                        <th className='bg-dark'></th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {this.state.products.map((product, i) => (\r\n                                        <tr className='text-center' key={i}>\r\n                                            <td className='text-start'>{product.itemCode}</td>\r\n                                            <td className='text-start'>{product.abbreviatedDesc}</td>\r\n                                            <td>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"text\" id={'BINPurchase_' + i} defaultValue={product.BIN} className=\"form-control text-center\" onChange={(e) => this.onTarget(e, product)} />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"number\" id={'quantityOrderPurchase_' + i} min={0} defaultValue={product.quantityOrdered} onChange={(e) => this.onTarget(e, product)} className=\"form-control text-end\" />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")}>\r\n                                                <div className=\"input-group input-group-lg\">\r\n                                                    <input type=\"number\" id={'quantityReceivedPurchase_' + i} min={0} defaultValue={product.quantityReceived} onChange={(e) => this.onTarget(e, product)} className=\"form-control text-end\" />\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className='text-end'>$ {product.unitPrice}</td>\r\n                                            <td className='text-end'>$ {product.unitPrice}</td>\r\n                                            <td className='text-end'>$ {product.totalCost}</td>\r\n                                            <td><button onClick={() => this.removeProduct(product)} className='btn btn-danger'><AiOutlineCloseCircle /></button></td>\r\n                                        </tr>\r\n\r\n                                    ))}\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>TOTAL:</td>\r\n                                        <td className='text-end'>{this.state.totals.finalquantityOrderedTotal}</td>\r\n                                        <td hidden={!(this.state.purchaseOrderHeader.State === \"2\" || this.state.purchaseOrderHeader.State === \"3\")} className='text-end'>{this.state.totals.finalquantityOrderedReceived}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td className='text-end'>$ {this.state.totals.finalTotalCost}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row  pb-4 text-center'>\r\n                    <div className='col-1'></div>\r\n                    <div className='col-5'>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button type=\"button\" disabled={this.state.disableHeader || this.state.secureTransaction} className=\"btn yellowButton btn-lg\" onClick={() => this.createPurchaseOrder()}>Save Order <AiTwotoneSave /></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-5'>\r\n                        <OrderPDF disabled={this.state.disableHeader || this.state.secureTransaction} colorButton=\"orangeButton\" title=\"Purchase Order Print\"\r\n                            companyLogo={getValueCookie('CompanyLogo')}\r\n                            OrderTitle=\"Purchase Order\"\r\n                            contactInfo={this.state.companyPrintHeader}\r\n                            OrderInfo1={[\"Order No: \" + this.state.purchaseOrderHeader.NoOrder, \"Vendor: \" + this.state.purchaseOrderHeader.vendorName, \"Carrier: \" + this.state.purchaseOrderHeader.Carrier, \"Date: \" + formatInputDate(this.state.purchaseOrderHeader.orderDate)]}\r\n                            OrderInfo2={[\"Order State: \" + this.stateInWords(this.state.purchaseOrderHeader.State), \"Order by: \" + this.state.purchaseOrderHeader.createBy, \"Printed by: \" + getValueCookie('userName')]}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                </div>\r\n                <ModalOrders title={'Purchase Orders'} show={this.state.modalPurchase} close={() => this.handleModalClose()}>\r\n                    <div className='row pt-3'>\r\n                        <div className='col-12'>\r\n                            <table className='table'>\r\n                                <thead className='thead'>\r\n                                    <tr className='text-light text-center'>\r\n                                        <th className='bg-dark'>Order No</th>\r\n                                        <th className='bg-dark'>Order Date</th>\r\n                                        <th className='bg-dark'>Comment</th>\r\n                                        <th className='bg-dark'>Vendor</th>\r\n                                        <th className='bg-dark'>Carrier</th>\r\n                                        <th className='bg-dark'>Total Quantity</th>\r\n                                        <th className='bg-dark'>Total Cost</th>\r\n                                        <th className='bg-dark'>Status</th>\r\n                                        <th className='bg-dark'>Create by</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='tbody'>\r\n                                    {this.state.oldPurchaseOrderHeader.map((item, i) => (\r\n                                        <tr onClick={() => this.SelectOldPurchaseOrder(item)} className='text-center' key={i}>\r\n                                            <td>{item.OrderNo}</td>\r\n                                            <td>{formatInputDateQuery(item.OrderDate)}</td>\r\n                                            <td className='text-start'>{item.Comment}</td>\r\n                                            <td>{item.VendorName}</td>\r\n                                            <td>{item.Carrier}</td>\r\n                                            <td className='text-end'>{item.TotalQuantity}</td>\r\n                                            <td className='text-end'>$ {item.TotalCost}</td>\r\n                                            <td className={'' + this.colorStateText(item.Status)}>{this.stateInWords(item.Status)}</td>\r\n                                            <td>{item.createBy}</td>\r\n                                        </tr>\r\n                                    ))}\r\n\r\n                                </tbody>\r\n                                <tfoot className='tfoot'>\r\n\r\n                                    <tr className='bg-secondary text-light'>\r\n                                    </tr>\r\n                                </tfoot>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </ModalOrders>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { Component } from \"react\"\r\nimport CompanyDashBoard from \"../pages/CompanyDashBoard\"\r\nimport {Menu} from \"../components/Menu\"\r\nimport Footer from \"../components/Footer\"\r\nimport CycleInventory from \"../pages/CycleInvetory\"\r\nimport CycleInvetoryGraph from \"../pages/CycleInventoryGraph\"\r\nimport KPI from \"../pages/KPI\"\r\nimport Inventory from \"../pages/Inventory\"\r\nimport Lobby from \"../pages/Lobby\"\r\nimport PikingSystem from \"../pages/PikingSystem\"\r\nimport PurchaseOrder from \"../pages/PurchaseOrder\"\r\nimport \"../css/general-style.css\"\r\n\r\nexport default class App extends Component {\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"page\" id=\"CompanyDashBoard\">\r\n                    <CompanyDashBoard />\r\n                </div>\r\n\r\n                <div id=\"GeneralPages\" className=\"page\">\r\n                    <Menu/>\r\n                    <div className=\"container-fluid generalContainer contPrincipal\" id=\"actualPage\">\r\n\r\n                        <div id=\"Lobby\" className=\"page\">\r\n                            <Lobby/>\r\n                        </div>\r\n\r\n                        <div id=\"CycleInventory\" className=\"page\">\r\n                            <CycleInventory />\r\n                        </div>\r\n                        <div id=\"CycleInventoryGraph\" className=\"page\">\r\n                            <CycleInvetoryGraph/>\r\n                        </div>\r\n\r\n                        <div id=\"KPIGraph\" className=\"page\">\r\n                            <KPI/>\r\n                        </div>\r\n\r\n                        <div id=\"Inventory\" className='page'>\r\n                            <Inventory/>\r\n                        </div>\r\n                        <div id=\"PurchaseOrder\" className='page'>\r\n                            <PurchaseOrder/>\r\n                        </div>\r\n\r\n                        <div id=\"PikingSystem\" className='page'>\r\n                            <PikingSystem/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport \"../css/login-style.css\"\r\nimport \"../css/general-style.css\"\r\nimport Footer from '../components/Footer'\r\nimport { AiOutlineUser, AiOutlineKey, AiOutlineLogin } from 'react-icons/ai';\r\nimport { selectWithDataService } from '../services/auth/authservices';\r\nimport { getValueCookie, setNewCookie } from '../services/cookieService';\r\nimport {automaticCloseAlert} from'../functions/alerts'\r\nimport md5 from 'md5'\r\nimport { closeSession } from \"../functions/closeSession\"\r\nimport App from '../components/App';\r\nimport { OpenCompanyDashBoard, OpenLogin, OpenLobby } from '../functions/pagesFunction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n  state = {\r\n    loginStorage: {\r\n      userName: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  onChangeById = e => {\r\n    var idState = e.target.id.split('_')\r\n    const temp = this.state.loginStorage\r\n    if (idState.length === 2) {\r\n      temp[idState[1]] = e.target.value\r\n    }\r\n\r\n    this.setState({ loginStorage: temp })\r\n  }\r\n\r\n  onKeyDown = async e => {\r\n    if (e.key === 'Enter') {\r\n      await this.Login()\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(getValueCookie('userName')){\r\n      if(getValueCookie('Company')){\r\n        OpenLobby()\r\n        //OpenPurchaseOrder()\r\n        //OpenCycleInventory()\r\n        \r\n      }else{\r\n        OpenCompanyDashBoard()\r\n      }\r\n    }else{\r\n      OpenLogin()\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  async Login() {\r\n    const temp = this.state.loginStorage\r\n    const btn = document.getElementById('btn_signin');\r\n    const btn_logo = btn.innerHTML;\r\n    const datos = {\r\n      userName: temp.userName,\r\n      password: md5(temp.password),\r\n    }\r\n    btn.innerHTML = 'Loading...';\r\n    btn.disabled = true;\r\n    const datos2 = await selectWithDataService(datos, \"/login\")\r\n    if (datos2 != null) {\r\n      if (datos2.status.code === 1) {\r\n        if (datos2.token !== 'invalid') {\r\n          await automaticCloseAlert('correct', 'Welcome: ' + datos2.data.name + \" \" + datos2.data.surname)\r\n          setNewCookie('sessionAuthToken', datos2.token, 50)\r\n          setNewCookie('userName', datos2.data.userName, 50)\r\n          setNewCookie('name', datos2.data.name, 50)\r\n          setNewCookie('surname', datos2.data.surname, 50)\r\n          window.location.reload()\r\n          //await OpenCompanyDashBoard()\r\n        } else {\r\n          closeSession()\r\n          automaticCloseAlert('incorrect', 'Your  Username or Password are incorrect. Please try again')\r\n\r\n        }\r\n      }\r\n    }\r\n    btn.innerHTML = btn_logo;\r\n    btn.disabled = false;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id='login' className='page'>\r\n         \r\n          <div className='container-fluid pb-1 contPrincipal'>\r\n            <div className='container'>\r\n              <div className='row pt-5 pb-3 d-flex justify-content-center'>\r\n                <div className='col-9 contLogin'>\r\n                  <div className=\"border border-5 border-primary\"></div>\r\n                  <div className='row d-flex justify-content-center pt-5   '>\r\n                    <p className='display-2 '>Login</p>\r\n\r\n                    <div className='row d-flex justify-content-center pt-5 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineUser /></span>\r\n                          <input type=\"text\" id='Login_userName' onChange={this.onChangeById} onKeyDown={this.onKeyDown} className=\"form-control\" placeholder='Username' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3'>\r\n                      <div className='col-11'>\r\n                        <div className=\"input-group input-group-lg\">\r\n                          <span className=\"input-group-text\"><AiOutlineKey /></span>\r\n                          <input type=\"password\" id='Login_password' onKeyDown={this.onKeyDown} onChange={this.onChangeById} className=\"form-control\" placeholder='Password' />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className='row d-flex justify-content-center pt-4 pb-3 text-center'>\r\n                      <div className='col-7'>\r\n                        <button id='btn_signin' type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => this.Login()}>Sign in <AiOutlineLogin /></button>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        \r\n        <div id='App' className='page'>\r\n          <App />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport Login from './pages/Login';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Login/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}